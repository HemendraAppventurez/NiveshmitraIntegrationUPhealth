@model CCSHealthFamilyWelfareDept.Models.PasswordChangeModel
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/_AdminAccountLayout.cshtml";
}

<div class="col-md-6 lg-left">
    <div class="instruction">
        <h3>Important Instruction !</h3>
        <h4>Instruction for password</h4>
        <div class="nano-content" id="demo">
            <ul>
                <li>Password must contains at-least <strong>1 lower case letter, 1 upper case letter, 1 digit and 1 special character</strong> and must <strong>not be less than 8 characters </strong>and <strong>more than 16 characters!</strong></li>
                
            </ul>
        </div>
    </div>
</div>
<div class="col-md-6 bg-color">
    <div class="row">
        <div class="lg-right">
            <ul class="nav nav-pills">
                <li class="active"><a data-toggle="pill" href="javascript:;">Change Password</a></li>
            </ul>
            <div class="tab-content">
                <div id="Login" class="tab-pane fade in active">
                    @using (Html.BeginForm("ChangePassword", "AdminAccount", FormMethod.Post, new { @id = "FrmChangePassword" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="login-content">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                    <label>Old Password<span style="color: red;">*</span></label>
                                    @Html.PasswordFor(m => m.oldPassword, new { @class = "form-control", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.oldPassword)
                                </div>
                                </div>
                                <div class="col-md-12">
                                    <div class="form-group">
                                    <label>New Password<span style="color: red;">*</span></label>
                                    @Html.PasswordFor(m => m.newPassword, new { @class = "form-control", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.newPassword)
                                </div>
                                </div>
                                <div class="col-md-12">
                                     <div class="form-group">
                                    <label>Confirm Password<span style="color: red;">*</span></label>
                                    @Html.PasswordFor(m => m.confirmPassword, new { @class = "form-control", autocomplete = "off" })
                                    @Html.ValidationMessageFor(m => m.confirmPassword)
                                </div>
                                </div>

                            </div>
                            <div class="row">
                                @Html.HiddenFor(m => m.seed)
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <button type="submit" class="btn btn-warning btn-block">Submit</button> 
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <a href="@Url.Action("Login", "AdminAccount")" class="btn btn-default btn-block">Cancel</a>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    
    $(function () {
        $("#FrmChangePassword").submit(function (event) {
             
            var val = $("#FrmChangePassword").validate();
            val.form();
            val.showErrors();

            if (val.valid()) {
                var seed = $("#seed").val();
                var oldpassword = $("#oldPassword").val();
                var newpassword = $("#newPassword").val();
                var confpassword = $("#confirmPassword").val();

                var hasholdPwd = MD5(oldpassword);
                var HasNewPwd = MD5(newpassword);
                var hasCnfPwd = MD5(confpassword);

                hasholdPwd = MD5(hasholdPwd.toUpperCase() + seed);
                $("#oldPassword").val(hasholdPwd);
                $("#newPassword").val(HasNewPwd);
                $("#confirmPassword").val(hasCnfPwd);
            }
            else {
                event.preventDefault();
            }

        });
    });

    $(function () {
        if ('@ViewBag.msg' != '') {
            $('.field-validation-error').hide();
            swal("", "@ViewBag.msg", "@ViewBag.MsgStatus");
        } 
    });
</script>
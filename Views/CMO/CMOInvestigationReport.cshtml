@model CCSHealthFamilyWelfareDept.Models.IPCApplicationform
@{
    ViewBag.Title = "CMOInvestigationReport";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .css-serial {
        counter-reset: serial-number; /* Set the serial number counter to 0 */
    }

        .css-serial td:first-child:before {
            counter-increment: serial-number; /* Increment the serial number counter */
            content: counter(serial-number); /* Display the counter */
        }
</style>

<div class="content-title">
    <h3 class="main-title">Inspection Form</h3>

</div>

@using (Html.BeginForm("CMOInvestigationReport", "CMO", FormMethod.Post, new { @id = "frmData" }))
{
    @Html.AntiForgeryToken()
    <div id="content" class="dashboard padding-20 margin-bottom-50">
       
            <div class="row">
             

           

                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>Complaint / Inspection Report Details</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <div class="row">

                                 <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Name of Establishment <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.NameEstablishment, new { @class = "form-control", tabindex = "1",@maxlength = "100"})
                                        @Html.ValidationMessageFor(m => m.NameEstablishment, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Name of Incharge/Owner <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.NameofIncharge, new { @class = "form-control", tabindex = "1"})
                                        @Html.ValidationMessageFor(m => m.NameofIncharge, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Establishment Address <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.EstablishmentAddress, new { @class = "form-control", tabindex = "1"})
                                        @Html.ValidationMessageFor(m => m.EstablishmentAddress, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                  <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Contact No of Incharge/Owner <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.ContactIncharge, new { @class = "form-control", tabindex = "1"})
                                        @Html.ValidationMessageFor(m => m.ContactIncharge, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                   <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Email Id of Incharge/Owner <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.EmailId, new { @class = "form-control", tabindex = "1"})
                                        @Html.ValidationMessageFor(m => m.EmailId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                 <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Action Taken <span class="star">*</span></label>

                                        @Html.DropDownList("ActionTakenId", new List<SelectListItem>
{
    new SelectListItem{ Text="Select", Value = "0" },
    new SelectListItem{ Text="Notice", Value = "1" },
    new SelectListItem{ Text="FIR Application/Recieving Copy ", Value = "2" },
    new SelectListItem{ Text="Seal Order", Value = "3" },
     new SelectListItem{ Text="License Rejection", Value = "4" },
 }, new { @class = "form-control valid", @tabindex = "1" }) 
                                      
                                        @Html.ValidationMessageFor(m => m.ActionTakenId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4" style="height:80px">
                                    <div class="form-group">
                                        <label>File Upload (jpg, jpeg, pdf File Upload) <span class="star">*</span></label>
                                         @Html.TextBoxFor(model => model.UploadFile, new { @class = "form_control", @type = "file", @onchange = "UploadFileIPCfile(this);", @placeholder = "Upload Image" })
                    @Html.HiddenFor(model => model.UploadFilePath)
                    @*<input type="hidden"  id="PhotosPathId" />*@
                    @Html.ValidationMessageFor(model => model.UploadFile, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Remark <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.Remark, new { @class = "form-control", tabindex = "1",@maxlength = "100"})
                                        @Html.ValidationMessageFor(m => m.Remark, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                 
                                   <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Inspection Date <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.InspectionDate, new { @class = "datepicker-here form-control", tabindex = "3", @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy" })
                                        @Html.ValidationMessageFor(m => m.InspectionDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                
                                
                              <div class="col-md-3 col-md-offset-4">
                                        <button type="submit" class="btn btn-block btn-primary">Save</button>

                                    </div>
                                    <div class="col-md-2">
                                        <a href="#" class="btn btn-block btn-warning">Reset</a>
                                    </div>
                            
                            </div>
                        </div>
                    </div>
                </div>
                
            </div>
        
       
      
    </div>
}

<div class="clearfix"></div>


    <script>
        function UploadFileIPCfile(obj) {

        /*  debugger;*/
        var fileId = $(obj).attr("id");

        var ext = obj.value.match(/\.(.+)$/)[1];

        switch (ext) {          
            case 'jpg':
            case 'jpeg':
            case 'pdf':
                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
              
                if (fileSize > 50) {
                    swal("", "Maximum 50MB file size is allowed", "warning");
                    return false;
                }

                else {
                    var data = new FormData();
                    var files = $("#" + fileId).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $.ajax({
                        url: '@Url.Action("UploadFileIPC", "CMO")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            $("#UploadFilePath").val(response[1]);
                        },
                        error: function () {
                        }
                    });

                }
                break;
            default:
                swal("", 'Invalid file type. Only jpg & Pdf files is allowed', "warning");
                this.value = '';
                return false;
        }
    }
</script>

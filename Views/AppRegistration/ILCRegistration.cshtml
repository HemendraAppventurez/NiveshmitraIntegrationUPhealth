@model CCSHealthFamilyWelfareDept.Models.ILCModel
@{
    ViewBag.Title = "ILCRegistration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<div class="content-title">
    <h3 class="main-title">Application For Issuance of Illness Certificate                  
    </h3>
</div>
<div id="content" class="dashboard padding-20 margin-bottom-50">
    @using (Html.BeginForm("ILCRegistration", "appRegistration", FormMethod.Post, new { @id = "frmdata" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(m => m.regisIdILC)
        @Html.HiddenFor(m => m.step)
        @Html.HiddenFor(m => m.stepValue)
        @Html.HiddenFor(mbox => mbox.Extstep)   
        <div class="row">
            @if (Model.step == 0 || Model.stepValue == 0)
            {
                <div class="divStep1">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading bg-redd">
                                <span class="title elipsis">
                                    <h4 class="color-white">Step 1</h4>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="title elipsis">
                                    <h4>Reason For Application</h4>
                                </span>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Reason <span class="star">*</span></label>
                                            @Html.TextAreaFor(m => m.reason, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.reason, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>OPD Receipt Number <span class="text-danger">*</span></label>
                                            @Html.TextBoxFor(m => m.opdReceiptno, new { @class = "form-control", tabindex = 2 })
                                            @Html.ValidationMessageFor(m => m.opdReceiptno, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="title elipsis">
                                    <h4>Personal Details</h4>
                                </span>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Full Name <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.fullName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.fullName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Father’s name <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.fatherName, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.fatherName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>DOB <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.dob, new { @class = "datepicker-here form-control", @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy" })
                                            @Html.ValidationMessageFor(m => m.dob, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Gender <span class="star">*</span></label>
                                            <div class="form-control" style="padding: 6px 3px">
                                                <label>
                                                    @Html.RadioButtonFor(m => m.gender, "Male", new { @class = " disgender" }) Male
                                                </label>
                                                <label>
                                                    @Html.RadioButtonFor(m => m.gender, "Female", new { @class = " disgender" }) Female
                                                </label>
                                                <label>
                                                    @Html.RadioButtonFor(m => m.gender, "Transgender", new { @class = " disgender" }) Transgender
                                                </label>
                                            </div>
                                            @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Category <span class="star">*</span></label>
                                            @Html.DropDownListFor(m => m.categoryId, (IEnumerable<SelectListItem>)ViewBag.Category, "--Select--", new { @class = "form-control select" })
                                            @Html.ValidationMessageFor(m => m.categoryId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Mobile No. <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.appmobileNo, new { @class = "form-control", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                            @Html.ValidationMessageFor(m => m.appmobileNo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Email Address</label>
                                            @Html.TextBoxFor(m => m.emailId, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.emailId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Address <span class="text-danger">*</span></label>
                                            @Html.TextBoxFor(m => m.opdAddress, new { @class = "form-control", tabindex = 5 })
                                            @Html.ValidationMessageFor(m => m.opdAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>State <span class="text-danger">*</span></label>
                                            @Html.DropDownListFor(m => m.opdStateId, (IEnumerable<SelectListItem>)ViewBag.State, "--Select--", new { tabindex = 7, @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.opdStateId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>District <span class="text-danger">*</span></label>
                                            @Html.DropDownListFor(m => m.opdDistrictId, (IEnumerable<SelectListItem>)ViewBag.District, "--Select--", new { @class = "form-control", tabindex = 4 })
                                            @Html.ValidationMessageFor(m => m.opdDistrictId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Pincode </label>
                                            @Html.TextBoxFor(m => m.opdPincode, new { @class = "form-control", @maxlength = 6, tabindex = 6, @onkeypress = "return isNumberKey(event);" })
                                            @Html.ValidationMessageFor(m => m.opdPincode, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Mark Of Identification <span class="text-danger">*</span></label>
                                            @Html.TextAreaFor(m => m.markOfIdentification, new { @class = "form-control", tabindex = 6 })
                                            @Html.ValidationMessageFor(m => m.markOfIdentification, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (Model.step == 1 || Model.stepValue == 1)
            {
                <div class="divStep2">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading bg-redd">
                                <span class="title elipsis">
                                    <h4 class="color-white">Step 2</h4>
                                </span>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>Illness Details</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Doctor Name </label>
                                        @Html.TextBoxFor(m => m.doctorName, new { @class = "form-control", tabindex = 8, @placeholder = "Doctor Name" })
                                        @Html.ValidationMessageFor(m => m.doctorName, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Date of Check-up <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.opdDate, new { @class = "form-control datepicker-here", tabindex = 3, @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy" })
                                        @Html.ValidationMessageFor(m => m.opdDate, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Treatment From <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.treatmentFrom, new { @class = "datepicker-here form-control tf", tabindex = 9, @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy", @onblur = "calDayDiff();" })
                                        @Html.ValidationMessageFor(m => m.treatmentFrom, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Treatment To <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.treatmentto, new { @class = "datepicker-here form-control tt", tabindex = 10, @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy", @onblur = "calDayDiff();" })
                                        @Html.ValidationMessageFor(m => m.treatmentto, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>No Of Days For Rest<span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.NoOfDays, new { @class = "form-control", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.NoOfDays, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Illness Details <span class="star">*</span></label>
                                        @Html.TextAreaFor(m => m.illnessDetail, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.illnessDetail, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Photo Id Type <span class="star">*</span></label>
                                        @Html.DropDownListFor(m => m.idTypeId, (IEnumerable<SelectListItem>)ViewBag.IdType, "--Select--", new { @class = "form-control", tabindex = 4 })
                                        @Html.HiddenFor(m => m.idTypeId)
                                        @Html.ValidationMessageFor(m => m.idTypeId, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Photo Id No. <span class="star">*</span></label>
                                        @Html.TextBoxFor(m => m.idNumber, new { @class = "form-control", tabindex = 8 })
                                        @Html.ValidationMessageFor(m => m.idNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="form-group padding-top-30" id="hdndoc" style="display: none;">
                                        <a href="#" id="UploadedDoc" target="_blank" title="Download"><i class="fa fa-2x fa-download"></i></a>
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
            }
            else if (Model.step == 2 || Model.stepValue == 2)
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading bg-redd">
                                <span class="title elipsis">
                                    <h4 class="color-white">Step 3</h4>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="title elipsis">
                                    <h4>Check List</h4>
                                </span>
                            </div>
                            <div class="panel-body">
                                <span id="spanmember" style="display: none" class="text-danger">Please select All Document as they are required</span>
                                <div class="row">
                                    @foreach (var v in ViewBag.CheckListILC)
                                    {
                                        <div class="form-group">
                                            <div class="col-md-5">
                                                <i class="hidden">@v.Value</i>
                                                <label class="l-20">@v.Text</label>
                                                <span id="@v.Value" class="text-danger">*</span>
                                            </div>
                                            <div class="col-md-1">
                                                <input type="checkbox" name="chk_checkList" value="@v.Value">
                                            </div>
                                        </div>
                                    }
                                </div>
                                <div class="row">
                                    Note:-Kindly collect photo copy of document checked by you.
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            }
            else if (Model.Extstep == 1)
            {
                <div class="row">
                    <div class="col-md-12">
                        <div class="panel panel-default">
                            <div class="panel-heading bg-redd">
                                <span class="title elipsis">
                                    <h4 class="color-white">Form To Extend Data</h4>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 ext">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="title elipsis">
                                    <h4>Preview</h4>
                                </span>
                            </div>
                            <div class="panel-body">
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Reason</label>
                                    </div>
                                    <div class="col-md-9">
                                        @Html.TextBoxFor(m => m.reason, new { @class = "form-control", @maxlength = "10" })
                                        @Html.ValidationMessageFor(m => m.reason, "", new { @class = "text-danger" })
                                        @*@Model.reason*@
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <h4>Illness Details</h4>

                                <div class="form-group">

                                    <div class="col-md-3">
                                        <label>OPD Receipt Number</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.opdReceiptno
                                    </div>
                                    <div class="col-md-3">
                                        <label>Health Unit</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.forwardtypeName
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>District</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.healthUnitDistrictName
                                    </div>
                                    <div class="col-md-3">
                                        <label>Hospital Name</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.forwardtoName
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>

                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Doctor Name</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.doctorName
                                    </div>
                                    <div class="col-md-3">
                                        <label>Date of Check-up</label>
                                    </div>
                                    <div class="col-md-3">
                                        @DateTime.Parse(@Model.opdDate).ToShortDateString()
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>

                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Treatment From</label>
                                    </div>
                                    <div class="col-md-3">
                                        @DateTime.Parse(@Model.treatmentFrom).ToShortDateString()
                                    </div>

                                    <div class="col-md-3">
                                        <label>Treatment To</label>
                                    </div>
                                    <div class="col-md-3">
                                        @DateTime.Parse(@Model.treatmentto).ToShortDateString()
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Illness Details</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.illnessDetail
                                    </div>
                                    @if (Model.opdFilePath != "")
                                    {
                                        <div class="col-md-3">
                                            <label>OPD Reciept</label>
                                        </div>
                                        <div class="col-md-3">
                                            <label>Submitted By CHC</label>
                                        </div>
                                    }
                                </div>
                                <div class="clearfix"></div>
                                <h4>Personal Details</h4>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Full Name</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.fullName
                                    </div>
                                    <div class="col-md-3">
                                        <label>Father Name</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.fatherName
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>DOB</label>
                                    </div>
                                    <div class="col-md-3">
                                        @DateTime.Parse(@Model.dob).ToShortDateString()
                                    </div>
                                    <div class="col-md-3">
                                        <label>Gender</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.gender
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Category</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.categoryName
                                    </div>

                                    <div class="col-md-3">
                                        <label>Mobile No. </label>
                                    </div>
                                    <div class="col-md-3">
                                        @Html.TextBoxFor(m => m.appmobileNo, new { @class = "form-control", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                        @Html.ValidationMessageFor(m => m.appmobileNo, "", new { @class = "text-danger" })
                                        @*@Model.mobileNo*@
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Email Id</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.emailId
                                    </div>
                                    <div class="col-md-3">
                                        <label>Address</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.opdAddress
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clear-fix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>State</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.StateName
                                    </div>
                                    <div class="col-md-3">
                                        <label>District</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.DistrictName
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Pincode</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.opdPincode
                                    </div>
                                    <div class="col-md-3">
                                        <label>Mark Of Identification</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.markOfIdentification
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                                <h4>Documents</h4>
                                <div class="form-group">
                                    <div class="col-md-3">
                                        <label>Photo Id Type</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.idTypeName
                                    </div>
                                    <div class="col-md-3">
                                        <label>Photo Id Number</label>
                                    </div>
                                    <div class="col-md-3">
                                        @Model.idNumber
                                    </div>
                                    <div class="clearfix"></div>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12 ext">
                        <div class="panel panel-default">
                            <div class="panel-heading">
                                <span class="title elipsis">
                                    <h4>Detail For Extended Days</h4>
                                </span>
                            </div>
                            <div class="panel-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>OPD Receipt Number <span class="text-danger">*</span></label>
                                            @Html.TextBoxFor(m => m.extOpdReceiptno, new { @class = "form-control", tabindex = 2 })
                                            @Html.ValidationMessageFor(m => m.extOpdReceiptno, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>New Inspected Date <span class="text-danger">*</span></label>
                                            @Html.TextBoxFor(m => m.extInspectedDate, new { @class = "form-control datepicker-here", tabindex = 3, @data_language = "en", @readonly = "true", @placeholder = "dd/mm/yyyy" })
                                            @Html.ValidationMessageFor(m => m.extInspectedDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Doctor Name </label>
                                            @Html.TextBoxFor(m => m.extDoctorName, new { @class = "form-control", tabindex = 8, @placeholder = "Doctor Name" })
                                            @Html.ValidationMessageFor(m => m.extDoctorName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Treatment From <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.extTreatmentFrom, new { @class = "datepicker-here form-control F", tabindex = 9, @data_language = "en", @readonly = "true", @onblur = "calDay();", @placeholder = "dd/mm/yyyy" })
                                            @Html.ValidationMessageFor(m => m.extTreatmentFrom, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>Treatment To <span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.extTreatmentto, new { @class = "datepicker-here form-control T", tabindex = 10, @data_language = "en", @onblur = "calDay();", @readonly = "true", @placeholder = "dd/mm/yyyy" })
                                            @Html.ValidationMessageFor(m => m.extTreatmentto, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label>No Of Days<span class="star">*</span></label>
                                            @Html.TextBoxFor(m => m.extNoOfDays, new { @class = "form-control", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.extNoOfDays, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="clearfix"></div>
                                    <div class="col-md-12">
                                        <span id="extspanmember" style="display: none" class="text-danger">Please select All Document as they are required</span>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>
                                                @Html.CheckBoxFor(m => m.isNewOPDFile, new { tabindex = "20" })
                                                OPD Receipt.<span class="star">*</span></label>
                                            @Html.ValidationMessageFor(m => m.isNewOPDFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>
                                                @Html.CheckBoxFor(m => m.extPhotoId, new { tabindex = "20" })
                                                Photo Id.<span class="star">*</span></label>
                                            @Html.ValidationMessageFor(m => m.extPhotoId, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="clearfix"></div>
                </div>
            }
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="form-group">
                                    @if (Model.Extstep != 0)
                                    {
                                        if (Model.Extstep == 1)
                                        {
                                        <div class="col-md-3 ">
                                            <button type="submit" class="btn btn-block btn-primary" id="btnsubmit2">Save</button>
                                        </div>
                                        }
                                    }
                                    @if ((Model.stepValue == -1 || Model.stepValue > 0) && Model.step != 0 && Model.Extstep == 0)
                                    {                                   
                                        <div class="col-md-2 col-md-offset-2">
                                            <a href="@Url.Action("ILCRegistration", "appRegistration", new { regisId = @OTPL_Imp.CustomCryptography.Encrypt(@Model.regisIdILC.ToString()), stepValue = Convert.ToInt32(Session["stepValue"]) - 1 })" class="btn btn-block btn-success">Back</a>
                                        </div>                                
                                    }
                                    @if (Model.Extstep == 0)
                                    {
                                        <div class="col-md-3 ">
                                            <button type="submit" class="btn btn-block btn-primary" id="btnsubmit">@ViewBag.Submit</button>
                                        </div>
                                        <div class="col-md-2">
                                            <a href="@Url.Action("ILCRegistration", "AppRegistration")" class="btn btn-block btn-warning">Reset</a>
                                        </div>
                                    }
                                    @if ((Model.step < 3 && Model.step != 0 && Model.step - 1 >= Model.stepValue && Model.stepValue != -1))
                                    {
                                        <div class="col-md-2 ">
                                            <a href="@Url.Action("ILCRegistration", "appRegistration", new { regisId = @OTPL_Imp.CustomCryptography.Encrypt(@Model.regisIdILC.ToString()), stepValue = (Convert.ToInt32(Session["stepValue"]) + 1) })" class="btn btn-block btn-success">Next</a>
                                        </div>  
                                    }

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    $(function () {

        if ('@TempData["Message"]' != '' && '@TempData["status"]' != '') {
            swal("", '@TempData["Message"]', '@TempData["status"]');
        }
        if ('@TempData["distILC"]' != '') {
            binddist($("#opdStateId").val());
        }
    });
    function UploadFile(Obj) {
        var ext = Obj.value.match(/\.(.+)$/)[1];
        var Id = $(Obj).attr("Id");

        switch (ext) {
            case 'pdf':
            case 'jpg':
                var fileSize = ($("#" + Id)[0].files[0].size / 1024 / 1024);
                if (fileSize > 2) {
                    swal("", "Maximum 2MB file size are allowed", "warning");
                    return false;
                }
                else {
                    var data = new FormData();
                    var files = $("#" + Id).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $.ajax({
                        url: '@Url.Action("UploadFile", "ILC")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            $("#" + Id + "Path").val(response[1]);


                            $("#" + Id + "VALUE").show();
                            var Url = response[1].replace('~/', '');
                            $("." + Id + "doc").prop('href', '@Url.Content("~/")' + Url + '?' + new Date().getTime().toString());
                            return false;
                        },
                        error: function () {

                        }
                    });

                }
                break;
            default:
                swal("", 'Invalid File Format only pdf and jpg files are allowed!', "warning");
                this.value = '';
                return false;
        }
    }

    function isNumberKey(evt) {
        debugger;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }

    var strDate = @DateTime.Now.Year + "/" + @DateTime.Now.Month + "/" + @DateTime.Now.Day + "";

    $('#dob').datepicker({
        maxDate: new Date(strDate),
        autoClose: true
    });

    $('#opdDate').datepicker({

        maxDate: new Date(strDate),
        onSelect: function (selectedDate) {
            var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
            selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
            var mindate = new Date(selectedDate);
            mindate.setDate(mindate.getDate());
            $("#treatmentFrom").datepicker({ minDate: mindate, autoClose: true });

        },
        autoClose: true
    });
    $('#treatmentFrom').datepicker({
        minDate: new Date(strDate),
        onSelect: function (selectedDate) {
            var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
            selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
            var mindate = new Date(selectedDate);
            mindate.setDate(mindate.getDate() + 1);
            $("#treatmentto").datepicker({ minDate: mindate, autoClose: true });
        },
        autoClose: true
    });
    $('#treatmentto').datepicker({
        minDate: new Date(strDate),
        onSelect: function (selectedDate) {
            var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
            selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
            var maxdate = new Date(selectedDate);
            maxdate.setDate(maxdate.getDate() - 1);
            $("#treatmentFrom").datepicker({ maxDate: maxdate, autoClose: true });
        },
        autoClose: true
    });
    $('#extInspectedDate').datepicker({

        maxDate: new Date(strDate),
        onSelect: function (selectedDate) {
            if (IsSecondDateGreater(selectedDate, '@TempData["opdDate"]')) {
                swal("", "New Inspection Date must be greater than Date Of Check-Up", "warning");
                $('#extInspectedDate').val('');
            }
            var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
            selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
            var mindate = new Date(selectedDate);
            mindate.setDate(mindate.getDate());
            $("#extTreatmentFrom").datepicker({ minDate: mindate, autoClose: true });

        },
        autoClose: true
    });
        $('#extTreatmentFrom').datepicker({
            minDate: new Date(strDate),
            onSelect: function (selectedDate) {
                var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
                selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
                var mindate = new Date(selectedDate);
                mindate.setDate(mindate.getDate() + 1);
                $("#extTreatmentto").datepicker({ minDate: mindate, autoClose: true });
            },
            autoClose: true
        });
        $('#extTreatmentto').datepicker({
            minDate: new Date(strDate),
            onSelect: function (selectedDate) {
                var mydatematch = selectedDate.match(/(\d+)\/(\d+)\/(\d+)/);
                selectedDate = new Date(mydatematch[3], mydatematch[2] - 1, mydatematch[1]);
                var maxdate = new Date(selectedDate);
                maxdate.setDate(maxdate.getDate() - 1);
                $("#extTreatmentFrom").datepicker({ maxDate: maxdate, autoClose: true });
            },
            autoClose: true
        });
        $("#btnsubmit").click(function () {
            debugger;
            if ($("#step").val() == 2 && $("#stepValue").val() == 2) {
                if ($("input[type='checkbox']:checked").length < 2) {
                    $("#spanmember").show();

                    return false;
                }
                $("#tbUser").html('');

            }

        });
        $("#btnsubmit2").click(function () {
            debugger;

            if ($("input[name='isNewOPDFile']:checked").val() == "true" && $("input[name='extPhotoId']:checked").val() == "true") {

                return true;
            }
            else {
                $("#extspanmember").show();
                return false;
            }
        })
        function IsSecondDateGreater(firstDate, secondDate) {
            var date1 = firstDate;
            var d = new Date(date1.split("/").reverse().join("/"));

            var dd = d.getDate();
            var mm = d.getMonth() + 1;
            var yy = d.getFullYear();
            var edate = yy + "-" + mm + "-" + dd;

            var date2 = secondDate;
            var d2 = new Date(date2.split("/").reverse().join("/"));
            var dd = d2.getDate();
            var mm = d2.getMonth() + 1;
            var yy = d2.getFullYear();
            var sdate = yy + "-" + mm + "-" + dd;

            debugger;

            var startDate = Date.parse(sdate);

            var endDate = Date.parse(edate);

            if (d2 > d) {
                return true;
            }
        }
        function calDay() {
            debugger;

            to = $('.T').val();
            frm = $('.F').val();

            if (frm != '' && to != '') {

                calDays(frm, to);

            }
        };
        function calDayDiff() {
            debugger;

            to = $('.tt').val();
            frm = $('.tf').val();

            if (frm != '' && to != '') {

                calDaysdiff(frm, to);

            }
        };
        function calDays(date1, date2) {
            debugger;
            if (date1 != '' && date2 != '') {

                var d = new Date(date1.split("/").reverse().join("/"));

                var dd = d.getDate();
                var mm = d.getMonth() + 1;
                var yy = d.getFullYear();
                var edate = yy + "-" + mm + "-" + dd;


                var d2 = new Date(date2.split("/").reverse().join("/"));
                var dd = d2.getDate();
                var mm = d2.getMonth() + 1;
                var yy = d2.getFullYear();
                var sdate = yy + "-" + mm + "-" + dd;

                var startDate = Date.parse(sdate);
                var endDate = Date.parse(edate);

                var timeDiff = startDate - endDate;
                daysDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                $("#extNoOfDays").val(daysDiff + 1);
            }
            else {
                $("#extNoOfDays").val('');
            }
        }
        function calDaysdiff(date1, date2) {
            debugger;
            if (date1 != '' && date2 != '') {

                var d = new Date(date1.split("/").reverse().join("/"));

                var dd = d.getDate();
                var mm = d.getMonth() + 1;
                var yy = d.getFullYear();
                var edate = yy + "-" + mm + "-" + dd;


                var d2 = new Date(date2.split("/").reverse().join("/"));
                var dd = d2.getDate();
                var mm = d2.getMonth() + 1;
                var yy = d2.getFullYear();
                var sdate = yy + "-" + mm + "-" + dd;

                var startDate = Date.parse(sdate);
                var endDate = Date.parse(edate);

                var timeDiff = startDate - endDate;
                daysDiff = Math.floor(timeDiff / (1000 * 60 * 60 * 24));
                $("#NoOfDays").val(daysDiff + 1);
            }
            else {
                $("#NoOfDays").val('');
            }
        }
        $("#opdStateId").change(function () {
            binddist($("#opdStateId").val());
        })
        function binddist(opdStateId) {
            debugger;
            $.ajax({
                type: 'GET',
                url: '@Url.Action("binddistILC", "AppRegistration")',
                data: { opdStateId: opdStateId },
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    $("#opdDistrictId").empty();
                    $("#opdDistrictId").append("<option value=''>--Select--</option>")
                    $.each(data, function (i, result) {
                        $("#opdDistrictId").append("<option value='" + result.Value + "'>" + result.Text + "</option>")
                    });
                    if ($("#stepValue").val() == "0") {
                        var appsubid = '@TempData["distILC"]';
                        $('#opdDistrictId').val(appsubid);
                    }
                },
                failure: function () {
                    alert("Failed!");
                }
            });
        }
</script>

@model CCSHealthFamilyWelfareDept.Models.DICModel
@{
    ViewBag.Title = "DICRegistration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<style>
    .css-serial {
        counter-reset: serial-number; /* Set the serial number counter to 0 */
    }

        .css-serial td:first-child:before {
            counter-increment: serial-number; /* Increment the serial number counter */
            content: counter(serial-number); /* Display the counter */
        }

    .disabledbutton {
        pointer-events: none;
        opacity: 0.4;
    }
</style>


<div class="content-title">
    <h3 class="main-title">Application form for <strong>Disability Certificate</strong></h3>

</div>

@using (Html.BeginForm("DICRegistration", "AppRegistration", FormMethod.Post, new { @id = "frmData" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.regisIdDIC)
    @Html.HiddenFor(m => m.step)
    @Html.HiddenFor(m => m.stepValue)
    @Html.HiddenFor(m => m.registrationNo)
    <div id="content" class="dashboard padding-20 margin-bottom-50">

        @if (Model.step == 0 || Model.stepValue == 0)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading bg-redd">
                            <span class="title elipsis">
                                <h4 class="color-white">Step 1</h4>
                            </span>
                        </div>
                    </div>
                </div>

                <div class="col-md-12" id="divVerify">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <label>Are you Applying for <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-4 rbtnAppFor">
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.ApplyingFor, 1)
                                                New Certificate
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.ApplyingFor, 2)
                                                Renew Certificate
                                            </label>
                                            <br />
                                            @Html.ValidationMessageFor(m => m.ApplyingFor, "", new { @class = "text-danger" })
                                        </div>

                                    </div>
                                </div>
                            </div>
                            <div class="row" id="certType" style="display: none">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-5">
                                            <label>Do you have certificate generated through this Portal <span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-4 rbtnYesNo">
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.isCertFromPortal, "Yes")
                                                Yes
                                            </label>
                                            <label class="radio-inline">
                                                @Html.RadioButtonFor(m => m.isCertFromPortal, "No")
                                                No
                                            </label>
                                            <br />
                                            @Html.ValidationMessageFor(m => m.isCertFromPortal, "", new { @class = "text-danger" })
                                        </div>
                                       @* <div class="col-md-3" id="ReleventApp" style="display: none">
                                            <div class="form-group3">
                                                <label>Upload Previous Certificate</label>
                                                <div class="fileUpload3">
                                                    <span>Upload </span>
                                                    @Html.TextBoxFor(m => m.releventProof, new { @class = "upload3", @type = "file", @onchange = "Fileupload(this);" })
                                                    @Html.HiddenFor(m => m.releventProofpath)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.releventProof, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <div class="form-group padding-top-10" id="releventProofVALUE" style="display: none;">
                                                @if (!string.IsNullOrEmpty(Model.releventProofpath))
                                                {
                                                    <a href="@Url.Content(Model.releventProofpath)" id="releventProofdoc" target="_blank"  title="Download"><i class="fa fa-2x fa-download"></i></a>
                                                }
                                                else
                                                {
                                                    <a href="#" id="releventProofdoc" target="_blank" title="Download"><i class="fa fa-2x fa-download"></i></a>
                                                }
                                            </div>
                                        </div>*@
                                    </div>
                                </div>
                            </div>
                            <div class="row" id="certNum" style="display: none">
                                <div class="col-md-12">
                                    <div class="form-group">
                                        <div class="col-md-2">
                                            <label>certificate Number<span class="text-danger">*</span></label>
                                        </div>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.oldCertificateNumber, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.oldCertificateNumber, "", new { @class = "text-danger" })

                                        </div>
                                        <div class="col-md-2 col-md-offset-3">
                                            <input type="button" id="btnSearch" class="btn btn-block btn-primary" value="SEARCH" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>APPLICANT DETAIL</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Name <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.fullName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.fullName, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.fullName)
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Father's name <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.fatherName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.fatherName, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.fatherName)
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>DOB <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.dob, new { @class = "datepicker-here form-control", tabindex = "3", @data_language = "en", @placeholder = "dd/mm/yyyy", @onblur = "CalculateAge();", @readonly = "true" })
                                        @Html.TextBox("txtDob",null, new { @class = "form-control",@readonly="readonly"})
                                        @Html.ValidationMessageFor(m => m.dob, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(m => m.dob)
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Age </label>
                                        @Html.TextBoxFor(m => m.age, new { @class = "form-control", @readonly = "readonly", @onkeypress = "return isNumberKey(event);" })
                                        @Html.ValidationMessageFor(m => m.age, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                @*  <div class="col-md-3">
                                <div class="form-group">
                                    <label>DOB <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.dob, new { @class = "datepicker-here form-control", tabindex = "3", @data_language = "en", @placeholder = "dd/mm/yyyy" })
                                   
                                    @Html.ValidationMessageFor(m => m.dob, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.dob)
                                </div>
                            </div>*@
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Gender <span class="text-danger">*</span></label>
                                        <div class="form-control">
                                            <label>@Html.RadioButtonFor(m => m.gender, "Male", new { @readonly = "true" }) Male</label>
                                            <label>@Html.RadioButtonFor(m => m.gender, "Female") Female</label>
                                             <label>@Html.RadioButtonFor(m => m.gender, "Transgender") Transgender</label>
                                        </div>
                                        @Html.ValidationMessageFor(m => m.gender, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Caste Category <span class="text-danger">*</span></label>
                                        @* @Html.TextBoxFor(m => m.categoryName, new { @class = "form-control"})*@
                                        @Html.DropDownListFor(m => m.categoryId, (IEnumerable<SelectListItem>)ViewBag.Category, "--Select--", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.categoryId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Mobile No <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.appmobileNo, new { @class = "form-control", @maxlength = "10", @onkeypress = "return isNumberKey(event);" })
                                        @Html.ValidationMessageFor(m => m.appmobileNo, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Email Address</label>
                                        @Html.TextBoxFor(m => m.emailId, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(m => m.emailId, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Aadhaar Number</label>
                                        @Html.TextBoxFor(m => m.adharNumber, new { @class = "form-control", @maxlength = "12", @onkeypress = "return isNumberKey(event);" })
                                        @Html.ValidationMessageFor(m => m.adharNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Address <span class="text-danger">*</span></label>
                                        @Html.TextAreaFor(m => m.address, new { @class = "form-control", @placeholder = "Address", tabindex = "1" })
                                        @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>State </label>
                                        @Html.DropDownListFor(m => m.stateId, (IEnumerable<SelectListItem>)ViewBag.State, new { @class = "form-control", @readonly = "true", tabindex = "1" })
                                        @Html.ValidationMessageFor(m => m.stateId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>District <span class="text-danger">*</span></label>
                                        @Html.DropDownListFor(m => m.districtId, (IEnumerable<SelectListItem>)ViewBag.District, new { @class = "form-control", @readonly = "true", tabindex = "1" })
                                        @Html.ValidationMessageFor(m => m.districtId, "", new { @class = "text-danger" })

                                    </div>
                                </div>
                                <div class="clearfix"></div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Pin code <span class="text-danger">*</span></label>
                                        @Html.TextBoxFor(m => m.pinCode, new { @class = "form-control", @maxlength = 6, @placeholder = "PinCode", tabindex = "1", @onkeypress = "return isNumberKey(event);" })
                                        @Html.ValidationMessageFor(m => m.pinCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (Model.step == 1 || Model.stepValue == 1)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading bg-redd">
                            <span class="title elipsis">
                                <h4 class="color-white">Step 2</h4>
                            </span>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>DISABILITY DETAIL</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                 <div class="col-md-3">
                                <div class="form-group">
                                    <label>Disability Type <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.disabilityTypeId, (IEnumerable<SelectListItem>)ViewBag.Disability, "--Select--", new { @class = "form-control", tabindex = "1" })
                                    @Html.ValidationMessageFor(m => m.disabilityTypeId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                                <div class="col-md-3 dis" style="display:none">
                                    <div class="form-group">
                                        <label>Please Specify Other Disability Type <span class="text-danger">*</span></label>
                                        <br />
                                    <label id="lblmultiple" style="display:none">Use , in case of multiple disability</label> 
                                        @Html.TextBoxFor(m => m.disabilityType, new { @class = "form-control", tabindex = "1" })
                                        @Html.ValidationMessageFor(m => m.disabilityType, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label>Disability Details <span class="text-danger">*</span></label>
                                        @Html.TextAreaFor(m => m.disabilityDetail, new { @class = "form-control", tabindex = "1" })
                                        @Html.ValidationMessageFor(m => m.disabilityDetail, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>Select Proof Type</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="row">
                                       
                                        <div class="col-md-8">
                                            <div class="col-md-7">
                                                <label>Photo Id Proof<span class="text-danger">*</span></label>
                                                @Html.DropDownListFor(m => m.idProofId, (IEnumerable<SelectListItem>)ViewBag.IdProof, "--Select--", new { @class = "form-control", tabindex = "1" })
                                                @Html.ValidationMessageFor(m => m.idProofId, "", new { @class = "text-danger" })
                                            </div>
                                           
                                        </div>
                                        <div class="clearfix"></div>
                                        <div class="col-md-8">
                                            <div class="col-md-7">
                                                <label>Address Proof<span class="text-danger">*</span></label>
                                                @Html.DropDownListFor(m => m.addressProofId, (IEnumerable<SelectListItem>)ViewBag.AddressProof, "--Select--", new { @class = "form-control", tabindex = "1" })
                                                @Html.ValidationMessageFor(m => m.addressProofId, "", new { @class = "text-danger" })
                                            </div>
                                          
                                        </div>
                                        <div class="clearfix"></div>
                                         <div class="col-md-6">
                                        <div class="col-md-7">
                                            <label>Photo Id No.<span class="text-danger">*</span></label>
                                            @Html.TextBoxFor(m => m.photoIdNo, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(m => m.photoIdNo, "", new { @class = "text-danger" })
                                        </div>
                                        
                                    </div>
                                        <br />

                                        <div class="clearfix"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>

            </div>
        }
        else if (Model.step == 2 || Model.stepValue == 2)
        {
            <div class="row">
                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading bg-redd">
                            <span class="title elipsis">
                                <h4 class="color-white">Step 3</h4>
                            </span>
                        </div>
                    </div>
                </div>



                <div class="col-md-12">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <span class="title elipsis">
                                <h4>Check List</h4>
                            </span>
                        </div>
                        <div class="panel-body">
                            <span id="spanmember" style="display: none" class="text-danger">Please select All Document as they are required</span>
                            <div class="row">
                                @foreach (var v in ViewBag.DocumnetCheckListDIC)
                                {
                                    <div class="form-group">
                                        <div class="col-md-5">
                                            <i class="hidden">@v.Value</i>
                                            <label class="l-20">@v.Text</label>
                                            <span id="@v.Value" class="text-danger" style="display:none">*</span>
                                        </div>
                                        <div class="col-md-1">
                                            <input type="checkbox" name="chk_checkList" value="@v.Value">
                                        </div>
                                    </div>
                                }



                            </div>
                                <div class="row">
                                Note:-Kindly collect photo copy of document checked by you.
                            </div>
                        </div>
                    </div>
                </div>


                <div class="clearfix"></div>

            </div>
        }
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="form-group">
                                @if ((Model.stepValue == -1 || Model.stepValue > 0) && Model.step != 0)
                                {
                                   
                                    <div class="col-md-2 col-md-offset-2">
                                        <a href="@Url.Action("DICRegistration", "appRegistration", new { regisId = @OTPL_Imp.CustomCryptography.Encrypt(@Model.regisIdDIC.ToString()), stepValue = Convert.ToInt32(Session["stepValue"]) - 1 })" class="btn btn-block btn-success">Back</a>
                                    </div>
                                
                                }

                                <div class="col-md-3 ">
                                    <button id="btnSave" type="submit" class="btn btn-block btn-primary" id="btnsubmit">@ViewBag.Submit</button>
                                </div>
                                <div class="col-md-2"><a href="@Url.Action("DICRegistration", "AppRegistration")" class="btn btn-block btn-warning">Reset</a> </div>
                                @if (Model.step < 3 && Model.step != 0 && Model.step - 1 >= Model.stepValue && Model.stepValue != -1)
                                {
                                    <div class="col-md-2 ">
                                        <a href="@Url.Action("DICRegistration", "appRegistration", new { regisId = @OTPL_Imp.CustomCryptography.Encrypt(@Model.regisIdDIC.ToString()), stepValue = (Convert.ToInt32(Session["stepValue"]) + 1) })" class="btn btn-block btn-success">Next</a>
                                    </div>  
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.Verify)
    @Html.HiddenFor(m => m.oldCertificateNumber)
    @Html.HiddenFor(m => m.isCertFromPortal)
    @Html.HiddenFor(m => m.ApplyingFor)
}
<div class="clearfix"></div>
<script>

    $(document).ready(function () {
        debugger;
       
        $("#2").show();
        $("#3").show();
        $("#4").show();
        $('#txtDob').hide();
        if ($("#stepValue").val() != -1) {
            if ($("#Verify").val() == 0) {
                $("#btnSearch").hide();
                $("#divVerify").addClass("disabledbutton");
                //$('#fullName').attr('readonly', true);
                //$('#fatherName').attr('readonly', true);
                //$('#appmobileNo').attr('readonly', true);  
                //$("input[name=gender]").prop('disabled', true);
                //$("#categoryId").prop("disabled", true);
                //$('#adharNumber').attr('readonly', true);
            }
            if ($("#oldCertificateNumber").val() == null || $("#oldCertificateNumber").val() == '') {
                //alert($("#oldCertificateNumber").val());
                $('#fullName').attr('readonly', false);
                $('#fatherName').attr('readonly', false);
                $('#appmobileNo').attr('readonly', false);
                $("input[name=gender]").prop('disabled', false);
                $("#categoryId").prop("disabled", false);
                $('#adharNumber').attr('readonly', false);
            }
            else {
                $('#fullName').attr('readonly', true);
                $('#fatherName').attr('readonly', true);
                $('#appmobileNo').attr('readonly', false);
                $("input[name=gender]").prop('disabled', true);
                $("#categoryId").prop("disabled", true);
                $('#adharNumber').attr('readonly', true);
                $('#txtDob').val( $('#dob').val());
                $('#txtDob').show();
                $('#dob').hide();
            }
        }
        if ('@TempData["Message"]' != '' && '@TempData["msgstatus"]' != '') {
            swal("", '@TempData["Message"]', '@TempData["msgstatus"]');
        }
        if ($("#disabilityTypeId").val() == 6)//Multiple
        {
            $("#lblmultiple").show();
            $(".dis").show();
        } else if ($("#disabilityTypeId").val() == 7)//other
        {
            $("#lblmultiple").hide();
            $(".dis").show();
        }
        else {
            $("#lblmultiple").hide();
            $(".dis").hide();
        }

    });

    function isNumberKey(evt) {
        debugger;
        var charCode = (evt.which) ? evt.which : event.keyCode
        if (charCode > 31 && (charCode < 48 || charCode > 57))
            return false;
        return true;
    }
    $("#disabilityTypeId").click(function () {
        if ($("#disabilityTypeId").val() == 6)//Multiple
        {
            $("#lblmultiple").show();
            $(".dis").show();
        } else if ($("#disabilityTypeId").val() == 7)//other
        {
            $("#lblmultiple").hide();
            $(".dis").show();
        }
        else {
            $("#lblmultiple").hide();
            $(".dis").hide();
        }
    })
    $('.rbtnAppFor input[type="radio"]').change(function () {

        if (this.value == 2) {
            $('#certType').show();
        }
        else {
            $('#certType').hide();
            $('#certNum').hide();
            $('#ReleventApp').hide();
            $('#ReleventApp').hide();
            $('#releventProofVALUE').hide();
            $('#releventProof').val('');
            $('#releventProofpath').val('');
            $('#oldCertificateNumber').val('');
            $("input[name=isCertFromPortal]").removeAttr('checked');
        }
        resetField();
    });

    $('.rbtnYesNo input[type="radio"]').change(function () {

        if (this.value == "No") {
            $('#ReleventApp').show();
            $('#certNum').hide();
            $('#oldCertificateNumber').val('');
            $('#txtDob').hide();
            $('#dob').show();
        }
        else {
            $('#ReleventApp').hide();
            $('#releventProofVALUE').hide();
            $('#certNum').show();
            $('#releventProof').val('');
            $('#releventProofpath').val('');
            $('#txtDob').show();
            $('#dob').hide();
        }
        resetField();
    });

    function Fileupload(obj) {
        var fileId = $(obj).attr("id");
        var ext = obj.value.match(/\.(.+)$/)[1];
        switch (ext) {
            case 'pdf':
            case 'jpg':
                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
                if (fileSize > 2) {
                    swal("", "Maximum 2MB file size are allowed", "warning");
                    return false;
                }
                else {
                    var data = new FormData();
                    var files = $("#" + fileId).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $.ajax({
                        url: '@Url.Action("UploadFile", "DIC")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {
                            $("#" + fileId + "path").val(response[1]);

                            $("#" + fileId + "VALUE").show();
                            var Url = response[1].replace('~/', '');
                            $("#" + fileId + "doc").prop('href', '@Url.Content("~/")' + Url + '?' + new Date().getTime().toString());

                            return false;
                        },
                        error: function () {
                        }
                    });
                }
                break;
            default:
                swal("", 'This is not an allowed file type only pdf and jpg  file valid for this', "warning");
                this.value = '';
                return false;
        }
    }

    var strDate = @DateTime.Now.Year -1 + "/" + @DateTime.Now.Month + "/" + @DateTime.Now.Day + "";

    $('#dob').datepicker({
        maxDate: new Date(strDate),
        autoClose: true
    });

    $("#btnSearch").click(function () {
        if ($("#oldCertificateNumber").val().trim() != '' && $("#oldCertificateNumber").val().trim() != null) {
            bindDataForRevisedCertificate($("#oldCertificateNumber").val());
        }
        else {
            swal("", 'Enter Certificate Number!', "warning");
        }
    });

    function bindDataForRevisedCertificate(_oldCertificateNumber) {
        var img = "<img src='@Url.Content("~/Images/loadingImg.gif")' alt='Loading..' style='margin-left:40%; margin-top:25px' />";
        $('#DIV-ApplicationList').html(img);

        $.ajax({
            url: '@Url.Action("GetDICdetailByCertNo", "AppRegistration")',
            data: { oldCertificateNumber: _oldCertificateNumber },
            type: 'GET',
            dataType: 'json'
        })
        .success(function (returndata) {
            debugger;
            if (returndata != null && returndata != '') {
                if (returndata.regisIdDIC == "0" && returndata.msg == "1") {
                    $('#fullName').val('');
                    $('#fullName').attr('readonly', false);
                    $('#fatherName').val('');
                    $('#fatherName').attr('readonly', false);
                    $('#dob').val('');
                    $("input[name=gender]").prop('checked', false);
                    $("input[name=gender]").prop('disabled', false);
                    $('#categoryId').val('');
                    $("#categoryId").prop("disabled", false);
                    $('#mobileNo').val('');
                    $('#mobileNo').attr('readonly', false);
                    $('#age').val('');
                    $('#emailId').val('');
                    $('#emailId').attr('readonly', false);
                    $('#adharNumber').val('');
                    $('#adharNumber').attr('readonly', false);

                    swal("", 'Details not found for given Certificate Number!', "warning");
                }
                else if (returndata.regisIdDIC == "0" && returndata.msg == "2") {
                    $('#fullName').val('');
                    $('#fullName').attr('readonly', false);
                    $('#fatherName').val('');
                    $('#fatherName').attr('readonly', false);   
                    $('#dob').val('');
                    $("input[name=gender]").prop('checked', false);
                    $("input[name=gender]").prop('disabled', false);
                    $('#categoryId').val('');
                    $("#categoryId").prop("disabled", false);
                    $('#mobileNo').val('');
                    $('#mobileNo').attr('readonly', false);
                    $('#age').val('');
                    $('#emailId').val('');
                    $('#emailId').attr('readonly', false);
                    $('#adharNumber').val('');
                    $('#adharNumber').attr('readonly', false);


                    swal("", 'Provide your latest certificate number!', "warning");
                }
                else {
                    $("#regisIdDIC").val(returndata.regisIdDIC);
                   // $("#Verify").val(returndata.Verify);
                    $('#fullName').val(returndata.fullName);
                    $('#fullName').attr('readonly', true);
                    $('#fatherName').val(returndata.fatherName);
                    $('#fatherName').attr('readonly', true);
                    $('#appmobileNo').val(returndata.appmobileNo);
                    //$('#appmobileNo').attr('readonly', flase);
                    $('#dob').val(returndata.dob);
                    CalculateAge();
                    $("input[name=gender][value=" + returndata.gender + "]").prop('checked', true);
                    $("input[name=gender]").prop('disabled', true);
                    $('#categoryId').val(returndata.categoryId);
                    $("#categoryId").prop("disabled", true);
                    $('#emailId').val(returndata.emailId);
                    $('#adharNumber').val(returndata.adharNumber);
                    $('#adharNumber').attr('readonly', true);
                    $("#divVerify").addClass("disabledbutton");
                    $('#txtDob').val(returndata.dob);
                   // $('#address').val(returndata.address);
                    //$('#districtId').val(returndata.districtId);
                    //$('#pinCode').val(returndata.pinCode);
                   // $('#disabilityType').val(returndata.disabilityType);
                    //$('#disabilityDetail').val(returndata.disabilityDetail);
                }
            }
        })
        .error(function (xhr, status) {
            swal("", 'Details not found for given Certificate Number!', "warning");
        });
    }

    function resetField() {
        $('#fullName').val('');
        $('#fatherName').val('');
        $('#dob').val('');
        $('#age').val('');
        $("input[name=gender]").removeAttr('checked');
        $('#categoryId').val('');
        $('#emailId').val('');
        $('#adharNumber').val('');
        $('#address').val('');
        //$('#districtId').val('');
        $('#pinCode').val('');
        $('#disabilityType').val('');
        $('#disabilityDetail').val('');
    }

    $("#btnSave").click(function () {
        debugger;
        if ($("#step").val() == 2 && $("#stepValue").val() == 2) {
            var ary = [];
            $.each($("input[type='checkbox']:checked"), function () {
                ary.push($(this).val());
            });
           // alert(ary);
            

            if ($("#ApplyingFor").val() == "2" && $("#isCertFromPortal").val() == "No" )
            {
                if (ary.length < 4) {
                    $("#spanmember").show();

                    return false;
                }
                else if (ary.length == 4 && jQuery.inArray("5", ary) != '-1') {

                    $("#spanmember").show();
                    return false;
                }

        }
            else  {
                if (ary.length < 3) {
                    $("#spanmember").show();

                    return false;
                }
                else if (ary.length == 3 && jQuery.inArray("5", ary) != '-1') {

                    $("#spanmember").show();
                    return false;
                }
        }
           
            $("#tbUser").html('');

        }

    });
    function CalculateAge() {

        var DOB = $("#dob").val();

        if (DOB != "") {
            var values = DOB.split("/");
            var date = values[0];
            var month = values[1];
            var year = values[2];

            var currentdate = new Date();
            var currentyear = currentdate.getYear() + 1900;
            var currentmonth = currentdate.getMonth() + 1;
            var currentdate = currentdate.getDate();

            var calculateYear = currentyear - year;
            var calculatemonth = 0;
            var calculatedate = 0;
            if (month > currentmonth) {
                calculateYear--;
                calculatemonth = month - currentmonth;
            }
            $("#age").val(calculateYear);
        }
    }
</script>

@model CCSHealthFamilyWelfareDept.Models.NUHmodel
@{
    ViewBag.Title = "NUHRenewalRegistration";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@{int i = 1, j = 101;}
<style>
    .css-serial {
        counter-reset: serial-number; /* Set the serial number counter to 0 */
    }

        .css-serial td:first-child:before {
            counter-increment: serial-number; /* Increment the serial number counter */
            content: counter(serial-number); /* Display the counter */
        }

    .modal-dialog label {
        display: block;
        position: relative;
        font-weight: 600;
    }

        .modal-dialog label:after {
            content: ":";
            float: right;
            display: block;
            position: absolute;
            right: 0;
            top: 0;
        }

    .modal-dialog h4 {
        margin: 0;
        color: #09707d;
    }

    .modal-dialog .panel-heading {
        padding: 0 15px 10px;
    }

    .modal-dialog .row {
        margin-bottom: 5px;
    }

    .admin .fileUpload3 {
        width: 100px;
    }
</style>

<div class="content-title">
    <h3 class="main-title">Application form for Renewal  of <strong>Medical Establishment</strong>
    </h3>
</div>
<div id="content" class="dashboard padding-20 margin-bottom-50">

    @using (Html.BeginForm("NUHRenewalRegistration", "AppRegistration", FormMethod.Post, new { @id = "frmRenewalcmo" }))
    {
        
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-default" style="margin-bottom: 5px;">
                    <div class="panel-body" style="padding: 3px 10px">
                        <div class="row">
                            <div class="col-md-12">
                                <strong>Note :-  <span class="text-danger">All files that will be uploaded should be in .jpg and .pdf format and maximum file size should be 2080 KB (2 MB).</span></strong>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of Medical Establishment</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Area Of Establishment<span class="star">*</span></label><br>
                                    <div class="form-control">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.establishmentArea, "Urban")
                                            Urban
                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.establishmentArea, "Rural")
                                            Rural
                                        </label>
                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.establishmentArea, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Place Of Establishment<span class="star">*</span></label><br>
                                    <div class="form-control">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.establishmentPlace, "Own")
                                            Own
                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.establishmentPlace, "Rental")
                                            Rental
                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.establishmentPlace, "Other")
                                            Other
                                        </label>

                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.establishmentPlace, "", new { @class = "text-danger" })

                            </div>

                            <div class="col-md-4 " id="divEstablishmentPlaceOther" style="display:@(Model.establishmentPlace == "Other" ? "" : "none");">
                                <div class="form-group">
                                    <label>Please Specify (Place Of Establishment) <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.establishmentPlaceOther, new { @class = "form-control", tabindex = 5, @maxlength = 250 })
                                    @Html.ValidationMessageFor(m => m.establishmentPlaceOther, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Type Of Land<span class="star">*</span></label><br>
                                    <div class="form-control">
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.landType, "Commercial")
                                            Commercial
                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.landType, "Residential")
                                            Residential
                                        </label>
                                        <label class="radio-inline">
                                            @Html.RadioButtonFor(m => m.landType, "Mixed Population")
                                            Mixed Population
                                        </label>

                                    </div>
                                </div>
                                @Html.ValidationMessageFor(m => m.landType, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Establishment Name<span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.establishmentName, new { @class = "form-control", tabindex = 1, @readonly = "readonly", @maxlength = 250 })
                                    @Html.ValidationMessageFor(m => m.establishmentName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Category <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.medicalEstablishmentId, (IEnumerable<SelectListItem>)ViewBag.MedicalEstablishment, "--Select--", new { @class = "form-control", tabindex = "2", @readonly = "readonly" })
                                    <div class="tool-tip  slideIn">Select Type of Medical Establishment that is to be registered </div>
                                    @Html.ValidationMessageFor(m => m.medicalEstablishmentId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 OtherEstablishment" style="display: none;">
                                <div class="form-group">
                                    <label>Please Specify (Category) <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.medicalEstablishmentOther, new { @class = "form-control", tabindex = 3, @readonly = "readonly", @maxlength = 25 })
                                    @Html.ValidationMessageFor(m => m.medicalEstablishmentOther, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Is operated by <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.operatedId, (IEnumerable<SelectListItem>)ViewBag.Operate, "--Select--", new { @class = "form-control", tabindex = "4", @readonly = "readonly" })

                                    @Html.ValidationMessageFor(m => m.operatedId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-4 " id="divOperate" style="display: none;">
                                <div class="form-group">
                                    <label id="lbloperate"></label>
                                    <span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.operatedName, new { @class = "form-control", tabindex = 5, @readonly = "readonly", @maxlength = 250 })
                                    @Html.ValidationMessageFor(m => m.operatedName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-4">
                                @*ABHISHEK*@
                                <span>Building Structural Layout <span class="text-danger">*</span> </span>

                                <div id="SturctureLayout" style="display: none">
                                    <div class="form-group padding-top-10">
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.structuralLyoutFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                            @Html.HiddenFor(m => m.structuralLyoutFilePath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.structuralLyoutFile, "", new { @class = "text-danger" })

                                        @if (!string.IsNullOrEmpty(Model.structuralLyoutFile))
                                        {
                                            <div class="col-md-3" style="margin-top: -62px; margin-left: 134px;">
                                                <div class="form-group padding-top-30">
                                                    <input type="hidden" name="structuralLyout" value="@Model.structuralLyoutFile" />
                                                    <a id="structuralLyoutFileAnchor" href="@Url.Content(@Model.structuralLyoutFile)" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>

                                <div id="newStuructureLayout" class="form-group padding-top-10" style="display: none">
                                    @if (!string.IsNullOrEmpty(Model.structuralLyoutFile))
                                    {
                                        
                                        <input type="hidden" name="structuralLyout" value="@Model.structuralLyoutFile" />  
                                        <a href="@Url.Content(@Model.structuralLyoutFile)" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                    }
                                    else
                                    {
                                       
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.structuralLyoutFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                            @Html.HiddenFor(m => m.structuralLyoutFilePath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.structuralLyoutFile, "", new { @class = "text-danger" })

                                        <div class="col-md-3" style="margin-top: -62px; margin-left: 134px;">
                                            <div class="form-group padding-top-30">
                                                <a id="structuralLyoutFileAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                            </div>
                                        </div>
                                          
                                    }
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(Model.ElectrycityBill))
                            {
                                <div class="col-md-3 clasElectrycityBill" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Electricity Bill<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.ElectrycityBill, new { @class = "upload3", @onchange = "Fileupload(this)" })
                                            @*  @Html.HiddenFor(m => m.ElectrycityBillPath)*@

                                        </div>
                                        @Html.ValidationMessageFor(m => m.ElectrycityBill, "", new { @class = "text-danger" })
                                    </div>
                                </div> 
                                <div class="col-md-1 clasElectrycityBill" style="display: none;">
                                    <div class="form-group padding-top-30">
                                        <input type="hidden" name="ElectrycityBillPath" value="@Model.ElectrycityBill" id="ElectrycityBillPath" />
                                        <div style="float: left"><a id="ElectrycityBillAnchor" href="@Url.Content(@Model.ElectrycityBill)"  target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3 clasElectrycityBill" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Electricity Bill<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.ElectrycityBill, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                            @Html.HiddenFor(m => m.ElectrycityBillPath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.ElectrycityBill, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1 clasElectrycityBill">
                                    <div class="form-group padding-top-30">
                                        <div style="float: left"><a id="ElectrycityBillAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.Registry))
                            {
                                <div class="col-md-3 clasDivRegistry" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Registry<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.Registry, new { @class = "upload3", @onchange = "Fileupload(this)" })
                                            @*    @Html.HiddenFor(m => m.RegistryPath)*@
                                        </div>
                                        @Html.ValidationMessageFor(m => m.Registry, "", new { @class = "text-danger" })
                                    </div>
                                </div> 
                                <div class="col-md-1 clasDivRegistry" style="display: none;">
                                    <div class="form-group padding-top-30">
                                        <input type="hidden" name="RegistryPath" value="@Model.Registry" id="RegistryPath"/>
                                        <div style="float: left"><a id="RegistryAnchor" href="@Url.Content(@Model.Registry)"  target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3 clasDivRegistry" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Registry<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.Registry, new { @type = "file",@class = "upload3", @onchange = "Fileupload(this)" })
                                            @Html.HiddenFor(m => m.RegistryPath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.Registry, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1 clasDivRegistry">
                                    <div class="form-group padding-top-30">
                                        <div style="float: left"><a id="RegistryAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }

                            @if (!string.IsNullOrEmpty(Model.RentalAgreement))
                            {
                                <div class="col-md-3 clasRentalAgreement" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Rental Agreement<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.RentalAgreement, new { @class = "upload3", @onchange = "Fileupload(this)" })
                                            @*  @Html.HiddenFor(m => m.RentalAgreementPath)*@
                                        </div>
                                        @Html.ValidationMessageFor(m => m.RentalAgreement, "", new { @class = "text-danger" })
                                    </div>
                                </div> 
                                <div class="col-md-1 clasRentalAgreement" style="display: none;">
                                    <div class="form-group padding-top-30">
                                        <input type="hidden" name="RentalAgreementPath" value="@Model.RentalAgreement" id="RentalAgreementPath" />
                                        <div style="float: left"><a id="RentalAgreementAnchor" href="@Url.Content(@Model.RentalAgreement)"  target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                <div class="col-md-3 clasRentalAgreement" style="display: none;">
                                    <div class="form-group">
                                        <label>Upload Rental Agreement<span class="text-danger">*</span></label>
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.RentalAgreement, new {@type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                            @Html.HiddenFor(m => m.RentalAgreementPath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.RentalAgreement, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="col-md-1 clasRentalAgreement">
                                    <div class="form-group padding-top-30">
                                        <div style="float: left"><a id="RentalAgreementAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a></div>
                                    </div>
                                </div>
                            }

                            @*   <div class="col-md-1 clasElectricityBill">
                                <div class="form-group padding-top-30">
                                    <div style="float: left"><a id="ElectrycityBillAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a></div>

                                </div>
                            </div>*@




                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>
                                        @Html.CheckBoxFor(m => m.isMEEaddressChange, new { tabindex = "20" })
                                        Check in case you wanted to change your address.</label>
                                    @Html.ValidationMessageFor(m => m.isMEEaddressChange, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Address of Medical Establishment </h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Telephone No./ Mob. No. </label>
                                    @Html.TextBoxFor(m => m.telephoneNo, new { @class = "form-control", tabindex = "6", @onkeypress = "return isNumberKey(event);", @maxLength = "11" })
                                    @Html.ValidationMessageFor(m => m.telephoneNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Website </label>
                                    @Html.TextBoxFor(m => m.website, new { @class = "form-control", tabindex = "7", @maxLength = "250" })
                                    @Html.ValidationMessageFor(m => m.website, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Address <span class="text-danger">*</span></label>
                                    @Html.TextAreaFor(m => m.address, new { @class = "form-control", @placeholder = "Address", @cols = "20", tabindex = "8", @maxLength = "250" })
                                    @Html.ValidationMessageFor(m => m.address, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>State</label>
                                    @Html.DropDownListFor(m => m.stateId, (IEnumerable<SelectListItem>)ViewBag.State, new { @class = "form-control", @readonly = "true", tabindex = "9" })
                                    @Html.ValidationMessageFor(m => m.stateId, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.stateId)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>District <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.districtid, (IEnumerable<SelectListItem>)ViewBag.District, "--Select--", new { @class = "form-control", tabindex = "10" })
                                    @Html.ValidationMessageFor(m => m.districtid, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(m => m.districtid)
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Pin code <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.pinCode, new { @class = "form-control", @maxlength = "6", tabindex = "11", @onkeypress = "return isNumberKey(event);" })
                                    @Html.ValidationMessageFor(m => m.pinCode, "", new { @class = "text-danger" })
                                </div>
                            </div>


                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Medical Services </h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-8">
                                <div class="form-group">
                                    <label>Details of Medical Services Offered: <span class="text-danger">*</span></label>
                                    <label style="font-size: 12px">(Use , in case of multiple services)</label>
                                    @Html.TextAreaFor(m => m.medicalFacilities, new { @class = "form-control", tabindex = "12", @maxLength = "250" })
                                    <div class="tool-tip  slideIn">Fill the name of medical Services being offered or to be offered by your medical establishment. (E.g. MRI, CT SCAN, Blood Test etc.)</div>
                                    @Html.ValidationMessageFor(m => m.medicalFacilities, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12 firm" style="display: none">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of Partners</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered css-serial tbUserOwner">
                                <thead>
                                    <tr>
                                        <th width="5%" class="text-center">S.No.</th>
                                        <th width="20%">Name<span class="text-danger">*</span></th>
                                        <th width="20%">Age<span class="text-danger">*</span></th>
                                        <th width="20%">Fathers Name<span class="text-danger">*</span></th>
                                        <th width="20%">Mobile<span class="text-danger">*</span></th>
                                        <th width="20%">Email<span class="text-danger">*</span></th>
                                        <th width="20%">Address<span class="text-danger">*</span></th>
                                        <th width="15%">State<span class="text-danger">*</span></th>
                                        <th width="15%">District<span class="text-danger">*</span></th>
                                        <th width="15%">Pin Code<span class="text-danger">*</span></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var v in ViewBag.PartnerList)
                                    {
                                        <tr>
                                            <td align="center"></td>
                                            <td align="center">
                                                <input type="text" name="ownerName" id="ownerName" value="@v.ownerName" class="form-control" style="height:45px;" readonly="readonly" />
                                            </td>
                                            <td align="center">
                                                <input type="text" name="ownerAge" id="ownerAge" value="@v.ownerAge" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>
                                            <td align="center">
                                                <input type="text" name="ownerFatherName" id="ownerFatherName" value="@v.ownerFatherName" class="form-control" style="height:45px;" readonly="readonly" />
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerMobileNo" id="ownerMobileNo" value="@v.ownerMobileNo" class="form-control" style="height:45px;" readonly="readonly" />
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerEmailId" id="ownerEmailId" value="@v.ownerEmailId" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerAddress" id="ownerAddress" value="@v.ownerAddress" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerStateId" id="StateName" value="@v.StateName" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerDistrictId" id="DistrictName" value="@v.DistrictName" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="ownerPincode" id="ownerPincode" value="@v.ownerPincode" class="form-control" style="height:45px;" readonly="readonly"/>
                                            </td>

                                        </tr> 
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-md-4 col-md-offset-8">
                                <div class="tool-tip  slideIn" style="top: -70px; width: 65%; height: 70px;">Click here to add details of more than one Paramedical Staff employed in the establishment.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12 nonfirm" style="display: none">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of  Owner</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Name <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerNameF, new { @class = "form-control", @onchange = "isClear(this);", tabindex = "13", @readonly = "readonly", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.ownerNameF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Age <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerAgeF, new { @class = "form-control", tabindex = "13", @readonly = "readonly", maxlength = 2 })
                                    @Html.ValidationMessageFor(m => m.ownerAgeF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Father Name <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerFatherNameF, new { @class = "form-control", tabindex = "13", @readonly = "readonly", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.ownerFatherNameF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Mobile <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerMobileNoF, new { @class = "form-control", @onchange = "isClear(this);", @maxlength = "10", tabindex = "14", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.ownerMobileNoF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Email Id <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerEmailIdF, new { @class = "form-control", @onchange = "isClear(this);", tabindex = "15", @readonly = "readonly", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.ownerEmailIdF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Address <span class="text-danger">*</span></label>
                                    @Html.TextAreaFor(m => m.ownerAddressF, new { @class = "form-control", @onchange = "isClear(this);", tabindex = "16", @readonly = "readonly", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.ownerAddressF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>State <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.ownerStateIdF, (IEnumerable<SelectListItem>)ViewBag.State1, "--Select--", new { @class = "form-control", @readonly = "true", tabindex = "17" })
                                    @Html.ValidationMessageFor(m => m.ownerStateIdF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>District <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.ownerDistrictIdF, (IEnumerable<SelectListItem>)ViewBag.District1, "--Select--", new { @class = "form-control", tabindex = "18", @onchange = "isClear(this);", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.ownerDistrictIdF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Pin Code <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.ownerPincodeF, new { @class = "form-control", @maxlength = "6", tabindex = "19", @onchange = "isClear(this);", @onkeypress = "return isNumberKey(event);", @readonly = "readonly" })
                                    @Html.ValidationMessageFor(m => m.ownerPincodeF, "", new { @class = "text-danger" })

                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <div class='fileUpload3'>
                                        <span>Upload Signature</span>
                                        <input type='file' class='upload3' id='ownerSignature_SSS' onchange='fupstafffileJPG(this);'>
                                        @if (!string.IsNullOrEmpty(@Model.ownerSignature))
                                        {  
                                            <input type='hidden' class='clsFilePath_SSS' name='ownerSignature' value="@Model.ownerSignature">
                                        }
                                        else
                                        {
                                            <input type='hidden' class='clsFilePath_SSS' name='ownerSignature' value="">
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class='col-md-3'>
                                <div class='padding-top-10'>
                                    @if (!string.IsNullOrEmpty(@Model.ownerSignature))
                                    {
                                        <a class='clsFilePathAnchor_SSS' href="@Url.Content(@Model.ownerSignature)" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                    }
                                    else
                                    {
                                        <a class='clsFilePathAnchor_SSS' href="#" style="display: none;" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of Person In Charge</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Name <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.applicantName, new { @class = "form-control", tabindex = "21", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.applicantName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Mobile No <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.appMobileNo, new { @class = "form-control", @maxlength = "10", @tabindex = "22", @onkeypress = "return isNumberKey(event);" })
                                    @Html.ValidationMessageFor(m => m.appMobileNo, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Email Id <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.applicantEmailId, new { @class = "form-control", tabindex = "23", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.applicantEmailId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Relevant Qualification <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.qualification, new { @class = "form-control", tabindex = "24", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.qualification, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Institution Name<span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.institution, new { @class = "form-control", tabindex = "25", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.institution, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Name Of Central/State Council <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.Central_StateCouncilName, new { @class = "form-control", tabindex = "26", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.Central_StateCouncilName, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Registration Number(MCI/SMF) <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.registrationNumber, new { @class = "form-control", tabindex = "27", @maxlength = "20" })
                                    <div class="tool-tip  slideIn">Provide Registration No. issued by the Medical Council of India/State Medical Faculty.</div>
                                    @Html.ValidationMessageFor(m => m.registrationNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Address <span class="text-danger">*</span></label>
                                    @Html.TextAreaFor(m => m.applicantAddress, new { @class = "form-control", tabindex = "28", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.applicantAddress, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>State <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.applicantStateId, (IEnumerable<SelectListItem>)ViewBag.State1, "--Select--", new { @class = "form-control", tabindex = "29" })
                                    @Html.ValidationMessageFor(m => m.applicantStateId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>District <span class="text-danger">*</span></label>
                                    @Html.DropDownListFor(m => m.applicantDistrictId, (IEnumerable<SelectListItem>)ViewBag.District1, "--Select--", new { @class = "form-control", tabindex = "30" })
                                    @Html.ValidationMessageFor(m => m.applicantDistrictId, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Pincode <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.applicantPincode, new { @class = "form-control", @maxlength = "6", tabindex = "31", @onkeypress = "return isNumberKey(event);" })
                                    @Html.ValidationMessageFor(m => m.applicantPincode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-md-3">
                                <label>Photo <span class="text-danger">*</span></label>
                                <div id="newPhoto" style="display: none">
                                    @if (!string.IsNullOrEmpty(@Model.piPhotograph))
                                    {
                                        <input type="hidden" name="piPhotoH" value="@Model.piPhotograph" />
                                        <a href="@Url.Content(@Model.piPhotograph)" target="_blank"><i class="fa fa-download fa-2x"></i></a>  
                                    }
                                    else
                                    {     
                                        <div class="fileUpload3">
                                            <span>Upload </span>
                                            @Html.TextBoxFor(m => m.piPhotograph, new { @type = "file", @class = "upload3", @onchange = "PhotoFileupload(this)" })
                                            @Html.HiddenFor(m => m.piPhotographPath)
                                        </div>
                                        @Html.ValidationMessageFor(m => m.piPhotograph, "", new { @class = "text-danger" })
                                        <div class="col-md-3" style="margin-top: -62px; margin-left: 134px;">
                                            <div class="form-group padding-top-30">
                                                <a id="piPhotographAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                            </div>
                                        </div>         
                                    }
                                </div>



                                <div id="existPhoto" style="display: none">
                                    <div class="fileUpload3">
                                        <span>Upload </span>
                                        @Html.TextBoxFor(m => m.piPhotograph, new { @type = "file", @class = "upload3", @onchange = "PhotoFileupload(this)" })
                                        @Html.HiddenFor(m => m.piPhotographPath)
                                    </div>
                                    @Html.ValidationMessageFor(m => m.piPhotograph, "", new { @class = "text-danger" })

                                    @if (!string.IsNullOrEmpty(@Model.piPhotograph))
                                    {
                                        <div class="col-md-3" style="margin-top: -62px; margin-left: 134px;">
                                            <div class="form-group padding-top-30">
                                                <input type="hidden" name="piPhotoH" value="@Model.piPhotograph" />
                                                <a id="piPhotographAnchor" href="@Url.Content(@Model.piPhotograph)" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                            </div>
                                        </div>
                                    }
                                </div>



                            </div>
                            <div class="clearfix"></div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Upload MCI/SMF Certificate</label>
                                    <div id="newMCISMF" class="row" style="margin: 0 0 0 -15px; display: none">

                                        <div class="col-md-4">
                                            @if (!string.IsNullOrEmpty(@Model.upmci_smfCertificateFile))
                                            {
                                                <input type="hidden" name="upmciH" value="@Model.upmci_smfCertificateFile" />
                                                <a href="@Url.Content(@Model.upmci_smfCertificateFile)" target="_blank"><i class="fa fa-download fa-2x"></i></a>  
                                            }
                                            else
                                            {
                                                <input type="hidden" name="upmciH" value="" />
                                     
                                                <div class="fileUpload3">
                                                    <span>Upload </span>
                                                    @Html.TextBoxFor(m => m.upmci_smfCertificateFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                                    @Html.HiddenFor(m => m.upmci_smfCertificateFilePath)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.upmci_smfCertificateFile, "", new { @class = "text-danger" })
                                                <div class="col-md-8" style="margin-top: -62px; margin-left: 134px;">
                                                    <div class="form-group padding-top-30">
                                                        <a id="upmci_smfCertificateFileAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                    </div>
                                                </div>         
                                                                       
                                            }

                                        </div>
                                    </div>


                                    <div id="existMCISMF" class="row" style="margin: 0 0 0 -15px; display: none">
                                        <div class="col-md-4">
                                            <div class="fileUpload3">
                                                <span>Upload </span>
                                                @Html.TextBoxFor(m => m.upmci_smfCertificateFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this)" })
                                                @Html.HiddenFor(m => m.upmci_smfCertificateFilePath)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.upmci_smfCertificateFile, "", new { @class = "text-danger" })

                                            @if (!string.IsNullOrEmpty(@Model.upmci_smfCertificateFile))
                                            {
                                                <div class="col-md-8" style="margin-top: -62px; margin-left: 134px;">
                                                    <div class="form-group padding-top-30">
                                                        <input type="hidden" name="upmciH" value="@Model.upmci_smfCertificateFile" />
                                                        <a id="upmci_smfCertificateFileAnchor" href="@Url.Content(@Model.upmci_smfCertificateFile)" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>


            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of Doctor</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered css-serial tbUserDoc">
                                <thead>
                                    <tr>
                                        <th width="5%" class="text-center">S.No.</th>
                                        <th width="8%">Name<span class="text-danger">*</span></th>
                                        <th width="8%">Fathers Name<span class="text-danger">*</span></th>
                                        <th width="8%">Relevant Qualification<span class="text-danger">*</span></th>
                                        <th width="8%">Institution<span class="text-danger">*</span></th>
                                        <th width="8%">Registration Type<span class="text-danger">*</span></th>
                                        <th width="8%">Registration No. of MCI/SMF<span class="text-danger">*</span></th>
                                        <th width="8%">Part/Full Time<span class="text-danger">*</span></th>
                                        <th width="8%">Age<span class="text-danger">*</span></th>
                                        <th width="10%">Address<span class="text-danger">*</span></th>
                                        <th width="10%">Registration Valid Upto<span class="text-danger">*</span></th>
                                        <th width="10%">Signature<span class="text-danger">*</span></th>
                                        <th width="5%">Remove</th>
                                    </tr>
                                </thead>
                                <tbody>

                                    @foreach (var v in ViewBag.doctorList)
                                    {
                                        <tr>
                                            <td align="center"></td>
                                            <td align="center">
                                                <input type="text" name="doctorName" id="doctorName" value="@v.doctorName" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="center">
                                                <input type="text" name="doctorFathersName" id="doctorFathersName" value="@v.doctorFathersName" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="center">
                                                <input type="text" name="doctorQualification" id="doctorQualification" value="@v.doctorQualification" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <input type="text" name="NameofFoundation" id="NameofFoundation" value="@v.NameofFoundation" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <select id='doctorregistrationType' name='doctorregistrationType' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.doctorregistrationType'>@v.doctorregistrationType</option>
                                                    <option value='MCI'>MCI</option>
                                                    <option value='SMF'>SMF</option>
                                                    <option value='SMC'>SMC</option>
                                                    <option value='DCI'>DCI</option>
                                                </select>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="doctorregistrationNo" id="doctorregistrationNo" value="@v.doctorregistrationNo" class="form-control alphaN" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <select id='doctorPart_FullTime' name='doctorPart_FullTime' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.doctorPart_FullTime'>@v.doctorPart_FullTime</option>
                                                    <option value='Part Time'>Part Time</option>
                                                    <option value='Full Time'>Full Time</option>
                                                </select>

                                            </td>

                                            <td align="center">
                                                <input type="text" name="doctorAge" id="doctorAge" value="@v.doctorAge" class="form-control" style="height:45px;" />
                                            </td>

                                            <td align="center">
                                                <textarea name="doctoraddress" id="doctoraddress" class="form-control" style="height: 45px;">@v.doctoraddress</textarea>
                                            </td>

                                            <td align="left">
                                                <select id='dyear' name='dyear' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.dyear'>@v.dyear</option>
                                                    <option value='2026'>2026</option>
                                                    <option value='2025'>2025</option>
                                                    <option value='2024'>2024</option>
                                                    <option value='2023'>2023</option>
                                                    <option value='2022'>2022</option>
                                                    <option value='2021'>2021</option>
                                                    <option value='2021'>2020</option>
                                                    <option value='2021'>2019</option>
                                                    <option value='2021'>2018</option>
                                                </select>

                                            </td>

                                            <td align='left'>
                                                <div class='row' style='margin: 0 0 0 -15px'>
                                                    <div class='col-md-9'>
                                                        <div class='fileUpload3'>
                                                            <span>UPLOAD</span>
                                                            <input type='file' class='upload3' id='dstaffFile_@i' onchange='fupstafffileJPG(this);'>
                                                            @if (!string.IsNullOrEmpty(@v.dsignature))
                                                            {  
                                                                <input type='hidden' class='clsFilePath_@i' name='dsignature' value="@v.dsignature">
                                                            }
                                                            else
                                                            {
                                                                <input type='hidden' class='clsFilePath_@i' name='dsignature' value="">
                                                            }
                                                        </div>
                                                    </div>
                                                    <div class='col-md-3'>
                                                        <div class='padding-top-10'>
                                                            @if (!string.IsNullOrEmpty(@v.dsignature))
                                                            {
                                                                <a class='clsFilePathAnchor_@i' href="@Url.Content(@v.dsignature)" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                                            }
                                                            else
                                                            {
                                                                <a class='clsFilePathAnchor_@i' href="#" style="display: none;" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>


                                            <td align="center">
                                                <div class="padding-top-10">
                                                    <button onclick="DeleteRowDoc(this);" type="button"><i class="fa fa-trash fa-2x text-warning"></i></button>
                                                </div>
                                            </td>
                                        </tr> 
                                                            i++;
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-md-4 col-md-offset-8">
                                <button id="btnaddDoc" type="button" class="btn btn-info btn-md pull-right">Add More</button>
                                <div class="tool-tip  slideIn" style="top: -70px; width: 65%; height: 70px;">Click here to add details of more than one Paramedical Staff employed in the establishment.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Details of Paramedical Staff</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="table-responsive">
                            <table class="table table-bordered css-serial tbUser">
                                <thead>
                                    <tr>
                                        <th width="5%" class="text-center">S.No.</th>
                                        <th width="8%">Name</th>
                                        <th width="8%">Fathers Name</th>
                                        <th width="8%">Relevant Qualification</th>
                                        <th width="8%">Institution</th>
                                        <th width="8%">Registration Type</th>
                                        <th width="8%">Registration No. of MCI/SMF</th>
                                        <th width="8%">Part/Full Time</th>
                                        <th width="8%">Age</th>
                                        <th width="10%">Address</th>
                                        <th width="10%">Registration Valid Upto</th>
                                        <th width="10%">Signature</th>
                                        <th width="5%">Remove</th>



                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var v in ViewBag.staffList)
                                    {
                                        <tr>
                                            <td align="center"></td>
                                            <td align="center">
                                                <input type="text" name="staffName" id="staffName" value="@v.staffName" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="center">
                                                <input type="text" name="stafffatherName" id="stafffatherName" value="@v.stafffatherName" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="center">
                                                <input type="text" name="staffqualification" id="staffqualification" value="@v.staffqualification" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <input type="text" name="staffinstitution" id="staffinstitution" value="@v.staffinstitution" class="form-control alpha" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <select id='staffRegistrationType' name='staffRegistrationType' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.staffRegistrationType'>@v.staffRegistrationType</option>

                                                    <option value='SMF'>SMF</option>
                                                    <option value='NA'>NA</option>
                                                </select>
                                            </td>
                                            <td align="left">
                                                <input type="text" name="staffRegistrationNo" id="staffRegistrationNo" value="@v.staffRegistrationNo" class="form-control alphaN" style="height:45px;" />
                                            </td>
                                            <td align="left">
                                                <select id='part_fullTime' name='part_fullTime' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.part_fullTime'>@v.part_fullTime</option>
                                                    <option value='Part Time'>Part Time</option>
                                                    <option value='Full Time'>Full Time</option>
                                                </select>

                                            </td>

                                            <td align="center">
                                                <input type="text" name="staffAge" id="staffAge" value="@v.staffAge" class="form-control" style="height:45px;" />
                                            </td>
                                            <td align="center">
                                                <textarea name="staffaddress" id="staffaddress" class="form-control" style="height: 45px;">@v.staffaddress</textarea>
                                            </td>

                                            <td align="left">
                                                <select id='syear' name='syear' style='height: 45px' class='form-control select'>
                                                    <option selected='selected' value='@v.syear'>@v.syear</option>
                                                    <option value='2026'>2026</option>
                                                    <option value='2025'>2025</option>
                                                    <option value='2024'>2024</option>
                                                    <option value='2023'>2023</option>
                                                    <option value='2022'>2022</option>
                                                    <option value='2021'>2021</option>
                                                    <option value='2021'>2020</option>
                                                    <option value='2021'>2019</option>
                                                    <option value='2021'>2018</option>
                                                </select>

                                            </td>

                                            <td align='left'>
                                                <div class='row' style='margin: 0 0 0 -15px'>
                                                    <div class='col-md-9'>
                                                        <div class='fileUpload3'>
                                                            <span>UPLOAD</span>
                                                            <input type='file' class='upload3' id=staffFile_@j onchange='fupstafffileJPG(this);'>
                                                            @if (!string.IsNullOrEmpty(@v.ssign))
                                                            {  
                                                                <input type='hidden' class='clsFilePath_@j' name='ssign' value="@v.ssign">
                                                            }
                                                            else
                                                            {
                                                                <input type='hidden' class='clsFilePath_@j' name='ssign' value="">
                                                            }
                                                            @*<input type='hidden' class='clsFilePath_@j' name='filePath' value="@v.filePath">*@
                                                        </div>
                                                    </div>
                                                    <div class='col-md-3'>
                                                        <div class='padding-top-10'>
                                                            @*Vinod*@
                                                            @if (!string.IsNullOrEmpty(@v.ssign))
                                                            {
                                                                <a class='clsFilePathAnchor_@j' href="@Url.Content(@v.ssign)" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                                            }
                                                            else
                                                            {
                                                                <a class='clsFilePathAnchor_@j' href="#" style="display: none;" target='_blank'><i class='fa fa-download fa-2x'></i></a>
                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            </td>


                                            <td align="center">
                                                <div class="padding-top-10">
                                                    <button onclick="DeleteRow(this);" type="button"><i class="fa fa-trash fa-2x text-warning"></i></button>
                                                </div>
                                            </td>
                                        </tr>
                                                            j++;
                                    }

                                </tbody>
                            </table>
                        </div>
                        <div class="row">
                            <div class="col-md-4 col-md-offset-8">
                                <button id="btnadd" type="button" class="btn btn-info btn-md pull-right">Add More</button>
                                <div class="tool-tip  slideIn" style="top: -70px; width: 65%; height: 70px;">Click here to add details of more than one Paramedical Staff employed in the establishment.</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Type of Facilities offered</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label>InPatient <span class="star">*</span></label>
                            </div>
                            <div class="col-md-3">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isInPatient, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isInPatient, false)
                                    No
                                </label>
                            </div>
                            @Html.ValidationMessageFor(m => m.isInPatient, "", new { @class = "text-danger" })
                        </div>
                        <div class="row">
                            <div id="divNumberofBed" class="col-md-3" style="display: none">
                                <div class="form-group">
                                    <label>Number of Beds(Inpatient) <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.numberofBed, new { @class = "form-control", tabindex = "33", @onkeypress = "return isNumberKey(event);", @maxlength = "7" })
                                    @Html.ValidationMessageFor(m => m.numberofBed, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label>OutPatient <span class="star">*</span></label>
                            </div>
                            <div class="col-md-3">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isOutPatient, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isOutPatient, false)
                                    No
                                </label>
                            </div>
                            @Html.ValidationMessageFor(m => m.isOutPatient, "", new { @class = "text-danger" })
                        </div>
                        <div id="divOutPatientType" class="row" style="display: none">
                            <div class="col-md-12">
                                <label>Type of OutPatient&nbsp;<span class="text-danger">*</span></label>
                                <br />
                                @foreach (var v in ViewBag.OutPatient)
                                {  
                                    <div class="col-md-4">
                                        <label>
                                            <input type="checkbox" name="chkOutPatient"  value="@v.Id" @(v.chk == 1 ? "checked='true'" : "")>
                                            @v.Name
                                        </label>
                                    </div>
                                }

                            </div>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id="lblOutPatient" class="text-danger" style="display: none;">Please select type of OutPatient or Specify other OutPatient type</label>

                            <div class="clearfix"></div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Specify Other OutPatient <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.otherOutPatient, new { @class = "form-control", tabindex = "33", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.otherOutPatient, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label>Laboratory <span class="star">*</span></label>
                            </div>
                            <div class="col-md-3">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isLaboratory, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isLaboratory, false)
                                    No
                                </label>
                            </div>
                            @Html.ValidationMessageFor(m => m.isLaboratory, "", new { @class = "text-danger" })
                        </div>
                        <div id="divLaboratoryType" class="row divLaboratoryType" style="display: none">
                            <div class="col-md-12">
                                <label>Type of Laboratory&nbsp;<span class="text-danger">*</span></label>
                                <br />
                                @foreach (var v in ViewBag.Laboratory)
                                {  
                                    <div class="col-md-4">
                                        <label>
                                            <input type="checkbox" name="chkLaboratory"  value="@v.Id" @(v.chk == 1 ? "checked='true'" : "")>

                                            @v.Name
                                        </label>
                                    </div>
                                        
                                }

                            </div>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id="lblLaboratory" class="text-danger" style="display: none;">Please select type of Laboratory or Specify other Laboratory type</label>

                            <div class="clearfix"></div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Specify Other Laboratory <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.otherLaboratory, new { @class = "form-control", tabindex = "33", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.otherLaboratory, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label>Imaging <span class="star">*</span></label>
                            </div>
                            <div class="col-md-3">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isImaging, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isImaging, false)
                                    No
                                </label>
                            </div>
                            @Html.ValidationMessageFor(m => m.isImaging, "", new { @class = "text-danger" })
                        </div>
                        <div class="row img" style="display: none">
                            <div class="col-md-12">
                                <label>Type of Imaging&nbsp;<span class="text-danger">*</span></label>
                                <br />
                                @foreach (var v in ViewBag.Imaging)
                                {  
                                    <div class="col-md-4">
                                        <label>
                                            <input type="checkbox" name="chkImaging"  value="@v.Id" @(v.chk == 1 ? "checked='true'" : "")>

                                            @v.Name
                                        </label>
                                    </div> 
                                }
                            </div>
                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label id="lblImaging" class="text-danger" style="display: none;">Please select type of Imaging or Specify other Imaging type </label>

                            <div class="clearfix"></div>
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>Specify Other Imaging <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.otherImaging, new { @class = "form-control", tabindex = "33", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.otherImaging, "", new { @class = "text-danger" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label>If Other Facilities Please Specify <span class="text-danger">*</span></label>
                                    @Html.TextBoxFor(m => m.clinicalEstablishmentTypeOther, new { @class = "form-control", tabindex = "34", @maxlength = "250" })
                                    @Html.ValidationMessageFor(m => m.clinicalEstablishmentTypeOther, "", new { @class = "text-danger" })
                                </div>
                                <label id="spanOtrFac" class="text-danger" style="display: none;">Please Specify Other Facilities</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label>Have you Obtained NOC from Pollution control Board? <span class="text-danger">*</span></label>
                            </div>
                            <div class="col-md-2 NOCrbtn">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isNOC, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isNOC, false)
                                    No
                                </label>
                                <br />
                                @Html.ValidationMessageFor(m => m.isNOC, "", new { @class = "text-danger" })
                            </div>
                            @*<div id="NOCfup" style="display: none">
                                <div class="col-md-3">
                                    @Html.TextBoxFor(m => m.nocCertificationNo, new { @class = "form-control", @placeholder = "Enter Certification Number", tabindex = "33", @readonly = "readonly", @maxlength = "30" })
                                    @Html.ValidationMessageFor(m => m.nocCertificationNo, "", new { @class = "text-danger" })
                                </div>


                            </div>*@
                            <div id="NOCfup" style="display: none">
                                <div class="col-md-3">
                                    @Html.TextBoxFor(m => m.nocCertificationNo, new { @class = "form-control", @placeholder = "Enter Certification Number", tabindex = "33", @maxlength = "30" })
                                    @Html.ValidationMessageFor(m => m.nocCertificationNo, "", new { @class = "text-danger" })
                                </div>
                                @if (!string.IsNullOrEmpty(Model.nOCFilePath) && Model.nOCFilePath == "Not Uploaded")
                                {
                                    <div class="col-md-2">
                                        <div class="form-group3">
                                            <div class="fileUpload3">
                                                <span>Upload </span>
                                                <input type="file" class="upload3">
                                                @Html.TextBoxFor(m => m.nOCFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this);" })
                                                @Html.HiddenFor(m => m.nOCFilePath)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.nOCFile, "", new { @class = "text-danger" })
                                            <div style="margin-top: -65px; margin-left: 123px;">
                                                <div class="form-group padding-top-30">
                                                    <a id="nOCFileAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-2">
                                        <div class="form-group3">
                                            <div class="fileUpload3">
                                                <span>Upload </span>
                                                <input type="file" class="upload3">
                                                @Html.TextBoxFor(m => m.nOCFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this);" })
                                                @Html.HiddenFor(m => m.nOCFilePath)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.nOCFile, "", new { @class = "text-danger" })

                                        </div>
                                    </div>
                                    <div class="col-md-1">

                                        <div class="form-group padding-top-30">
                                            @if (!string.IsNullOrEmpty(Model.nOCFilePath) && Model.nOCFilePath != "Not Uploaded")
                                            {
                                                <input type="hidden" name="NOCfileH" value="@Model.nOCFilePath" />
                                                <a id="nOCFileAnchor" href="@Url.Content(@Model.nOCFilePath)" target="_blank"><i class="fa fa-download fa-2x"></i></a>  
                                            }
                                        </div>

                                    </div>
                                }


                                <div class="tool-tip  slideIn" style="width: 55%;">Upload scanned copy of No Objection Certificate (NOC) received from Pollution Control Board</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="col-md-4">
                                <label>Have you Obtained Certificate from agency to Disposal of Medical Waste? <span class="text-danger">*</span></label>
                            </div>
                            <div class="col-md-2 NOCrbtn">
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isDispose, true)
                                    Yes
                                </label>
                                <label class="radio-inline">
                                    @Html.RadioButtonFor(m => m.isDispose, false)
                                    No
                                </label>
                                <br />
                                @Html.ValidationMessageFor(m => m.isDispose, "", new { @class = "text-danger" })
                            </div>
                            @*<div id="DISfup" style="display: none">
                                <div class="col-md-3">
                                    @Html.TextBoxFor(m => m.disposedNo, new { @class = "form-control", @placeholder = "Enter Certification Number", tabindex = "33", @readonly = "readonly", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.disposedNo, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                            <div id="DISfup" style="display: none">
                                <div class="col-md-3">
                                    @Html.TextBoxFor(m => m.disposedNo, new { @class = "form-control", @placeholder = "Enter Certification Number", tabindex = "33", @maxlength = "50" })
                                    @Html.ValidationMessageFor(m => m.disposedNo, "", new { @class = "text-danger" })
                                </div>
                                @if (!string.IsNullOrEmpty(Model.disposedFile) && Model.disposedFile == "Not Uploaded")
                                {
                                    <div class="col-md-2">
                                        <div class="form-group3">
                                            <div class="fileUpload3">
                                                <span>Upload </span>
                                                <input type="file" class="upload3">
                                                @Html.TextBoxFor(m => m.disposedFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this);" })
                                                @Html.HiddenFor(m => m.disposedFilePath)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.disposedFile, "", new { @class = "text-danger" })
                                            <div style="margin-top: -65px; margin-left: 123px;">
                                                <div class="form-group padding-top-30">
                                                    <a id="disposedFileAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="col-md-2">
                                        <div class="form-group3">
                                            <div class="fileUpload3">
                                                <span>Upload </span>
                                                <input type="file" class="upload3">
                                                @Html.TextBoxFor(m => m.disposedFile, new { @type = "file", @class = "upload3", @onchange = "Fileupload(this);" })
                                                @Html.HiddenFor(m => m.disposedFilePath)
                                            </div>
                                            @Html.ValidationMessageFor(m => m.disposedFile, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-1">

                                        <div class="form-group padding-top-30">

                                            @if (!string.IsNullOrEmpty(Model.disposedFile) && Model.disposedFile != "Not Uploaded")
                                            {
                                                <input type="hidden" name="DisFileH" value="@Model.disposedFile" />
                                                <a id="disposedFileAnchor" href="@Url.Content(@Model.disposedFile)" target="_blank"><i class="fa fa-download fa-2x"></i></a>  
                                            }
                                        </div>
                                    </div>
                                }

                                <div class="tool-tip  slideIn" style="width: 55%;">Upload scanned copy of No Disposed Certificate</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                            <div class="form-group">
                                <div class="col-md-4">
                                    <label>Have you Installed Firefighting System in the Establishment <span class="text-danger">*</span></label>
                                </div>
                                <div class="col-md-2 rbtnFirefight">
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(m => m.isFirefightingSystem, true)
                                        Yes
                                    </label>
                                    <label class="radio-inline">
                                        @Html.RadioButtonFor(m => m.isFirefightingSystem, false)
                                        No
                                    </label>
                                    <br />
                                    @Html.ValidationMessageFor(m => m.isFirefightingSystem, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-3">
                                </div>
                                <div id="Firefightfup" style="display: none">
                                    @if (string.IsNullOrEmpty(Model.firefightingSystemFilePath))
                                    {
                                        <div class="col-md-2">
                                            <div class="form-group3">
                                                <div class="fileUpload3">
                                                    <span>Upload </span>
                                                    @Html.TextBoxFor(m => m.firefightingSystemFile, new { @class = "upload3", @type = "file", @onchange = "Fileupload(this);" })
                                                    @Html.HiddenFor(m => m.firefightingSystemFilePath)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.firefightingSystemFile, "", new { @class = "text-danger" })
                                                <div style="margin-top: -65px; margin-left: 123px;">
                                                    <div class="form-group padding-top-30">
                                                        <a id="firefightingSystemFileAnchor" href="#" style="display: none;" target="_blank"><i class="fa fa-download fa-2x"></i></a>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-2">
                                            <div class="form-group3">
                                                <div class="fileUpload3">
                                                    <span>Upload </span>
                                                    @Html.TextBoxFor(m => m.firefightingSystemFile, new { @class = "upload3", @type = "file", @onchange = "Fileupload(this);" })
                                                    @Html.HiddenFor(m => m.firefightingSystemFilePath)
                                                </div>
                                                @Html.ValidationMessageFor(m => m.firefightingSystemFile, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="col-md-1">
                                            <div class="form-group padding-top-30">

                                                @if (!string.IsNullOrEmpty(Model.firefightingSystemFilePath))
                                                {
                                                    <input type="hidden" name="FFSys" value="@Model.firefightingSystemFilePath" />
                                                    <a id="firefightingSystemFileAnchor" href="@Url.Content(@Model.firefightingSystemFilePath)" target="_blank"><i class="fa fa-download fa-2x"></i></a>  
                                                }
                                            </div>
                                        </div>
                                    }

                                    <div class="tool-tip  slideIn" style="width: 50%;">Please upload proof of firefighting system (e.g. Pictures, Installation Bill/Invoice /Certificate or any other proof).</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-heading">
                        <span class="title elipsis">
                            <h4>Check List</h4>
                        </span>
                    </div>
                    <div class="panel-body">
                        <span id="spanmember" style="display: none" class="text-danger">Please select Required Document</span>
                        <div class="row">
                            @foreach (var v in ViewBag.CheckListRenewal)
                            {
                                <div class="form-group">
                                    <div class="col-md-5">
                                        <i class="hidden">@v.Value</i>
                                        <label class="l-20">@v.Text</label>
                                        <span id="@v.Value" class="text-danger" style="display:none">*</span>
                                    </div>
                                    <div class="col-md-1">
                                        <input type="checkbox" name="chk_checkList" value="@v.Value">
                                    </div>
                                </div>
                            }



                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="row">
                          @*  <div class="form-group">
                                <div class="col-md-2 col-md-offset-4">
                                    <button type="submit" id="btnSave" class="btn btn-block btn-primary">Save</button>
                                </div>
                                <div class="col-md-2">
                                    <a href="@Url.Action("SearchNUHDetails", "AppRegistration")" class="btn btn-block btn-warning">Reset</a>
                                </div>
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
        <div>
            @Html.HiddenFor(m => m.regisIdNUH)
            @Html.HiddenFor(m => m.operatedId)
            @Html.HiddenFor(m => m.meeRegisNo)
        </div>
        
       
           
    }
    <div class="clearfix"></div>
</div>
<script src="~/Scripts/AuditScripts.js"></script>
<script>
    $(document).ready(function () {
        debugger;

        var val = $("input[name='isNOC']:checked").val();
        if (val == 'True') {
            $("#NOCfup").show();
            $("#nOCFile").rules("remove", "required");
        }
        else {
            $("#NOCfup").hide();
        }

        var val = $("input[name='isDispose']:checked").val();
        if (val == 'True') {
            $("#DISfup").show();
            $("#disposedFile").rules("remove", "required");
        }
        else {
            $("#DISfup").hide();
        }

        var val = $("input[name='isFirefightingSystem']:checked").val();
        if (val == 'True') {
            $("#Firefightfup").show();
            $("#firefightingSystemFile").rules("remove", "required");
        }
        else {
            $("#Firefightfup").hide();
        }


        var structuralLyoutFile = '@Model.structuralLyoutFile';
        if (structuralLyoutFile != "" && structuralLyoutFile != null && structuralLyoutFile != undefined && typeof (structuralLyoutFile) != undefined && structuralLyoutFile != 'Not Uploaded') {
            $("#SturctureLayout").show();
        }
        else {
            $("#newStuructureLayout").show();
        }
        var piPhotograph = '@Model.piPhotograph';
        if (piPhotograph != "" && piPhotograph != null && piPhotograph != undefined && typeof (piPhotograph) != undefined && piPhotograph != 'Not Uploaded') {
            $("#existPhoto").show();
            $("#piPhotograph").rules("remove", "required");
        }
        else {
            $("#newPhoto").show();
        }

        var upmci_smfCertificateFile = '@Model.upmci_smfCertificateFile';
        if (upmci_smfCertificateFile != "" && upmci_smfCertificateFile != null && upmci_smfCertificateFile != undefined && typeof (upmci_smfCertificateFile) != undefined && upmci_smfCertificateFile != 'Not Uploaded') {
            $("#existMCISMF").show();
        }
        else {
            $("#newMCISMF").show();
        }

        var disposedFile = '@Model.disposedFile';
        if (disposedFile != "" && disposedFile != null && disposedFile != undefined && typeof (disposedFile) != undefined && disposedFile != 'Not Uploaded') {
            $("#disposedFilePath").val(disposedFile)
        }
        else {
            $("#disposedFilePath").val('');
        }

        $('input[type=radio][name=isNOC]').change(function () {
            debugger;
            var val = $("input[name='isNOC']:checked").val();
            if (val == 'True') {
                $("#nOCFile").attr("required", "true");;
            }
            else {
                $("#nocCertificationNo").val('');
                $("#nOCFile").val('');
                $("#nOCFilePath").val('');
                $("#nOCFileAnchor").val('');
                $("#nOCFileAnchor").hide();
            }
        });
        $('input[type=radio][name=isDispose]').change(function () {
            debugger;
            var val = $("input[name='isDispose']:checked").val();
            if (val == 'True') {
                $("#disposedFile").attr("required", "true");;
            }
            else {
                $("#disposedNo").val('');
                $("#disposedFile").val('');
                $("#disposedFilePath").val('');
                $("#disposedFileAnchor").val('');
                $("#disposedFileAnchor").hide();
            }
        });
        $('input[type=radio][name=isFirefightingSystem]').change(function () {
            debugger;
            var val = $("input[name='isFirefightingSystem']:checked").val();
            if (val == 'True') {
                $("#firefightingSystemFile").attr("required", "true");;
            }
            else {
                $("#firefightingSystemFile").val('');
                $("#firefightingSystemFilePath").val('');
                $("#firefightingSystemFileAnchor").val('');
                $("#firefightingSystemFileAnchor").hide();
            }

        });



        addEvent();
        AddRow();
        AddRowDoc();

        $("#3").show();
        $("#4").show();
        $("#15").show();
        $("input[name=establishmentArea]").prop('disabled', true);
        //$("input[name=establishmentPlace]").prop('disabled', true);
        //$("input[name=landType]").prop('disabled', true);
        $('#operatedId').prop('disabled', true);
        $('#medicalEstablishmentId').prop('disabled', true);

        $('#telephoneNo').attr('readonly', true);
        $('#telephoneNo').addClass('input-disabled');
        $('#website').attr('readonly', true);
        $('#website').addClass('input-disabled');
        $('#address').attr('readonly', true);
        $('#address').addClass('input-disabled');
        $('#pinCode').attr('readonly', true);
        $('#pinCode').addClass('input-disabled');
        $('#districtid').prop('disabled', true);

        //$('#applicantDistrictId').prop('disabled', true);

        var isInPatient = '@Model.isInPatient';
        var isOutPatient = '@Model.isOutPatient';
        var isLaboratory = '@Model.isLaboratory';
        var isImaging = '@Model.isImaging';
        var isNOC = '@Model.isNOC';
        var isDispose = '@Model.isDispose';
        var isFirefightingSystem = '@Model.isFirefightingSystem';
        binddistPersonIncharge($("#applicantStateId").val(), 0);
        binddist($("#ownerStateIdF").val());
        if (isInPatient == "True") {
            $("#divNumberofBed").show();
        }
        else {
            $("#divNumberofBed").hide();
        }

        if (isOutPatient == "True") {
            $("#divOutPatientType").show();
        }
        else {
            $("#divOutPatientType").hide();
        }
        if (isLaboratory == "True") {
            $("#divLaboratoryType").show();
        }
        else {
            $("#divLaboratoryType").hide();
        }
        if (isImaging == "True") {
            $(".img").show();
        }
        else {
            $(".img").hide();
        }


        //$("input[name=isNOC]").prop('disabled', true);
        //$("input[name=isDispose]").prop('disabled', true);
        //$("input[name=isFirefightingSystem]").prop('disabled', true);

        //if (isNOC == "True") {
        //    $("#NOCfup").show();
        //}
        //else {
        //    $("#NOCfup").hide();
        //}
        //if (isDispose == "True") {
        //    $("#DISfup").show();
        //}
        //else {
        //    $("#DISfup").hide();
        //}
        //if (isFirefightingSystem == "True") {
        //    $("#Firefightfup").show();
        //}
        //else {
        //    $("#Firefightfup").hide();
        //}



        if ($("#medicalEstablishmentId").val() == 9) {
            $(".OtherEstablishment").show();
        }
        else {
            $(".OtherEstablishment").hide();
        }
        if ($("#operatedId").val() != "") {
            $("#lbloperate").text("Name of " + $("#operatedId option:selected").text());
            $("#divOperate").show();
        }
        else {
            $("#divOperate").hide();
        }
        ///////////////////
        $('.ownerPIsame').show();
        $("#medicalEstablishmentId").change(function () {

            if ($("#medicalEstablishmentId").val() == 9) {
                $(".OtherEstablishment").show();
            }
            else {
                $(".OtherEstablishment").hide();
            }
        });

        $("input[name=establishmentPlace]").change(function () {
            $(".clasElectrycityBill").hide()
            $(".clasDivRegistry").hide()
            $(".clasRentalAgreement").hide()

            $("#establishmentPlaceOther").val('');
            if ($(this).val() == 'Other') {
                $("#divEstablishmentPlaceOther").show();
            }
            if ($(this).val() == 'Own') {
                $(".clasElectrycityBill").show();
                $(".clasDivRegistry").show();
                $(".clasRentalAgreement").hide()
                $(".clasRentalAgreement").val('');
                $("#RentalAgreementAnchor").removeAttr("href");
                $("#RentalAgreementAnchor").hide();
            }
            if ($(this).val() == 'Rental') {
                $(".clasElectrycityBill").show();
                $(".clasRentalAgreement").show();
                $(".clasDivRegistry").hide();
                $(".clasDivRegistry").val('');
                $("#RegistryAnchor").removeAttr("href");
                $("#RegistryAnchor").hide();
                
            }
        });

        if ($('input[name=establishmentPlace]:checked').val() == 'Own') {
            $('.clasDivRegistry').show();

        }

        if ($('input[name=establishmentPlace]:checked').val() == 'Rental') {
            $('.clasRentalAgreement').show();
            $('.clasDivRegistry').hide();

        }

        if ($('input[name=establishmentPlace]:checked').val() == 'Own' || $('input[name=establishmentPlace]:checked').val() == 'Rental') {
            $('.clasElectrycityBill').show();
        }

        //----------Edit----------//
        if ('@Model.operatedId' == '2') {
            $(".nonfirm").hide();
            $(".firm").show();
        }
        else {
            $(".nonfirm").show();
            $(".firm").hide();
        }



        $("#operatedId").change(function () {

            if ($("#operatedId").val() == 2) {


                AddRowOwner();
                $(".nonfirm").hide();
                $(".firm").show();
            }
            else {
                $(".nonfirm").show();
                $(".firm").hide();
            }
        });

        $("#btnSave").click(function () {
            debugger;
            var isShowPopup = true;
            var val = $("#frmRenewalcmo").validate();
            val.form();
            val.showErrors();
            if (!val.valid()) {
                swal("", "Some mandatory fields are Empty, Kindly check Application Form and fill the required Data.", "warning");
                isShowPopup = false;
                return false;
            }
            if ($('input[name=isInPatient]:checked').val() == 'False' && $('input[name=isOutPatient]:checked').val() == 'False' && $('input[name=isLaboratory]:checked').val() == 'False' && $('input[name=isImaging]:checked').val() == 'False' && $("#clinicalEstablishmentTypeOther").val() == "") {
                $('#spanOtrFac').show();
                isShowPopup = false;
                return false;
            }
            else {
                $('#spanOtrFac').hide();
                isShowPopup = true;
            }

            if ($('input[name=isOutPatient]:checked').val() == 'True') {
                if ($("#otherOutPatient").val() == "" && $('input[name=chkOutPatient]:checked').length == 0)
                { $('#lblOutPatient').show(); isShowPopup = false; return false; }
                else { $('#lblOutPatient').hide(); isShowPopup = true; }
            }
            if ($('input[name=isLaboratory]:checked').val() == 'True') {
                if ($("#otherLaboratory").val() == "" && $('input[name=chkLaboratory]:checked').length == 0)
                { $('#lblLaboratory').show(); isShowPopup = false; return false; }
                else { $('#lblLaboratory').hide(); isShowPopup = true; }
            }
            if ($('input[name=isImaging]:checked').val() == 'True') {
                if ($("#otherImaging").val() == "" && $('input[name=chkImaging]:checked').length == 0)
                { $('#lblImaging').show(); isShowPopup = false; return false; }
                else { $('#lblImaging').hide(); isShowPopup = true; }
            }
            var ary = [];
            $.each($("input[name='chk_checkList']:checked"), function () {
                ary.push($(this).val());
            });



            if ($('#isMEEaddressChange').prop("checked") && ary.length < 4) {

                $("#spanmember").show();
                isShowPopup = false;
                return false;
            }
            else if (jQuery.inArray("3", ary) < '0' || jQuery.inArray("4", ary) < '0' || jQuery.inArray("15", ary) < '0') {

                $("#spanmember").show();
                isShowPopup = false;
                return false;
            }




            if (isShowPopup) {

                var _doctorName = '';
                var _doctorFathersName = '';
                var _doctorQualification = '';
                var _NameofFoundation = '';
                var _doctorregistrationType = '';
                var _doctorregistrationNo = '';
                var _doctorPart_FullTime = '';
                var _doctorAge = '';
                var _doctoraddress = '';
                var _dyear = '';
                var _signature = '';



                $(".tbUserDoc tr:gt(0)").each(function (index, obj) {
                    var currRow = $(this);
                    index = index + 1;


                    _doctorName = currRow.find('td:eq(1)').find('input[type=text]').val();
                    _doctorFathersName = currRow.find('td:eq(2)').find('input[type=text]').val();
                    _doctorQualification = currRow.find('td:eq(3)').find('input[type=text]').val();
                    _NameofFoundation = currRow.find('td:eq(4)').find('input[type=text]').val();
                    _doctorregistrationType = currRow.find('td:eq(5)').find('select[name="staffRegistrationType"]').val();
                    _doctorregistrationNo = currRow.find('td:eq(6)').find('input[type=text]').val();
                    _doctorPart_FullTime = currRow.find('td:eq(7)').find('select[name="part_fullTime"]').val();
                    _doctorAge = currRow.find('td:eq(8)').find('input[type=text]').val();
                    _doctoraddress = currRow.find('td:eq(9)').find('textarea[name="doctoraddress"]').val();
                    _dyear = currRow.find('td:eq(10)').find('select[name="dyear"]').val();
                    _signature = currRow.find('td:eq(11)').find('input[type=hidden]').val();


                    if (_doctorName == '' && _doctorFathersName == '' && _doctorQualification == '' && _NameofFoundation == '' && _doctorregistrationType == '' && _doctorregistrationNo == '' && _doctorPart_FullTime == '' && _doctorAge == '' && _doctoraddress == '' && _dyear == '' && _signature == '' && index == 1) {
                        swal("", "Details of Doctor is required !", "warning");
                        isShowPopup = false;
                        return;
                    }
                    else if (index == 1) {

                        if (_doctorName == '') {
                            swal("", "Enter doctor Name at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorName.length > 50) {
                            swal("", "Doctor name is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorFathersName == '') {
                            swal("", "Enter Father Name at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorFathersName.length > 50) {
                            swal("", "Father name is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorQualification == '') {
                            swal("", "Enter Qualification at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorQualification.length > 50) {
                            swal("", "Qualification is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_NameofFoundation == '') {
                            swal("", "Enter Foundation at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_NameofFoundation.length > 100) {
                            swal("", "Foundation is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationType == '') {
                            swal("", "Enter  Registration Type at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationNo == '') {
                            swal("", "Enter  Registration no. at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationNo.length > 20) {
                            swal("", "Registration No. is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorPart_FullTime == '') {
                            swal("", "Enter  Part/Full Time at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorAge == '') {
                            swal("", "Enter doctor Age at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                        }
                        else if (_doctoraddress == '') {
                            swal("", "Enter doctor Address at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                        }
                        else if (_dyear == '') {
                            swal("", "Select doctor Registration Valid Upto at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                        }
                        else if (_signature == '') {
                            swal("", "Upload Signature at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                        }


                    }


                    if ((_doctorName == '' || _doctorFathersName == '' || _doctorQualification == '' || _NameofFoundation == '' || _doctorregistrationType == '' || _doctorregistrationNo == '' || _doctorPart_FullTime == '' || _doctorAge == '' || _doctoraddress == '' || _dyear == '' || _signature == '') && index > 1) {

                        if (_doctorName == '') {
                            swal("", "Enter doctor Name at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorName.length > 50) {
                            swal("", "Doctor name is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorFathersName == '') {
                            swal("", "Enter Father Name at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorFathersName.length > 50) {
                            swal("", "Father name is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorQualification == '') {
                            swal("", "Enter Qualification at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorQualification.length > 50) {
                            swal("", "Qualification is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_NameofFoundation == '') {
                            swal("", "Enter Foundation at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_NameofFoundation.length > 100) {
                            swal("", "Foundation is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationType == '') {
                            swal("", "Enter Registration Type at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationNo == '') {
                            swal("", "Enter Registration no. at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorregistrationNo.length > 20) {
                            swal("", "Registration No. is too long at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctorPart_FullTime == '') {
                            swal("", "Enter Part/Full Time at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_doctoraddress == '') {
                            swal("", "Enter doctor Address at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_dyear == '') {
                            swal("", "Select doctor Registration Valid Upto at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_signature == '') {
                            swal("", "Upload Signature at row No. " + index + " of Doctor Detail !", "warning");
                            isShowPopup = false;
                            return;
                        }

                    }
                });


                var _staffName = '';
                var _staffQuali = '';
                var _staffInsti = '';
                var _staffAge = '';
                var _staffaddress = '';
                var _syear = '';
                var _ssign = '';

                $(".tbUser tr:gt(0)").each(function (index, obj) {
                    var currRow = $(this);
                    index = index + 1;


                    _staffName = currRow.find('td:eq(1)').find('input[type=text]').val();
                    _staffFatherName = currRow.find('td:eq(2)').find('input[type=text]').val();
                    _staffQuali = currRow.find('td:eq(3)').find('input[type=text]').val();
                    _staffInsti = currRow.find('td:eq(4)').find('input[type=text]').val();
                    _staffRegistrationType = currRow.find('td:eq(5)').find('select[name="staffRegistrationType"]').val();
                    _staffRegistrationNo = currRow.find('td:eq(6)').find('input[type=text]').val();
                    _stafftime = currRow.find('td:eq(7)').find('select[name="part_fullTime"]').val();
                    _staffAge = currRow.find('td:eq(8)').find('input[type=text]').val();
                    _staffaddress = currRow.find('td:eq(9)').find('textarea[name="staffaddress"]').val();
                    _syear = currRow.find('td:eq(10)').find('select[name="syear"]').val();
                    _ssign = currRow.find('td:eq(11)').find('input[type=hidden]').val();


                    if (_staffName == '' && _staffFatherName == '' && _staffQuali == '' && _staffInsti == '' && _staffRegistrationType == '' && _staffRegistrationNo == '' && _stafftime == '' && _staffAge == '' && _staffaddress == '' && _syear == '' && _ssign == '' && index == 1) {
                        //swal("", "Details of Paramedical Staff is required !", "warning");
                        //isShowPopup = false;
                        //return;
                    }
                    else if (index == 1) {

                        if (_staffName == '') {
                            swal("", "Enter staff Name at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffName.length > 50) {
                            swal("", "Staff name is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffFatherName == '') {
                            swal("", "Enter staff Father Name at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffFatherName.length > 50) {
                            swal("", "Staff Father name is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffQuali == '') {
                            swal("", "Enter staff Qualification at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffQuali.length > 100) {
                            swal("", "Staff Qualification is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffInsti == '') {
                            swal("", "Enter staff Institution at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffInsti.length > 100) {
                            swal("", "Staff Institution is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationType == '') {
                            swal("", "Enter staff Registration Type at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationNo == '') {
                            swal("", "Enter staff Registration no. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationNo.length > 150) {
                            swal("", "Staff Registration no. is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_stafftime == '') {
                            swal("", "Enter staff Part/Full Time at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }

                        else if (_staffAge == '') {
                            swal("", "Enter staff age. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffaddress == '') {
                            swal("", "Enter staff  address. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_syear == '') {
                            swal("", "Select staff Registration Valid Upto. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_ssign == '') {
                            swal("", "Upload staff Signature. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }


                    }


                    if ((_staffName == '' || _staffFatherName == '' || _staffQuali == '' || _staffInsti == '' || _staffRegistrationType == '' || _staffRegistrationNo == '' || _stafftime == '' || _staffAge == '' || _staffaddress == '' || _syear == '' || _ssign == '') && index > 1) {

                        if (_staffName == '') {
                            swal("", "Enter staff Name at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffName.length > 50) {
                            swal("", "Staff name is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffFatherName == '') {
                            swal("", "Enter staff Father Name at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffFatherName.length > 50) {
                            swal("", "Staff Father name is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffQuali == '') {
                            swal("", "Enter staff Qualification at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffQuali.length > 100) {
                            swal("", "Staff Qualification is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffInsti == '') {
                            swal("", "Enter staff Institution at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffInsti.length > 100) {
                            swal("", "Staff Institution is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationType == '') {
                            swal("", "Enter staff Registration Type at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationNo == '') {
                            swal("", "Enter staff Registration no. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffRegistrationNo.length > 150) {
                            swal("", "Staff Registration no. is too long at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_stafftime == '') {
                            swal("", "Enter staff Part/Full Time at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }

                        else if (_staffAge == '') {
                            swal("", "Enter staff age. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_staffaddress == '') {
                            swal("", "Enter staff  address. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_syear == '') {
                            swal("", "Select staff Registration Valid Upto. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (_ssign == '') {
                            swal("", "Upload staff Signature. at row No. " + index + " of Paramedical Staff !", "warning");
                            isShowPopup = false;
                            return;
                        }

                    }
                });


                if ($("#operatedId").val() == 2) {

                    debugger;
                    var _ownerName = '';
                    var _ownerAge = '';
                    var _ownerFatherName = '';
                    var _ownerMobileNo = '';
                    var _ownerEmailId = '';
                    var _ownerAddress = '';
                    var _ownerStateId = '';
                    var _ownerDistrictId = '';
                    var _ownerPincode = '';




                    $(".tbUserOwner tr:gt(0)").each(function (index, obj) {
                        var currRow = $(this);
                        index = index + 1;

                        var _ownerName = currRow.find('td:eq(1)').find('input[type=text]').val();
                        var _ownerAge = currRow.find('td:eq(2)').find('input[type=text]').val();
                        var _ownerFatherName = currRow.find('td:eq(3)').find('input[type=text]').val();
                        var _ownerMobileNo = currRow.find('td:eq(4)').find('input[type=text]').val();
                        var _ownerEmailId = currRow.find('td:eq(5)').find('input[type=text]').val();
                        var _ownerAddress = currRow.find('td:eq(6)').find('input[type=text]').val();
                        var _ownerStateId = currRow.find('td:eq(7)').find('select[name="ownerStateId"] option:selected').val();
                        var _ownerDistrictId = currRow.find('td:eq(8)').find('select[name="ownerDistrictId"] option:selected').val();
                        var _ownerPincode = currRow.find('td:eq(9)').find('input[type=text]').val();
                        var _ownerSignature = currRow.find('td:eq(10)').find('input[type=hidden]').val();

                        var filtermobile = /^[0-9-+]+$/;
                        var filterEmail = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/
                        if (!filtermobile.test(_ownerMobileNo) || _ownerMobileNo.length != 10) {
                            swal("", "valid mobile no required at " + index + " !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        if (!filtermobile.test(_ownerPincode) || _ownerPincode.length != 6) {
                            swal("", "valid pin code required at " + index + " !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        if (!filtermobile.test(_ownerAge)) {
                            swal("", "valid age required at " + index + " !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        if (!filterEmail.test(_ownerEmailId)) {
                            swal("", "Email is invalid at " + index + " !", "warning");
                            isShowPopup = false;
                            return;
                        }



                        if (_ownerName == '' && _ownerAge == '' && _ownerFatherName == '' && _ownerMobileNo == '' && _ownerEmailId == '' && _ownerAddress == '' &&
                     _ownerStateId == '' && _ownerDistrictId == '' && _ownerPincode == ''
     && index == 1) {
                            swal("", "Details of Partner is required !", "warning");
                            isShowPopup = false;
                            return;
                        }
                        else if (index == 1) {

                            if (_ownerName == '') {
                                swal("", "Enter owner Name at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerName.length > 250) {
                                swal("", "Owner Name is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAge == '') {
                                swal("", "Enter owner age row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerFatherName == '') {
                                swal("", "Enter owner Father Name at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerFatherName.length > 250) {
                                swal("", "Owner Father Name is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerMobileNo == '') {
                                swal("", "Enter owner Mobile No at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerEmailId == '') {
                                swal("", "Enter owner Email Id at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerEmailId.length > 250) {
                                swal("", "Owner Email Id is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAddress == '') {
                                swal("", "Enter owner Address at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAddress.length > 500) {
                                swal("", "Owner Address is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerDistrictId == '') {
                                swal("", "Enter District at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerPincode == '') {
                                swal("", "Enter Pin Code Time at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerSignature == '') {
                                IsvalidSubmitmgs = "Upload Signature " + index + " of Partner Detail !";
                                IsvalidSubmit = false;
                                return;
                            }

                        }

                        if ((_ownerName == '' || _ownerAge == '' || _ownerFatherName == '' || _ownerMobileNo == '' || _ownerEmailId == '' || _ownerAddress == '' ||
                                        _ownerStateId == '' || _ownerDistrictId == '' || _ownerPincode == ''
                        ) && index > 1) {

                            if (_ownerName == '') {
                                swal("", "Enter owner Name at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerName.length > 250) {
                                swal("", "Owner Name is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAge == '') {
                                swal("", "Enter owner age at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerFatherName == '') {
                                swal("", "Enter owner Father Name at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerFatherName.length > 250) {
                                swal("", "Owner Father Name is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerMobileNo == '') {
                                swal("", "Enter owner Mobile No at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerEmailId == '') {
                                swal("", "Enter owner Email Id at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerEmailId.length > 250) {
                                swal("", "Owner Email Id is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAddress == '') {
                                swal("", "Enter Address at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerAddress.length > 500) {
                                swal("", "Owner Address is too long at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerDistrictId == '') {
                                swal("", "Enter District at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }
                            else if (_ownerPincode == '') {
                                swal("", "Enter pin code at row No. " + index + " of Partner Detail !", "warning");
                                isShowPopup = false;
                                return;
                            }

                        }
                    });
                }

            }
            if (isShowPopup) {


                return true;
            }
            else {
                return false;
            }
        });

        $('#isBelongToMedical').click(function () {

            var name = $('#ownerNameF').val();
            var MobileNo = $('#ownerMobileNoF').val();
            var EmailId = $('#ownerEmailIdF').val();
            var address = $("#ownerAddressF").val();
            var pincode = $("#ownerPincodeF").val();
            var district = $("#ownerDistrictIdF").val();
            var ownerAge = $("#ownerAgeF").val();
            var ownerFatherName = $("#ownerFatherNameF").val();



            if (name != "" && MobileNo != "" && EmailId != "" && address != "" && pincode != "" && district != "" && ownerAge != "" && ownerFatherName != "") {
                if ($(this).is(':checked')) {

                    $('.ownerPIsame').hide();


                    $("#applicantName").val(name);
                    $("#applicantAddress").val(address);
                    $("#applicantDistrictId").val(district);
                    $("#applicantPincode").val(pincode);
                    $("#applicantMobileNo").val(MobileNo);
                    $("#applicantEmailId").val(EmailId);

                    $('#applicantName').attr('readonly', true);
                    $('#applicantName').addClass('input-disabled');
                    $('#applicantAddress').attr('readonly', true);
                    $('#applicantAddress').addClass('input-disabled');
                    $('#applicantDistrictId').attr('readonly', true);
                    $('#applicantDistrictId').addClass('input-disabled');
                    $('#applicantPincode').attr('readonly', true);
                    $('#applicantPincode').addClass('input-disabled');



                    $('#applicantEmailId').attr('readonly', true);
                    $('#applicantEmailId').addClass('input-disabled');
                }
                else {
                    $("#applicantName").val("");
                    $("#applicantAddress").val("");
                    $("#applicantDistrictId").val("");
                    $("#applicantPincode").val("");
                    $("#applicantMobileNo").val("");
                    $("#applicantEmailId").val("");

                    $('#applicantName').removeAttr('readonly');
                    $('#applicantName').addClass('input-enabled');
                    $('#applicantAddress').removeAttr('readonly');
                    $('#applicantAddress').addClass('input-enabled');
                    $('#applicantDistrictId').removeAttr('readonly');
                    $('#applicantDistrictId').addClass('input-enabled');
                    $('#applicantPincode').removeAttr('readonly');
                    $('#applicantPincode').addClass('input-enabled');




                    $('#applicantEmailId').removeAttr('readonly');
                    $('#applicantEmailId').addClass('input-enabled');

                }
            }

        })
        var add = $('#address').val();
        var pin = $('#pinCode').val();
        var telno = $('#telephoneNo').val();
        var web = $('#website').val();
        $('#isMEEaddressChange').click(function () {


            if ($('#isMEEaddressChange').is(':checked')) {
                debugger;
                $("#1").show();
                $('#telephoneNo').attr('readonly', false);
                $('#telephoneNo').addClass('input-enable');
                $('#website').attr('readonly', false);
                $('#website').addClass('input-enable');
                $('#address').attr('readonly', false);
                $('#address').addClass('input-enable');
                $('#pinCode').attr('readonly', false);
                $('#pinCode').addClass('input-enable');




                $('#telephoneNo').val('');
                $('#website').val('');
                $('#address').val('');
                $('#pinCode').val('');



                $('#addressproofFileAnchor').hide();
                $('.addProof').show();
                $('.addProofView').hide();

            }
            else {
                $("#1").hide();
                $('#telephoneNo').attr('readonly', true);
                $('#telephoneNo').addClass('input-disabled');
                $('#website').attr('readonly', true);
                $('#website').addClass('input-disabled');
                $('#address').attr('readonly', true);
                $('#address').addClass('input-disabled');
                $('#pinCode').attr('readonly', true);
                $('#pinCode').addClass('input-disabled');
                $('#districtid').prop('disabled', true);

                $('#address').val(add);
                $('#pinCode').val(pin);
                $('#telephoneNo').val(telno);
                $('#website').val(web);


                $('.addProof').hide();
                $(".addProofView").show();
                $('#addressproofFileAnchor').hide();


            }
        })

        $("input[name='rbl_AgeOfConstruction']").click(function () {
            $("#lblest").hide();
            $("#divOtherEstablishmentCategory").hide();
        });


        if ('@ViewBag.msg' != '' && '@ViewBag.MsgStatus' != '') {
            swal("", '@ViewBag.msg', '@ViewBag.MsgStatus');
        }
    });
    //BEGIN Dynamic table

    var rowCount = $("#tbUser td").closest("tr").length;
    var rowCountDoc = $("#tbUserDoc td").closest("tr").length;

    function AddRow() {

        $("#btnadd").click(function () {
            debugger;
            var markup = "<tr><td align='center'></td><td><input type='text' name='staffName' id='staffName' class ='form-control alpha'  style ='height:45px' /></td><td><input type='text' name='stafffatherName' id='stafffatherName' class='form-control alpha' style ='height:45px' /></td><td><input type='text' name='staffqualification' id='staffqualification' class='form-control alpha' style ='height:45px' /></td><td><div class='form-group on-focus'><input type='text' name='staffinstitution' id='staffinstitution' class='form-control alpha' style ='height:45px' /><div class='tool-tip slideIn' style='top: -70px; height: 80px;'>Provide Name of Institute from where relevant qualification has been obtained.</div></td><td><select id='staffRegistrationType' name='staffRegistrationType' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option><option value='SMF'>SMF</option><option value='NA'>NA</option></select> </td><td><input type='text' name='staffRegistrationNo' id='staffRegistrationNo' class='form-control alphaN' style ='height:45px' /></td><td><select id='part_fullTime' name='part_fullTime' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option> <option value='Part Time'>Part Time</option><option value='Full Time'>Full Time</option></select> </td>  <td><input type='text' name='staffAge' id='staffAge' class ='form-control' style ='height:45px'></td><td><textarea name='staffaddress' id='staffaddress' class ='form-control' style ='height:45px'></textarea></td>  <td><select id='syear' name='syear' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option> <option value='2026'>2026</option><option value='2025'>2025</option><option value='2024'>2024</option><option value='2023'>2023</option><option value='2022'>2022</option><option value='2021'>2021</option><option value='2020'>2020</option><option value='2019'>2019</option><option value='2018'>2018</option></select> </td> <td align='left'><div class='row' style='margin: 0 0 0 -15px'><div class='col-md-9'><div class='fileUpload3'><span>UPLOAD</span> <input type='file' class='upload3' id='staffFile_SS" + rowCount + "' onchange='fupstafffileJPG(this);'><input type='hidden' class='clsFilePath_SS" + rowCount + "' name='ssign'></div></div><div class='col-md-3'><div class='padding-top-10'><a class='clsFilePathAnchor_SS" + rowCount + "' href='#' style='display:none;' target='_blank'><i class='fa fa-download fa-2x'></i></a></div></div></div></td> <td align='center'><div class='padding-top-10'><button id='btndel' onclick='DeleteRow(this);' type='button' ><i class='fa fa-trash fa-2x text-warning'></i></button></div></td></tr>";
            $(".tbUser tbody").append(markup);
            rowCount++;

            addEvent();
        });
    }

    function AddRowDoc() {

        $("#btnaddDoc").click(function () {
            debugger;
            var markup = "<tr><td align='center'></td><td><input type='text' name='doctorName' id='doctorName' class ='form-control alpha'  style ='height:45px' /></td><td><input type='text' name='doctorFathersName' id='doctorFathersName' class='form-control alpha' style ='height:45px' /></td><td><input type='text' name='doctorQualification' id='doctorQualification' class='form-control alpha' style ='height:45px' /></td><td><div class='form-group on-focus'><input type='text' name='NameofFoundation' id='NameofFoundation' class='form-control alpha' style ='height:45px' /><div class='tool-tip slideIn' style='top: -70px; height: 80px;'>Provide Name of Institute from where relevant qualification has been obtained.</div></td><td><select id='doctorregistrationType' name='doctorregistrationType' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option> <option value='MCI'>MCI</option><option value='SMF'>SMF</option><option value='SMC'>SMC</option><option value='DCI'>DCI</option></select> </td><td><input type='text' name='doctorregistrationNo' id='doctorregistrationNo' class='form-control alphaN' style ='height:45px' /></td><td><select id='doctorPart_FullTime' name='doctorPart_FullTime' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option> <option value='Part Time'>Part Time</option><option value='Full Time'>Full Time</option></select> </td>  <td><input type='text' name='doctorAge' id='doctorAge' class ='form-control' style ='height:45px'></td><td><textarea name='doctoraddress' id='doctoraddress' class ='form-control' style ='height:45px'></textarea></td>  <td><select id='dyear' name='dyear' style = 'height:45px' class='form-control select' ><option value=''>--Select--</option> <option value='2026'>2026</option><option value='2025'>2025</option><option value='2024'>2024</option><option value='2023'>2023</option><option value='2022'>2022</option><option value='2021'>2021</option><option value='2020'>2020</option><option value='2019'>2019</option><option value='2018'>2018</option></select> </td> <td align='left'><div class='row' style='margin: 0 0 0 -15px'><div class='col-md-9'><div class='fileUpload3'><span>UPLOAD</span> <input type='file' class='upload3' id='staffFile_S" + rowCountDoc + "' onchange='fupstafffileJPG(this);'><input type='hidden' class='clsFilePath_S" + rowCountDoc + "' name='dsignature'></div></div><div class='col-md-3'><div class='padding-top-10'><a class='clsFilePathAnchor_S" + rowCountDoc + "' href='#' style='display:none;' target='_blank'><i class='fa fa-download fa-2x'></i></a></div></div></div></td> <td align='center'><div class='padding-top-10'><button id='btndeldoc' onclick='DeleteRowDoc(this);' type='button' ><i class='fa fa-trash fa-2x text-warning'></i></button></div></td></tr>";
            $(".tbUserDoc tbody").append(markup);
            rowCountDoc++;

            addEvent();
        });
    }

    function DeleteRow(obj) {
        debugger;
        rowCount = $(".tbUser td").closest("tr").length;
        if (rowCount > 1) {

            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, Delete it !",
                cancelButtonText: "No, Cancel it !",
                closeOnConfirm: true,
                closeOnCancel: true
            }, function (isConfirm) {
                if (isConfirm) {
                    $(obj).closest('tr').remove();
                    rowCount--;
                }
            });
        }
        else {
            swal("", "Details can not be deleted ", "warning");
        }
    }
    function DeleteRowDoc(obj) {
        debugger;
        rowCountDoc = $(".tbUserDoc td").closest("tr").length;
        if (rowCountDoc > 1) {

            swal({
                title: "Are you sure?",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, Delete it !",
                cancelButtonText: "No, Cancel it !",
                closeOnConfirm: true,
                closeOnCancel: true
            }, function (isConfirm) {
                if (isConfirm) {
                    $(obj).closest('tr').remove();
                    rowCountDoc--;
                }
            });
        }
        else {
            swal("", "Details can not be deleted ", "warning");
        }
    }
    //END Dynamic table
    //BEGIN For onclick control view

    $('.rbtn input[type="radio"]').change(function () {

        $('#ddlEsubCat').show();


    });
    function showHideOtherEstablishmentCategory(obj) {
        debugger;

        if (obj.value == 5 || obj.value == 11) {
            $('#divOtherEstablishmentCategory').show();
        }
        else {
            $('#divOtherEstablishmentCategory').hide();
        }
    }

    function showHideOtherSeviceType(obj) {
        debugger;

        if (obj.value == 5) {
            $('#divOtherServiceType').show();
        }
        else {
            $('#divOtherServiceType').hide();
        }
    }

    function Clinicalshowtxt(obj) {
        debugger;

        if (obj.value == 8) {
            $('#ClinicalName').show();
        }
        else if (obj.value == 19) {
            $('#ClinicalName').show();
        }
        else if (obj.value == 25) {
            $('#ClinicalName').show();
        }
        else if (obj.value == 31) {
            $('#ClinicalName').show();
        }
        else {
            $('#ClinicalName').hide();
        }
    }




    $('input[name="isNOC"]').change(function () {
        if (this.value == "True") {

            $('#NOCfup').show();
        }
        else {

            $('#NOCfup').hide();
        }
    });
    $('input[name="isDispose"]').change(function () {
        if (this.value == "True") {

            $('#DISfup').show();
        }
        else {

            $('#DISfup').hide();
        }
    });
    $('input[name="isFirefightingSystem"]').change(function () {
        if (this.value == "True") {
            $('#Firefightfup').show();
        }
        else {
            $('#Firefightfup').hide();
        }
    });

    //END For onclick control view
    function isClear(obj) {

        var data = $(obj).attr("Id");


        $("#isBelongToMedical").removeAttr("checked");
        $("#applicantName").val("");
        $("#applicantAddress").val("");
        $("#applicantDistrictId").val("");
        $("#applicantPincode").val("");
        $("#applicantMobileNo").val("");
        $("#applicantEmailId").val("");
        $('#applicantName').removeAttr('readonly');
        $('#applicantName').addClass('input-enabled');
        $('#applicantAddress').removeAttr('readonly');
        $('#applicantAddress').addClass('input-enabled');
        $('#applicantDistrictId').removeAttr('readonly');
        $('#applicantDistrictId').addClass('input-enabled');
        $('#applicantPincode').removeAttr('readonly');
        $('#applicantPincode').addClass('input-enabled');

        $('#applicantEmailId').removeAttr('readonly');
        $('#applicantEmailId').addClass('input-enabled');

    }


    $("#operatedId").change(function () {
        if ($("#operatedId").val() != "") {
            $("#lbloperate").text("Name of " + $("#operatedId option:selected").text());
            $("#divOperate").show();
        }
        else {
            $("#divOperate").hide();
        }
    });

    //BEGIN fup path
    function Fileupload(obj) {
        debugger;
        var fileId = $(obj).attr("id");
        var ext = obj.value.match(/\.(.+)$/)[1];

        switch (ext) {
            case 'pdf':
            case 'jpg':

                var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
                if (fileSize > 2) {
                    swal("", "Maximum 2MB file size are allowed", "warning");
                    return false;
                }
                else {
                    var data = new FormData();
                    var files = $("#" + fileId).get(0).files;
                    if (files.length > 0) {
                        data.append("File", files[0]);
                    }
                    $.ajax({
                        url: '@Url.Action("UploadFile", "NUH")',
                        type: "POST",
                        processData: false,
                        contentType: false,
                        data: data,
                        success: function (response) {

                            if (response[1] == 'SNV') {
                                swal("", 'Maximum 2 MB file size are allowed !', "warning");
                            }
                            else if (response[1] == 'TNV') {
                                swal("", 'Only pdf and jpg files are allowed !', "warning");
                            }
                            else {
                                var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                                $("#" + fileId + "Anchor").removeAttr('href');
                                $("#" + fileId + "Anchor").attr('href', url);
                                $("#" + fileId + "Anchor").show();
                                $("#" + fileId + "Path").val(response[1]);
                            }
                            return false;
                        },
                        error: function () {
                        }
                    });

            }
            break;
        default:
            swal("", 'This is not an allowed file type only pdf and jpg  file valid for this', "warning");
            this.value = '';
            return false;
    }

}


function fupstafffileJPG(obj) {
    debugger;
    var fileId = $(obj).attr("id");
    var ext = obj.value.match(/\.(.+)$/)[1];

    switch (ext) {
        case 'pdf':
        case 'jpg':

            var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
            if (fileSize > 2) {
                swal("", "Maximum 2MB file size are allowed", "warning");
                return false;
            }
            else {
                var data = new FormData();
                var files = $("#" + fileId).get(0).files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                }
                $.ajax({
                    url: '@Url.Action("UploadFileJPG", "AppRegistration")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {

                        if (response[1] == 'SNV') {
                            swal("", 'Maximum 2 MB file size are allowed !', "warning");
                        }
                        else if (response[1] == 'TNV') {
                            swal("", 'Only jpg files are allowed !', "warning");
                        }
                        else {
                            var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                                $(".clsFilePathAnchor_" + fileId.split('_')[1]).removeAttr('href');
                                $(".clsFilePathAnchor_" + fileId.split('_')[1]).attr('href', url);
                                $(".clsFilePathAnchor_" + fileId.split('_')[1]).show();
                                $(".clsFilePath_" + fileId.split('_')[1]).val(response[1]);
                            }
                            return false;
                        },
                    error: function () {
                    }
                });

            }
            break;
        default:
            swal("", 'This is not an allowed file type only jpg  file valid for this', "warning");
            this.value = '';
            return false;
    }

}



function fupstafffile(obj) {
    debugger;
    var fileId = $(obj).attr("id");

    var ext = obj.value.match(/\.(.+)$/)[1];
    switch (ext) {
        case 'pdf':
        case 'jpg':

            var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
            if (fileSize > 2) {
                swal("", "Maximum 2MB file size are allowed", "warning");
                return false;
            }
            else {
                var data = new FormData();
                var files = $("#" + fileId).get(0).files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                }
                $.ajax({
                    url: '@Url.Action("UploadFile", "NUH")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {

                        if (response[1] == 'SNV') {
                            swal("", 'Maximum 2 MB file size are allowed !', "warning");
                        }
                        else if (response[1] == 'TNV') {
                            swal("", 'Only pdf and jpg files are allowed !', "warning");
                        }
                        else {
                            var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                            $(".clsFilePathAnchor_" + fileId.split('_')[1]).removeAttr('href');
                            $(".clsFilePathAnchor_" + fileId.split('_')[1]).attr('href', url);
                            $(".clsFilePathAnchor_" + fileId.split('_')[1]).show();

                            $(".clsFilePath_" + fileId.split('_')[1]).val(response[1]);
                        }
                    },
                    error: function () {
                    }
                });

        }
        break;
    default:
        swal("", 'This is not an allowed file type.only pdf file valid for this', "warning");
        this.value = '';
        return false;
}
}

function fupstafffileOwner(obj) {
    debugger;
    var fileId = $(obj).attr("id");
    var ext = obj.value.match(/\.(.+)$/)[1];
    switch (ext) {
        case 'pdf':
        case 'jpg':

            var fileSize = ($("#" + fileId)[0].files[0].size / 1024 / 1024);
            if (fileSize > 2) {
                swal("", "Maximum 2MB file size are allowed", "warning");
                return false;
            }
            else {
                var data = new FormData();
                var files = $("#" + fileId).get(0).files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                }
                $.ajax({
                    url: '@Url.Action("UploadFile", "NUH")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        if (response[1] == 'SNV') {
                            swal("", 'Maximum 2 MB file size are allowed !', "warning");
                        }
                        else if (response[1] == 'TNV') {
                            swal("", 'Only pdf and jpg files are allowed !', "warning");
                        }
                        else {
                            var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                            $(".clsFilePathAnchor1_" + fileId.split('_')[1]).removeAttr('href');
                            $(".clsFilePathAnchor1_" + fileId.split('_')[1]).attr('href', url);
                            $(".clsFilePathAnchor1_" + fileId.split('_')[1]).show();
                            $(".clsFilePath1_" + fileId.split('_')[1]).val(response[1]);
                        }
                    },
                    error: function () {
                    }
                });

        }
        break;
    default:
        swal("", 'This is not an allowed file type.only pdf file valid for this', "warning");
        this.value = '';
        return false;
}
}
$('input[name=isInPatient]').click(function () {

    var v = $('input[name=isInPatient]:checked').val();
    if (v == "True") {
        $("#divNumberofBed").show();
    }
    else {
        $("#divNumberofBed").hide();
        $("#numberofBed").val('');
    }

});
$('input[name=isOutPatient]').click(function () {

    var v = $('input[name=isOutPatient]:checked').val();
    if (v == "True") {
        $("#divOutPatientType").show();
    }
    else {
        $("#divOutPatientType").hide();
        $("#otherOutPatient").val('');
        $('input[name=chkOutPatient]').attr('checked', false);
    }

});
$('input[name=isLaboratory]').click(function () {

    var v = $('input[name=isLaboratory]:checked').val();
    if (v == "True") {
        $("#divLaboratoryType").show();
    }
    else {
        $("#divLaboratoryType").hide();
        $("#otherLaboratory").val('');
        $('input[name=chkLaboratory]').attr('checked', false);
    }

});
$('input[name=isImaging]').click(function () {

    var v = $('input[name=isImaging]:checked').val();
    if (v == "True") {
        $(".img").show();
    }
    else {
        $(".img").hide();
        $("#otherImaging").val('');
        $('input[name=chkImaging]').attr('checked', false);
    }

});

function isNumberKey(evt) {
    debugger;
    var charCode = (evt.which) ? evt.which : event.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
        return false;
    return true;
}

function isalphabet(evt) {
    debugger;
    var charCode = (evt.which) ? evt.which : event.keyCode

    if ((charCode >= 65 && charCode <= 91) || charCode == 8 ||
         (charCode >= 97 && charCode <= 122) || charCode == 46)
        return false;
    return true;
}

$("#btnaddOwner").click(function () {

    AddRowOwner();
});
var rowCountOwner = 1;
function AddRowOwner() {
    debugger;



    if (rowCountOwner <= 3) {
        rowCountOwner++;
        var markup = "<tr><td align='center'></td><td><input type='text' name='ownerName' id='ownerName'></td><td><input type='text' name='ownerAge' id='ownerAge' maxlength='2' onkeypress = 'return isNumberKey(event);' ></td><td><input type='text' name='ownerFatherName' id='ownerFatherName'></td><td><input type='text' name='ownerMobileNo' id='ownerMobileNo' maxlength='10' onkeypress = 'return isNumberKey(event);' ></td><td><input type='text' name='ownerEmailId' id='ownerEmailId'></td><td><input type='text' name='ownerAddress' id='ownerAddress'></td><td><select class='ownerStateId_" + rowCountOwner + " form-control select' name='ownerStateId'></select></td><td><select class='ownerDistrictId_" + rowCountOwner + " form-control select' name='ownerDistrictId'></select></td><td><input type='text' name='ownerPincode' id='ownerPincode' maxlength='6' onkeypress = 'return isNumberKey(event);' ></td> <td align='center'><div class='padding-top-10'><button id='btndelOwner' onclick='DeleteRowOwner(this);' type='button' ><i class='fa fa-trash fa-2x text-warning'></i></button></div></td></tr>";
        $(".tbUserOwner tbody").append(markup);


        $.ajax({
            url: '@Url.Action("DropdownDistNUH", "NUH")',
            datatype: "json",
            type: 'GET',
            async: false,
            success: function (data) {
                debugger;
                $(".ownerStateId_" + rowCountOwner).append('<option value="' + 34 + '">' + 'Uttar Pradesh' + '</option>');
                $(".ownerDistrictId_" + rowCountOwner).empty();
                $(".ownerDistrictId_" + rowCountOwner).append("<option value=''>--Select--</option>");
                $.each(data, function (i, result) {


                    $(".ownerDistrictId_" + rowCountOwner).append('<option value="' + result.Value + '">' + result.Text + '</option>');
                });

            },
            error: function () {
            }
        });


    }
    else {
        swal("", "Maximum Four Partners Are Allowed! ", "warning");
        return false;
    }

}

function DeleteRowOwner(obj) {
    debugger;
    if (rowCountOwner > 2) {
        swal({
            title: "Are you sure?",
            type: "warning",
            showCancelButton: true,
            confirmButtonClass: "btn-danger",
            confirmButtonText: "Yes, Delete it !",
            cancelButtonText: "No, Cancel it !",
            closeOnConfirm: true,
            closeOnCancel: true
        }, function (isConfirm) {
            if (isConfirm) {
                $(obj).closest('tr').remove();
                rowCountOwner--;
            }
        });
    }
    else {
        swal("", "Details can not be deleted ", "warning");
    }
}
//END fup for Bulk fileupload path 

$("#applicantStateId").change(function () {
    binddistPersonIncharge($("#applicantStateId").val(), 0);
})
function binddistPersonIncharge(applicantStateId, district) {
    debugger;
    $.ajax({
        type: 'GET',
        url: '@Url.Action("binddistNUH", "AppRegistration")',
        data: { ownerStateIdF: applicantStateId },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $("#applicantDistrictId").empty();
            $("#applicantDistrictId").append("<option value=''>--Select--</option>")
            $.each(data, function (i, result) {
                $("#applicantDistrictId").append("<option value='" + result.Value + "'>" + result.Text + "</option>")
            });
            if ('@TempData["applicantDistrictId"]' != '') {
                var appdist = '@TempData["applicantDistrictId"]';
                $("#applicantDistrictId").val(appdist);
            }
        },
        failure: function () {
            alert("Failed!");
        }
    });
}
$("#ownerStateIdF").change(function () {
    binddist($("#ownerStateIdF").val());
})
function binddist(ownerStateIdF) {
    debugger;
    // alert(ownerStateIdF);
    $.ajax({
        type: 'GET',
        url: '@Url.Action("binddistNUH", "AppRegistration")',
        data: { ownerStateIdF: ownerStateIdF },
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function (data) {
            $("#ownerDistrictIdF").empty();
            $("#ownerDistrictIdF").append("<option value=''>--Select--</option>")
            $.each(data, function (i, result) {
                $("#ownerDistrictIdF").append("<option value='" + result.Value + "'>" + result.Text + "</option>")
            });
            if ('@TempData["ownerDistrictIdF"]' != '') {
                var owndist = '@TempData["ownerDistrictIdF"]';
                $("#ownerDistrictIdF").val(owndist);
            }
        },
        failure: function () {
            alert("Failed!");
        }
    });
}

function Fileupload(obj) {
    debugger;
    var fileId = $(obj).attr("id");
    var ext = obj.value.match(/\.(.+)$/)[1];
    //alert(fileId);
    switch (ext) {
        case 'pdf':
        case 'jpg':

            var fileSize = (obj.files[0].size);
            fileSize = (fileSize / 1024) / 1024;
            if (fileSize > 2) {
                swal("", "Maximum 2MB file size are allowed", "warning");
                return false;
            }
            else {
                var data = new FormData();
                var files = obj.files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                } else {
                    return false;
                }
                $.ajax({
                    url: '@Url.Action("UploadFile", "AppRegistration")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        debugger
                        if (response[1] == 'SNV') {
                            swal("", 'Maximum 2 MB file size are allowed !', "warning");
                        }
                        else if (response[1] == 'TNV') {
                            swal("", 'Only pdf and jpg files are allowed !', "warning");
                        }
                        else {
                            var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                            $("#" + fileId + "Anchor").removeAttr('href');
                            $("#" + fileId + "Anchor").attr('href', url);
                            $("#" + fileId + "Anchor").show();

                            $("#" + fileId + "Path").val(response[1]);
                            //if (fileId == "firefightingSystemFile")
                            //{
                            //    $("#firefightingSystemFileAnchor").val($("#firefightingSystemFilePath").val());
                            //}
                        }
                        return false;
                    },
                    error: function () {
                    }
                });

        }
        break;
    default:
        swal("", 'This is not an allowed file type only pdf and jpg  file valid for this', "warning");
        this.value = '';
        return false;
}

}

function PhotoFileupload(obj) {
    debugger;
    var fileId = $(obj).attr("id");
    var ext = obj.value.match(/\.(.+)$/)[1];
    //alert(fileId);
    switch (ext) {
        case 'pdf':
        case 'jpg':

            var fileSize = (obj.files[0].size);
            fileSize = (fileSize / 1024) / 1024;
            if (fileSize > 2) {
                swal("", "Maximum 2MB file size are allowed", "warning");
                return false;
            }
            else {
                var data = new FormData();
                var files = obj.files;
                if (files.length > 0) {
                    data.append("File", files[0]);
                } else {
                    return false;
                }
                $.ajax({
                    url: '@Url.Action("UploadFileJPG", "AppRegistration")',
                    type: "POST",
                    processData: false,
                    contentType: false,
                    data: data,
                    success: function (response) {
                        debugger
                        if (response[1] == 'SNV') {
                            swal("", 'Maximum 2 MB file size are allowed !', "warning");
                        }
                        else if (response[1] == 'TNV') {
                            swal("", 'Only jpg files are allowed !', "warning");
                        }
                        else {
                            var url = '@Url.Content("~/Content/writereaddata/NUH/")' + response[0];
                            $("#" + fileId + "Anchor").removeAttr('href');
                            $("#" + fileId + "Anchor").attr('href', url);
                            $("#" + fileId + "Anchor").show();

                            $("#" + fileId + "Path").val(response[1]);
                            $("#existpiPhotographAnchor").attr('href', url);
                            $('input[name=piPhotoH]').val(url);
                            //if (fileId == "firefightingSystemFile")
                            //{
                            //    $("#firefightingSystemFileAnchor").val($("#firefightingSystemFilePath").val());
                            //}
                        }
                        return false;
                    },
                    error: function () {
                    }
                });

        }
        break;
    default:
        swal("", 'This is not an allowed file type only jpg  file valid for this', "warning");
        this.value = '';
        return false;
}

}



$("#numberofBed").change(function () {
    if ($("#numberofBed").val() > 49) {
        swal("", "Number of Beds(Inpatient) Can Not Be More Than 49", "info");
        $("#numberofBed").val('')
        return false;
    }
});

$("input[name=establishmentPlace]").change(function () {
    $("#divEstablishmentPlaceOther").hide();
    $(".clasElectricityBill").hide()
    $(".clasDivRegistry").hide()
    $(".clasRentalAgreement").hide()



    $("#establishmentPlaceOther").val('');
    if ($(this).val() == 'Other') {
        $("#divEstablishmentPlaceOther").show();
    }
    if ($(this).val() == 'Own') {
        $(".clasElectricityBill").show();
        $(".clasDivRegistry").show();
        $(".clasRentalAgreement").hide()
        $("#RentalAgreement").val('');
        $("#RentalAgreementPath").val('');

    }
    if ($(this).val() == 'Rental') {
        $(".clasElectricityBill").show();
        $(".clasRentalAgreement").show();
        $(".clasDivRegistry").hide();
        $("#Registry").val('');
        $("#RegistryPath").val('');


    }

});

</script>


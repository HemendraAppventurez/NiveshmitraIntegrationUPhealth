//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace CCSHealthFamilyWelfareDept.DataSet {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSetNUH")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSetNUH : global::System.Data.DataSet {
        
        private proc_getNUHChildDataTable tableproc_getNUHChild;
        
        private GetNUHrptDetailDataTable tableGetNUHrptDetail;
        
        private proc_GetCertificateDetialDICDataTable tableproc_GetCertificateDetialDIC;
        
        private proc_getNUHChildRptDataTable tableproc_getNUHChildRpt;
        
        private GetMERdetailChildRptDataTable tableGetMERdetailChildRpt;
        
        private GetILCdetailForCertificateRptDataTable tableGetILCdetailForCertificateRpt;
        
        private GetFICdetailForCertificateRptDataTable tableGetFICdetailForCertificateRpt;
        
        private proc_GetImmuChildCertificateDataTable tableproc_GetImmuChildCertificate;
        
        private GetMERdetailRptDataTable tableGetMERdetailRpt;
        
        private GetMLCdetailForCertificateRptDataTable tableGetMLCdetailForCertificateRpt;
        
        private GetMLCCHILDdetailForCertificateRptDataTable tableGetMLCCHILDdetailForCertificateRpt;
        
        private proc_rptIMC_CertificateDataTable tableproc_rptIMC_Certificate;
        
        private GetDECdetailForCertificateRptDataTable tableGetDECdetailForCertificateRpt;
        
        private proc_getNUHChildDOCRptDataTable tableproc_getNUHChildDOCRpt;
        
        private proc_getNUHChildOwnerRptDataTable tableproc_getNUHChildOwnerRpt;
        
        private Proc_GetCommitteeMemberDataTable tableProc_GetCommitteeMember;
        
        private proc_rptAGC_CertificateDataTable tableproc_rptAGC_Certificate;
        
        private proc_rptAGC_CertificateReportDataTable tableproc_rptAGC_CertificateReport;
        
        private Proc_GetCommitteeMemberDICDataTable tableProc_GetCommitteeMemberDIC;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSetNUH() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSetNUH(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["proc_getNUHChild"] != null)) {
                    base.Tables.Add(new proc_getNUHChildDataTable(ds.Tables["proc_getNUHChild"]));
                }
                if ((ds.Tables["GetNUHrptDetail"] != null)) {
                    base.Tables.Add(new GetNUHrptDetailDataTable(ds.Tables["GetNUHrptDetail"]));
                }
                if ((ds.Tables["proc_GetCertificateDetialDIC"] != null)) {
                    base.Tables.Add(new proc_GetCertificateDetialDICDataTable(ds.Tables["proc_GetCertificateDetialDIC"]));
                }
                if ((ds.Tables["proc_getNUHChildRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildRptDataTable(ds.Tables["proc_getNUHChildRpt"]));
                }
                if ((ds.Tables["GetMERdetailChildRpt"] != null)) {
                    base.Tables.Add(new GetMERdetailChildRptDataTable(ds.Tables["GetMERdetailChildRpt"]));
                }
                if ((ds.Tables["GetILCdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetILCdetailForCertificateRptDataTable(ds.Tables["GetILCdetailForCertificateRpt"]));
                }
                if ((ds.Tables["GetFICdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetFICdetailForCertificateRptDataTable(ds.Tables["GetFICdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_GetImmuChildCertificate"] != null)) {
                    base.Tables.Add(new proc_GetImmuChildCertificateDataTable(ds.Tables["proc_GetImmuChildCertificate"]));
                }
                if ((ds.Tables["GetMERdetailRpt"] != null)) {
                    base.Tables.Add(new GetMERdetailRptDataTable(ds.Tables["GetMERdetailRpt"]));
                }
                if ((ds.Tables["GetMLCdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetMLCdetailForCertificateRptDataTable(ds.Tables["GetMLCdetailForCertificateRpt"]));
                }
                if ((ds.Tables["GetMLCCHILDdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetMLCCHILDdetailForCertificateRptDataTable(ds.Tables["GetMLCCHILDdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_rptIMC_Certificate"] != null)) {
                    base.Tables.Add(new proc_rptIMC_CertificateDataTable(ds.Tables["proc_rptIMC_Certificate"]));
                }
                if ((ds.Tables["GetDECdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetDECdetailForCertificateRptDataTable(ds.Tables["GetDECdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_getNUHChildDOCRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildDOCRptDataTable(ds.Tables["proc_getNUHChildDOCRpt"]));
                }
                if ((ds.Tables["proc_getNUHChildOwnerRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildOwnerRptDataTable(ds.Tables["proc_getNUHChildOwnerRpt"]));
                }
                if ((ds.Tables["Proc_GetCommitteeMember"] != null)) {
                    base.Tables.Add(new Proc_GetCommitteeMemberDataTable(ds.Tables["Proc_GetCommitteeMember"]));
                }
                if ((ds.Tables["proc_rptAGC_Certificate"] != null)) {
                    base.Tables.Add(new proc_rptAGC_CertificateDataTable(ds.Tables["proc_rptAGC_Certificate"]));
                }
                if ((ds.Tables["proc_rptAGC_CertificateReport"] != null)) {
                    base.Tables.Add(new proc_rptAGC_CertificateReportDataTable(ds.Tables["proc_rptAGC_CertificateReport"]));
                }
                if ((ds.Tables["Proc_GetCommitteeMemberDIC"] != null)) {
                    base.Tables.Add(new Proc_GetCommitteeMemberDICDataTable(ds.Tables["Proc_GetCommitteeMemberDIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_getNUHChildDataTable proc_getNUHChild {
            get {
                return this.tableproc_getNUHChild;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetNUHrptDetailDataTable GetNUHrptDetail {
            get {
                return this.tableGetNUHrptDetail;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_GetCertificateDetialDICDataTable proc_GetCertificateDetialDIC {
            get {
                return this.tableproc_GetCertificateDetialDIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_getNUHChildRptDataTable proc_getNUHChildRpt {
            get {
                return this.tableproc_getNUHChildRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMERdetailChildRptDataTable GetMERdetailChildRpt {
            get {
                return this.tableGetMERdetailChildRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetILCdetailForCertificateRptDataTable GetILCdetailForCertificateRpt {
            get {
                return this.tableGetILCdetailForCertificateRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetFICdetailForCertificateRptDataTable GetFICdetailForCertificateRpt {
            get {
                return this.tableGetFICdetailForCertificateRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_GetImmuChildCertificateDataTable proc_GetImmuChildCertificate {
            get {
                return this.tableproc_GetImmuChildCertificate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMERdetailRptDataTable GetMERdetailRpt {
            get {
                return this.tableGetMERdetailRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMLCdetailForCertificateRptDataTable GetMLCdetailForCertificateRpt {
            get {
                return this.tableGetMLCdetailForCertificateRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetMLCCHILDdetailForCertificateRptDataTable GetMLCCHILDdetailForCertificateRpt {
            get {
                return this.tableGetMLCCHILDdetailForCertificateRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_rptIMC_CertificateDataTable proc_rptIMC_Certificate {
            get {
                return this.tableproc_rptIMC_Certificate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetDECdetailForCertificateRptDataTable GetDECdetailForCertificateRpt {
            get {
                return this.tableGetDECdetailForCertificateRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_getNUHChildDOCRptDataTable proc_getNUHChildDOCRpt {
            get {
                return this.tableproc_getNUHChildDOCRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_getNUHChildOwnerRptDataTable proc_getNUHChildOwnerRpt {
            get {
                return this.tableproc_getNUHChildOwnerRpt;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Proc_GetCommitteeMemberDataTable Proc_GetCommitteeMember {
            get {
                return this.tableProc_GetCommitteeMember;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_rptAGC_CertificateDataTable proc_rptAGC_Certificate {
            get {
                return this.tableproc_rptAGC_Certificate;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public proc_rptAGC_CertificateReportDataTable proc_rptAGC_CertificateReport {
            get {
                return this.tableproc_rptAGC_CertificateReport;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Proc_GetCommitteeMemberDICDataTable Proc_GetCommitteeMemberDIC {
            get {
                return this.tableProc_GetCommitteeMemberDIC;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSetNUH cln = ((DataSetNUH)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["proc_getNUHChild"] != null)) {
                    base.Tables.Add(new proc_getNUHChildDataTable(ds.Tables["proc_getNUHChild"]));
                }
                if ((ds.Tables["GetNUHrptDetail"] != null)) {
                    base.Tables.Add(new GetNUHrptDetailDataTable(ds.Tables["GetNUHrptDetail"]));
                }
                if ((ds.Tables["proc_GetCertificateDetialDIC"] != null)) {
                    base.Tables.Add(new proc_GetCertificateDetialDICDataTable(ds.Tables["proc_GetCertificateDetialDIC"]));
                }
                if ((ds.Tables["proc_getNUHChildRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildRptDataTable(ds.Tables["proc_getNUHChildRpt"]));
                }
                if ((ds.Tables["GetMERdetailChildRpt"] != null)) {
                    base.Tables.Add(new GetMERdetailChildRptDataTable(ds.Tables["GetMERdetailChildRpt"]));
                }
                if ((ds.Tables["GetILCdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetILCdetailForCertificateRptDataTable(ds.Tables["GetILCdetailForCertificateRpt"]));
                }
                if ((ds.Tables["GetFICdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetFICdetailForCertificateRptDataTable(ds.Tables["GetFICdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_GetImmuChildCertificate"] != null)) {
                    base.Tables.Add(new proc_GetImmuChildCertificateDataTable(ds.Tables["proc_GetImmuChildCertificate"]));
                }
                if ((ds.Tables["GetMERdetailRpt"] != null)) {
                    base.Tables.Add(new GetMERdetailRptDataTable(ds.Tables["GetMERdetailRpt"]));
                }
                if ((ds.Tables["GetMLCdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetMLCdetailForCertificateRptDataTable(ds.Tables["GetMLCdetailForCertificateRpt"]));
                }
                if ((ds.Tables["GetMLCCHILDdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetMLCCHILDdetailForCertificateRptDataTable(ds.Tables["GetMLCCHILDdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_rptIMC_Certificate"] != null)) {
                    base.Tables.Add(new proc_rptIMC_CertificateDataTable(ds.Tables["proc_rptIMC_Certificate"]));
                }
                if ((ds.Tables["GetDECdetailForCertificateRpt"] != null)) {
                    base.Tables.Add(new GetDECdetailForCertificateRptDataTable(ds.Tables["GetDECdetailForCertificateRpt"]));
                }
                if ((ds.Tables["proc_getNUHChildDOCRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildDOCRptDataTable(ds.Tables["proc_getNUHChildDOCRpt"]));
                }
                if ((ds.Tables["proc_getNUHChildOwnerRpt"] != null)) {
                    base.Tables.Add(new proc_getNUHChildOwnerRptDataTable(ds.Tables["proc_getNUHChildOwnerRpt"]));
                }
                if ((ds.Tables["Proc_GetCommitteeMember"] != null)) {
                    base.Tables.Add(new Proc_GetCommitteeMemberDataTable(ds.Tables["Proc_GetCommitteeMember"]));
                }
                if ((ds.Tables["proc_rptAGC_Certificate"] != null)) {
                    base.Tables.Add(new proc_rptAGC_CertificateDataTable(ds.Tables["proc_rptAGC_Certificate"]));
                }
                if ((ds.Tables["proc_rptAGC_CertificateReport"] != null)) {
                    base.Tables.Add(new proc_rptAGC_CertificateReportDataTable(ds.Tables["proc_rptAGC_CertificateReport"]));
                }
                if ((ds.Tables["Proc_GetCommitteeMemberDIC"] != null)) {
                    base.Tables.Add(new Proc_GetCommitteeMemberDICDataTable(ds.Tables["Proc_GetCommitteeMemberDIC"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableproc_getNUHChild = ((proc_getNUHChildDataTable)(base.Tables["proc_getNUHChild"]));
            if ((initTable == true)) {
                if ((this.tableproc_getNUHChild != null)) {
                    this.tableproc_getNUHChild.InitVars();
                }
            }
            this.tableGetNUHrptDetail = ((GetNUHrptDetailDataTable)(base.Tables["GetNUHrptDetail"]));
            if ((initTable == true)) {
                if ((this.tableGetNUHrptDetail != null)) {
                    this.tableGetNUHrptDetail.InitVars();
                }
            }
            this.tableproc_GetCertificateDetialDIC = ((proc_GetCertificateDetialDICDataTable)(base.Tables["proc_GetCertificateDetialDIC"]));
            if ((initTable == true)) {
                if ((this.tableproc_GetCertificateDetialDIC != null)) {
                    this.tableproc_GetCertificateDetialDIC.InitVars();
                }
            }
            this.tableproc_getNUHChildRpt = ((proc_getNUHChildRptDataTable)(base.Tables["proc_getNUHChildRpt"]));
            if ((initTable == true)) {
                if ((this.tableproc_getNUHChildRpt != null)) {
                    this.tableproc_getNUHChildRpt.InitVars();
                }
            }
            this.tableGetMERdetailChildRpt = ((GetMERdetailChildRptDataTable)(base.Tables["GetMERdetailChildRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetMERdetailChildRpt != null)) {
                    this.tableGetMERdetailChildRpt.InitVars();
                }
            }
            this.tableGetILCdetailForCertificateRpt = ((GetILCdetailForCertificateRptDataTable)(base.Tables["GetILCdetailForCertificateRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetILCdetailForCertificateRpt != null)) {
                    this.tableGetILCdetailForCertificateRpt.InitVars();
                }
            }
            this.tableGetFICdetailForCertificateRpt = ((GetFICdetailForCertificateRptDataTable)(base.Tables["GetFICdetailForCertificateRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetFICdetailForCertificateRpt != null)) {
                    this.tableGetFICdetailForCertificateRpt.InitVars();
                }
            }
            this.tableproc_GetImmuChildCertificate = ((proc_GetImmuChildCertificateDataTable)(base.Tables["proc_GetImmuChildCertificate"]));
            if ((initTable == true)) {
                if ((this.tableproc_GetImmuChildCertificate != null)) {
                    this.tableproc_GetImmuChildCertificate.InitVars();
                }
            }
            this.tableGetMERdetailRpt = ((GetMERdetailRptDataTable)(base.Tables["GetMERdetailRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetMERdetailRpt != null)) {
                    this.tableGetMERdetailRpt.InitVars();
                }
            }
            this.tableGetMLCdetailForCertificateRpt = ((GetMLCdetailForCertificateRptDataTable)(base.Tables["GetMLCdetailForCertificateRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetMLCdetailForCertificateRpt != null)) {
                    this.tableGetMLCdetailForCertificateRpt.InitVars();
                }
            }
            this.tableGetMLCCHILDdetailForCertificateRpt = ((GetMLCCHILDdetailForCertificateRptDataTable)(base.Tables["GetMLCCHILDdetailForCertificateRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetMLCCHILDdetailForCertificateRpt != null)) {
                    this.tableGetMLCCHILDdetailForCertificateRpt.InitVars();
                }
            }
            this.tableproc_rptIMC_Certificate = ((proc_rptIMC_CertificateDataTable)(base.Tables["proc_rptIMC_Certificate"]));
            if ((initTable == true)) {
                if ((this.tableproc_rptIMC_Certificate != null)) {
                    this.tableproc_rptIMC_Certificate.InitVars();
                }
            }
            this.tableGetDECdetailForCertificateRpt = ((GetDECdetailForCertificateRptDataTable)(base.Tables["GetDECdetailForCertificateRpt"]));
            if ((initTable == true)) {
                if ((this.tableGetDECdetailForCertificateRpt != null)) {
                    this.tableGetDECdetailForCertificateRpt.InitVars();
                }
            }
            this.tableproc_getNUHChildDOCRpt = ((proc_getNUHChildDOCRptDataTable)(base.Tables["proc_getNUHChildDOCRpt"]));
            if ((initTable == true)) {
                if ((this.tableproc_getNUHChildDOCRpt != null)) {
                    this.tableproc_getNUHChildDOCRpt.InitVars();
                }
            }
            this.tableproc_getNUHChildOwnerRpt = ((proc_getNUHChildOwnerRptDataTable)(base.Tables["proc_getNUHChildOwnerRpt"]));
            if ((initTable == true)) {
                if ((this.tableproc_getNUHChildOwnerRpt != null)) {
                    this.tableproc_getNUHChildOwnerRpt.InitVars();
                }
            }
            this.tableProc_GetCommitteeMember = ((Proc_GetCommitteeMemberDataTable)(base.Tables["Proc_GetCommitteeMember"]));
            if ((initTable == true)) {
                if ((this.tableProc_GetCommitteeMember != null)) {
                    this.tableProc_GetCommitteeMember.InitVars();
                }
            }
            this.tableproc_rptAGC_Certificate = ((proc_rptAGC_CertificateDataTable)(base.Tables["proc_rptAGC_Certificate"]));
            if ((initTable == true)) {
                if ((this.tableproc_rptAGC_Certificate != null)) {
                    this.tableproc_rptAGC_Certificate.InitVars();
                }
            }
            this.tableproc_rptAGC_CertificateReport = ((proc_rptAGC_CertificateReportDataTable)(base.Tables["proc_rptAGC_CertificateReport"]));
            if ((initTable == true)) {
                if ((this.tableproc_rptAGC_CertificateReport != null)) {
                    this.tableproc_rptAGC_CertificateReport.InitVars();
                }
            }
            this.tableProc_GetCommitteeMemberDIC = ((Proc_GetCommitteeMemberDICDataTable)(base.Tables["Proc_GetCommitteeMemberDIC"]));
            if ((initTable == true)) {
                if ((this.tableProc_GetCommitteeMemberDIC != null)) {
                    this.tableProc_GetCommitteeMemberDIC.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSetNUH";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSetNUH.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableproc_getNUHChild = new proc_getNUHChildDataTable();
            base.Tables.Add(this.tableproc_getNUHChild);
            this.tableGetNUHrptDetail = new GetNUHrptDetailDataTable();
            base.Tables.Add(this.tableGetNUHrptDetail);
            this.tableproc_GetCertificateDetialDIC = new proc_GetCertificateDetialDICDataTable();
            base.Tables.Add(this.tableproc_GetCertificateDetialDIC);
            this.tableproc_getNUHChildRpt = new proc_getNUHChildRptDataTable();
            base.Tables.Add(this.tableproc_getNUHChildRpt);
            this.tableGetMERdetailChildRpt = new GetMERdetailChildRptDataTable();
            base.Tables.Add(this.tableGetMERdetailChildRpt);
            this.tableGetILCdetailForCertificateRpt = new GetILCdetailForCertificateRptDataTable();
            base.Tables.Add(this.tableGetILCdetailForCertificateRpt);
            this.tableGetFICdetailForCertificateRpt = new GetFICdetailForCertificateRptDataTable();
            base.Tables.Add(this.tableGetFICdetailForCertificateRpt);
            this.tableproc_GetImmuChildCertificate = new proc_GetImmuChildCertificateDataTable();
            base.Tables.Add(this.tableproc_GetImmuChildCertificate);
            this.tableGetMERdetailRpt = new GetMERdetailRptDataTable();
            base.Tables.Add(this.tableGetMERdetailRpt);
            this.tableGetMLCdetailForCertificateRpt = new GetMLCdetailForCertificateRptDataTable();
            base.Tables.Add(this.tableGetMLCdetailForCertificateRpt);
            this.tableGetMLCCHILDdetailForCertificateRpt = new GetMLCCHILDdetailForCertificateRptDataTable();
            base.Tables.Add(this.tableGetMLCCHILDdetailForCertificateRpt);
            this.tableproc_rptIMC_Certificate = new proc_rptIMC_CertificateDataTable();
            base.Tables.Add(this.tableproc_rptIMC_Certificate);
            this.tableGetDECdetailForCertificateRpt = new GetDECdetailForCertificateRptDataTable();
            base.Tables.Add(this.tableGetDECdetailForCertificateRpt);
            this.tableproc_getNUHChildDOCRpt = new proc_getNUHChildDOCRptDataTable();
            base.Tables.Add(this.tableproc_getNUHChildDOCRpt);
            this.tableproc_getNUHChildOwnerRpt = new proc_getNUHChildOwnerRptDataTable();
            base.Tables.Add(this.tableproc_getNUHChildOwnerRpt);
            this.tableProc_GetCommitteeMember = new Proc_GetCommitteeMemberDataTable();
            base.Tables.Add(this.tableProc_GetCommitteeMember);
            this.tableproc_rptAGC_Certificate = new proc_rptAGC_CertificateDataTable();
            base.Tables.Add(this.tableproc_rptAGC_Certificate);
            this.tableproc_rptAGC_CertificateReport = new proc_rptAGC_CertificateReportDataTable();
            base.Tables.Add(this.tableproc_rptAGC_CertificateReport);
            this.tableProc_GetCommitteeMemberDIC = new Proc_GetCommitteeMemberDICDataTable();
            base.Tables.Add(this.tableProc_GetCommitteeMemberDIC);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_getNUHChild() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetNUHrptDetail() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_GetCertificateDetialDIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_getNUHChildRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetMERdetailChildRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetILCdetailForCertificateRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetFICdetailForCertificateRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_GetImmuChildCertificate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetMERdetailRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetMLCdetailForCertificateRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetMLCCHILDdetailForCertificateRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_rptIMC_Certificate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetDECdetailForCertificateRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_getNUHChildDOCRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_getNUHChildOwnerRpt() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProc_GetCommitteeMember() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_rptAGC_Certificate() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeproc_rptAGC_CertificateReport() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeProc_GetCommitteeMemberDIC() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSetNUH ds = new DataSetNUH();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_getNUHChildRowChangeEventHandler(object sender, proc_getNUHChildRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetNUHrptDetailRowChangeEventHandler(object sender, GetNUHrptDetailRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_GetCertificateDetialDICRowChangeEventHandler(object sender, proc_GetCertificateDetialDICRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_getNUHChildRptRowChangeEventHandler(object sender, proc_getNUHChildRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetMERdetailChildRptRowChangeEventHandler(object sender, GetMERdetailChildRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetILCdetailForCertificateRptRowChangeEventHandler(object sender, GetILCdetailForCertificateRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetFICdetailForCertificateRptRowChangeEventHandler(object sender, GetFICdetailForCertificateRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_GetImmuChildCertificateRowChangeEventHandler(object sender, proc_GetImmuChildCertificateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetMERdetailRptRowChangeEventHandler(object sender, GetMERdetailRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetMLCdetailForCertificateRptRowChangeEventHandler(object sender, GetMLCdetailForCertificateRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetMLCCHILDdetailForCertificateRptRowChangeEventHandler(object sender, GetMLCCHILDdetailForCertificateRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_rptIMC_CertificateRowChangeEventHandler(object sender, proc_rptIMC_CertificateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetDECdetailForCertificateRptRowChangeEventHandler(object sender, GetDECdetailForCertificateRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_getNUHChildDOCRptRowChangeEventHandler(object sender, proc_getNUHChildDOCRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_getNUHChildOwnerRptRowChangeEventHandler(object sender, proc_getNUHChildOwnerRptRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Proc_GetCommitteeMemberRowChangeEventHandler(object sender, Proc_GetCommitteeMemberRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_rptAGC_CertificateRowChangeEventHandler(object sender, proc_rptAGC_CertificateRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void proc_rptAGC_CertificateReportRowChangeEventHandler(object sender, proc_rptAGC_CertificateReportRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void Proc_GetCommitteeMemberDICRowChangeEventHandler(object sender, Proc_GetCommitteeMemberDICRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_getNUHChildDataTable : global::System.Data.TypedTableBase<proc_getNUHChildRow> {
            
            private global::System.Data.DataColumn columnnursingDocumentId;
            
            private global::System.Data.DataColumn columnregisIdNUH;
            
            private global::System.Data.DataColumn columnstaffName;
            
            private global::System.Data.DataColumn columnstaffqualification;
            
            private global::System.Data.DataColumn columnstaffinstitution;
            
            private global::System.Data.DataColumn columnstaffRegistrationNo;
            
            private global::System.Data.DataColumn columnstaffNameOfMCI_SMF;
            
            private global::System.Data.DataColumn columnfilePath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDataTable() {
                this.TableName = "proc_getNUHChild";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_getNUHChildDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nursingDocumentIdColumn {
                get {
                    return this.columnnursingDocumentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdNUHColumn {
                get {
                    return this.columnregisIdNUH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffNameColumn {
                get {
                    return this.columnstaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffqualificationColumn {
                get {
                    return this.columnstaffqualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffinstitutionColumn {
                get {
                    return this.columnstaffinstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffRegistrationNoColumn {
                get {
                    return this.columnstaffRegistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffNameOfMCI_SMFColumn {
                get {
                    return this.columnstaffNameOfMCI_SMF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn filePathColumn {
                get {
                    return this.columnfilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRow this[int index] {
                get {
                    return ((proc_getNUHChildRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRowChangeEventHandler proc_getNUHChildRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRowChangeEventHandler proc_getNUHChildRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRowChangeEventHandler proc_getNUHChildRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRowChangeEventHandler proc_getNUHChildRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_getNUHChildRow(proc_getNUHChildRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRow Addproc_getNUHChildRow(long regisIdNUH, string staffName, string staffqualification, string staffinstitution, string staffRegistrationNo, string staffNameOfMCI_SMF, string filePath) {
                proc_getNUHChildRow rowproc_getNUHChildRow = ((proc_getNUHChildRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regisIdNUH,
                        staffName,
                        staffqualification,
                        staffinstitution,
                        staffRegistrationNo,
                        staffNameOfMCI_SMF,
                        filePath};
                rowproc_getNUHChildRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_getNUHChildRow);
                return rowproc_getNUHChildRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRow FindBynursingDocumentId(long nursingDocumentId) {
                return ((proc_getNUHChildRow)(this.Rows.Find(new object[] {
                            nursingDocumentId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_getNUHChildDataTable cln = ((proc_getNUHChildDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_getNUHChildDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnursingDocumentId = base.Columns["nursingDocumentId"];
                this.columnregisIdNUH = base.Columns["regisIdNUH"];
                this.columnstaffName = base.Columns["staffName"];
                this.columnstaffqualification = base.Columns["staffqualification"];
                this.columnstaffinstitution = base.Columns["staffinstitution"];
                this.columnstaffRegistrationNo = base.Columns["staffRegistrationNo"];
                this.columnstaffNameOfMCI_SMF = base.Columns["staffNameOfMCI_SMF"];
                this.columnfilePath = base.Columns["filePath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnursingDocumentId = new global::System.Data.DataColumn("nursingDocumentId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnursingDocumentId);
                this.columnregisIdNUH = new global::System.Data.DataColumn("regisIdNUH", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdNUH);
                this.columnstaffName = new global::System.Data.DataColumn("staffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffName);
                this.columnstaffqualification = new global::System.Data.DataColumn("staffqualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffqualification);
                this.columnstaffinstitution = new global::System.Data.DataColumn("staffinstitution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffinstitution);
                this.columnstaffRegistrationNo = new global::System.Data.DataColumn("staffRegistrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffRegistrationNo);
                this.columnstaffNameOfMCI_SMF = new global::System.Data.DataColumn("staffNameOfMCI_SMF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffNameOfMCI_SMF);
                this.columnfilePath = new global::System.Data.DataColumn("filePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfilePath);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnnursingDocumentId}, true));
                this.columnnursingDocumentId.AutoIncrement = true;
                this.columnnursingDocumentId.AutoIncrementSeed = -1;
                this.columnnursingDocumentId.AutoIncrementStep = -1;
                this.columnnursingDocumentId.AllowDBNull = false;
                this.columnnursingDocumentId.ReadOnly = true;
                this.columnnursingDocumentId.Unique = true;
                this.columnstaffName.MaxLength = 50;
                this.columnstaffqualification.MaxLength = 100;
                this.columnstaffinstitution.MaxLength = 100;
                this.columnstaffRegistrationNo.MaxLength = 150;
                this.columnstaffNameOfMCI_SMF.MaxLength = 150;
                this.columnfilePath.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRow Newproc_getNUHChildRow() {
                return ((proc_getNUHChildRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_getNUHChildRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_getNUHChildRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_getNUHChildRowChanged != null)) {
                    this.proc_getNUHChildRowChanged(this, new proc_getNUHChildRowChangeEvent(((proc_getNUHChildRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_getNUHChildRowChanging != null)) {
                    this.proc_getNUHChildRowChanging(this, new proc_getNUHChildRowChangeEvent(((proc_getNUHChildRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_getNUHChildRowDeleted != null)) {
                    this.proc_getNUHChildRowDeleted(this, new proc_getNUHChildRowChangeEvent(((proc_getNUHChildRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_getNUHChildRowDeleting != null)) {
                    this.proc_getNUHChildRowDeleting(this, new proc_getNUHChildRowChangeEvent(((proc_getNUHChildRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_getNUHChildRow(proc_getNUHChildRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_getNUHChildDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetNUHrptDetailDataTable : global::System.Data.TypedTableBase<GetNUHrptDetailRow> {
            
            private global::System.Data.DataColumn columnregisIdNUH;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnDate;
            
            private global::System.Data.DataColumn columnToDate;
            
            private global::System.Data.DataColumn columnEstablishmentName;
            
            private global::System.Data.DataColumn columnEstablishmentType;
            
            private global::System.Data.DataColumn columnADDRESS;
            
            private global::System.Data.DataColumn columnoperatedBy;
            
            private global::System.Data.DataColumn columnservices;
            
            private global::System.Data.DataColumn columnPname;
            
            private global::System.Data.DataColumn columnpersonInChrageAddress;
            
            private global::System.Data.DataColumn columnqualification;
            
            private global::System.Data.DataColumn columninstitution;
            
            private global::System.Data.DataColumn columnregistrationNumber;
            
            private global::System.Data.DataColumn columnCentral_StateCouncilName;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columnStateName;
            
            private global::System.Data.DataColumn columnpinCode;
            
            private global::System.Data.DataColumn columncertificateFilePath;
            
            private global::System.Data.DataColumn columnoperatedByName;
            
            private global::System.Data.DataColumn columnmeeRegisNo;
            
            private global::System.Data.DataColumn columncertiGendBy;
            
            private global::System.Data.DataColumn columncertificateGeneratedDate;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnapplicantMobileNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailDataTable() {
                this.TableName = "GetNUHrptDetail";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetNUHrptDetailDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetNUHrptDetailDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdNUHColumn {
                get {
                    return this.columnregisIdNUH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DateColumn {
                get {
                    return this.columnDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ToDateColumn {
                get {
                    return this.columnToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstablishmentNameColumn {
                get {
                    return this.columnEstablishmentName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EstablishmentTypeColumn {
                get {
                    return this.columnEstablishmentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ADDRESSColumn {
                get {
                    return this.columnADDRESS;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn operatedByColumn {
                get {
                    return this.columnoperatedBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn servicesColumn {
                get {
                    return this.columnservices;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PnameColumn {
                get {
                    return this.columnPname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn personInChrageAddressColumn {
                get {
                    return this.columnpersonInChrageAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn qualificationColumn {
                get {
                    return this.columnqualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn institutionColumn {
                get {
                    return this.columninstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNumberColumn {
                get {
                    return this.columnregistrationNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Central_StateCouncilNameColumn {
                get {
                    return this.columnCentral_StateCouncilName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateNameColumn {
                get {
                    return this.columnStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn pinCodeColumn {
                get {
                    return this.columnpinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateFilePathColumn {
                get {
                    return this.columncertificateFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn operatedByNameColumn {
                get {
                    return this.columnoperatedByName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn meeRegisNoColumn {
                get {
                    return this.columnmeeRegisNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certiGendByColumn {
                get {
                    return this.columncertiGendBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateGeneratedDateColumn {
                get {
                    return this.columncertificateGeneratedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn applicantMobileNoColumn {
                get {
                    return this.columnapplicantMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRow this[int index] {
                get {
                    return ((GetNUHrptDetailRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetNUHrptDetailRowChangeEventHandler GetNUHrptDetailRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetNUHrptDetailRowChangeEventHandler GetNUHrptDetailRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetNUHrptDetailRowChangeEventHandler GetNUHrptDetailRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetNUHrptDetailRowChangeEventHandler GetNUHrptDetailRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetNUHrptDetailRow(GetNUHrptDetailRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRow AddGetNUHrptDetailRow(
                        string registrationNo, 
                        string Date, 
                        string ToDate, 
                        string EstablishmentName, 
                        string EstablishmentType, 
                        string ADDRESS, 
                        string operatedBy, 
                        string services, 
                        string Pname, 
                        string personInChrageAddress, 
                        string qualification, 
                        string institution, 
                        string registrationNumber, 
                        string Central_StateCouncilName, 
                        string certificateNo, 
                        string DistrictName, 
                        string StateName, 
                        string pinCode, 
                        string certificateFilePath, 
                        string operatedByName, 
                        string meeRegisNo, 
                        string certiGendBy, 
                        string certificateGeneratedDate, 
                        string Title, 
                        string applicantMobileNo) {
                GetNUHrptDetailRow rowGetNUHrptDetailRow = ((GetNUHrptDetailRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        registrationNo,
                        Date,
                        ToDate,
                        EstablishmentName,
                        EstablishmentType,
                        ADDRESS,
                        operatedBy,
                        services,
                        Pname,
                        personInChrageAddress,
                        qualification,
                        institution,
                        registrationNumber,
                        Central_StateCouncilName,
                        certificateNo,
                        DistrictName,
                        StateName,
                        pinCode,
                        certificateFilePath,
                        operatedByName,
                        meeRegisNo,
                        certiGendBy,
                        certificateGeneratedDate,
                        Title,
                        applicantMobileNo};
                rowGetNUHrptDetailRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetNUHrptDetailRow);
                return rowGetNUHrptDetailRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRow FindByregisIdNUH(long regisIdNUH) {
                return ((GetNUHrptDetailRow)(this.Rows.Find(new object[] {
                            regisIdNUH})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetNUHrptDetailDataTable cln = ((GetNUHrptDetailDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetNUHrptDetailDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdNUH = base.Columns["regisIdNUH"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnDate = base.Columns["Date"];
                this.columnToDate = base.Columns["ToDate"];
                this.columnEstablishmentName = base.Columns["EstablishmentName"];
                this.columnEstablishmentType = base.Columns["EstablishmentType"];
                this.columnADDRESS = base.Columns["ADDRESS"];
                this.columnoperatedBy = base.Columns["operatedBy"];
                this.columnservices = base.Columns["services"];
                this.columnPname = base.Columns["Pname"];
                this.columnpersonInChrageAddress = base.Columns["personInChrageAddress"];
                this.columnqualification = base.Columns["qualification"];
                this.columninstitution = base.Columns["institution"];
                this.columnregistrationNumber = base.Columns["registrationNumber"];
                this.columnCentral_StateCouncilName = base.Columns["Central_StateCouncilName"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columnStateName = base.Columns["StateName"];
                this.columnpinCode = base.Columns["pinCode"];
                this.columncertificateFilePath = base.Columns["certificateFilePath"];
                this.columnoperatedByName = base.Columns["operatedByName"];
                this.columnmeeRegisNo = base.Columns["meeRegisNo"];
                this.columncertiGendBy = base.Columns["certiGendBy"];
                this.columncertificateGeneratedDate = base.Columns["certificateGeneratedDate"];
                this.columnTitle = base.Columns["Title"];
                this.columnapplicantMobileNo = base.Columns["applicantMobileNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdNUH = new global::System.Data.DataColumn("regisIdNUH", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdNUH);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnDate = new global::System.Data.DataColumn("Date", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDate);
                this.columnToDate = new global::System.Data.DataColumn("ToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnToDate);
                this.columnEstablishmentName = new global::System.Data.DataColumn("EstablishmentName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablishmentName);
                this.columnEstablishmentType = new global::System.Data.DataColumn("EstablishmentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEstablishmentType);
                this.columnADDRESS = new global::System.Data.DataColumn("ADDRESS", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnADDRESS);
                this.columnoperatedBy = new global::System.Data.DataColumn("operatedBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperatedBy);
                this.columnservices = new global::System.Data.DataColumn("services", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnservices);
                this.columnPname = new global::System.Data.DataColumn("Pname", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPname);
                this.columnpersonInChrageAddress = new global::System.Data.DataColumn("personInChrageAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpersonInChrageAddress);
                this.columnqualification = new global::System.Data.DataColumn("qualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnqualification);
                this.columninstitution = new global::System.Data.DataColumn("institution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninstitution);
                this.columnregistrationNumber = new global::System.Data.DataColumn("registrationNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNumber);
                this.columnCentral_StateCouncilName = new global::System.Data.DataColumn("Central_StateCouncilName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCentral_StateCouncilName);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnStateName = new global::System.Data.DataColumn("StateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStateName);
                this.columnpinCode = new global::System.Data.DataColumn("pinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpinCode);
                this.columncertificateFilePath = new global::System.Data.DataColumn("certificateFilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateFilePath);
                this.columnoperatedByName = new global::System.Data.DataColumn("operatedByName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoperatedByName);
                this.columnmeeRegisNo = new global::System.Data.DataColumn("meeRegisNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmeeRegisNo);
                this.columncertiGendBy = new global::System.Data.DataColumn("certiGendBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertiGendBy);
                this.columncertificateGeneratedDate = new global::System.Data.DataColumn("certificateGeneratedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateGeneratedDate);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnapplicantMobileNo = new global::System.Data.DataColumn("applicantMobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplicantMobileNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdNUH}, true));
                this.columnregisIdNUH.AutoIncrement = true;
                this.columnregisIdNUH.AutoIncrementSeed = -1;
                this.columnregisIdNUH.AutoIncrementStep = -1;
                this.columnregisIdNUH.AllowDBNull = false;
                this.columnregisIdNUH.ReadOnly = true;
                this.columnregisIdNUH.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columnDate.ReadOnly = true;
                this.columnDate.MaxLength = 20;
                this.columnToDate.ReadOnly = true;
                this.columnToDate.MaxLength = 25;
                this.columnEstablishmentName.ReadOnly = true;
                this.columnEstablishmentName.MaxLength = 250;
                this.columnEstablishmentType.ReadOnly = true;
                this.columnEstablishmentType.MaxLength = 100;
                this.columnADDRESS.ReadOnly = true;
                this.columnADDRESS.MaxLength = 2147483647;
                this.columnoperatedBy.ReadOnly = true;
                this.columnoperatedBy.MaxLength = 250;
                this.columnservices.ReadOnly = true;
                this.columnservices.MaxLength = 100;
                this.columnPname.ReadOnly = true;
                this.columnPname.MaxLength = 50;
                this.columnpersonInChrageAddress.ReadOnly = true;
                this.columnpersonInChrageAddress.MaxLength = 1;
                this.columnqualification.ReadOnly = true;
                this.columnqualification.MaxLength = 50;
                this.columninstitution.ReadOnly = true;
                this.columninstitution.MaxLength = 50;
                this.columnregistrationNumber.ReadOnly = true;
                this.columnregistrationNumber.MaxLength = 20;
                this.columnCentral_StateCouncilName.ReadOnly = true;
                this.columnCentral_StateCouncilName.MaxLength = 50;
                this.columncertificateNo.ReadOnly = true;
                this.columncertificateNo.MaxLength = 15;
                this.columnDistrictName.ReadOnly = true;
                this.columnDistrictName.MaxLength = 2147483647;
                this.columnStateName.ReadOnly = true;
                this.columnStateName.MaxLength = 2147483647;
                this.columnpinCode.MaxLength = 10;
                this.columncertificateFilePath.MaxLength = 250;
                this.columnoperatedByName.MaxLength = 250;
                this.columnmeeRegisNo.MaxLength = 20;
                this.columncertiGendBy.MaxLength = 250;
                this.columncertificateGeneratedDate.ReadOnly = true;
                this.columncertificateGeneratedDate.MaxLength = 25;
                this.columnTitle.ReadOnly = true;
                this.columnTitle.MaxLength = 44;
                this.columnapplicantMobileNo.MaxLength = 15;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRow NewGetNUHrptDetailRow() {
                return ((GetNUHrptDetailRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetNUHrptDetailRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetNUHrptDetailRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetNUHrptDetailRowChanged != null)) {
                    this.GetNUHrptDetailRowChanged(this, new GetNUHrptDetailRowChangeEvent(((GetNUHrptDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetNUHrptDetailRowChanging != null)) {
                    this.GetNUHrptDetailRowChanging(this, new GetNUHrptDetailRowChangeEvent(((GetNUHrptDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetNUHrptDetailRowDeleted != null)) {
                    this.GetNUHrptDetailRowDeleted(this, new GetNUHrptDetailRowChangeEvent(((GetNUHrptDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetNUHrptDetailRowDeleting != null)) {
                    this.GetNUHrptDetailRowDeleting(this, new GetNUHrptDetailRowChangeEvent(((GetNUHrptDetailRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetNUHrptDetailRow(GetNUHrptDetailRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetNUHrptDetailDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_GetCertificateDetialDICDataTable : global::System.Data.TypedTableBase<proc_GetCertificateDetialDICRow> {
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnaddress;
            
            private global::System.Data.DataColumn columndisabilityType;
            
            private global::System.Data.DataColumn columndisabilityDetail;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columncertiGenDate;
            
            private global::System.Data.DataColumn columnmonthYear;
            
            private global::System.Data.DataColumn columndisabilityPer;
            
            private global::System.Data.DataColumn columnmarkOfIdentification;
            
            private global::System.Data.DataColumn columnregisIdDIC;
            
            private global::System.Data.DataColumn columndisabilityPer1;
            
            private global::System.Data.DataColumn columnreassName;
            
            private global::System.Data.DataColumn columnconditionName;
            
            private global::System.Data.DataColumn columnpassportsizephoto;
            
            private global::System.Data.DataColumn columnphotoIdNo;
            
            private global::System.Data.DataColumn columnidProofName;
            
            private global::System.Data.DataColumn columncertiGendBy;
            
            private global::System.Data.DataColumn columninprocessDICId;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columncommitteeId;
            
            private global::System.Data.DataColumn columncommitteeId1;
            
            private global::System.Data.DataColumn columnreassPeriod;
            
            private global::System.Data.DataColumn columnreassPeriodType;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICDataTable() {
                this.TableName = "proc_GetCertificateDetialDIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_GetCertificateDetialDICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_GetCertificateDetialDICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn addressColumn {
                get {
                    return this.columnaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn disabilityTypeColumn {
                get {
                    return this.columndisabilityType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn disabilityDetailColumn {
                get {
                    return this.columndisabilityDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certiGenDateColumn {
                get {
                    return this.columncertiGenDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn monthYearColumn {
                get {
                    return this.columnmonthYear;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn disabilityPerColumn {
                get {
                    return this.columndisabilityPer;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn markOfIdentificationColumn {
                get {
                    return this.columnmarkOfIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdDICColumn {
                get {
                    return this.columnregisIdDIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn disabilityPer1Column {
                get {
                    return this.columndisabilityPer1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reassNameColumn {
                get {
                    return this.columnreassName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn conditionNameColumn {
                get {
                    return this.columnconditionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn passportsizephotoColumn {
                get {
                    return this.columnpassportsizephoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn photoIdNoColumn {
                get {
                    return this.columnphotoIdNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idProofNameColumn {
                get {
                    return this.columnidProofName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certiGendByColumn {
                get {
                    return this.columncertiGendBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inprocessDICIdColumn {
                get {
                    return this.columninprocessDICId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn committeeIdColumn {
                get {
                    return this.columncommitteeId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn committeeId1Column {
                get {
                    return this.columncommitteeId1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reassPeriodColumn {
                get {
                    return this.columnreassPeriod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn reassPeriodTypeColumn {
                get {
                    return this.columnreassPeriodType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICRow this[int index] {
                get {
                    return ((proc_GetCertificateDetialDICRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetCertificateDetialDICRowChangeEventHandler proc_GetCertificateDetialDICRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetCertificateDetialDICRowChangeEventHandler proc_GetCertificateDetialDICRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetCertificateDetialDICRowChangeEventHandler proc_GetCertificateDetialDICRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetCertificateDetialDICRowChangeEventHandler proc_GetCertificateDetialDICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_GetCertificateDetialDICRow(proc_GetCertificateDetialDICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICRow Addproc_GetCertificateDetialDICRow(
                        string registrationNo, 
                        string fullName, 
                        string fatherName, 
                        int age, 
                        string gender, 
                        string address, 
                        string disabilityType, 
                        string disabilityDetail, 
                        string certificateNo, 
                        string certiGenDate, 
                        int monthYear, 
                        double disabilityPer, 
                        string markOfIdentification, 
                        string disabilityPer1, 
                        string reassName, 
                        string conditionName, 
                        string passportsizephoto, 
                        string photoIdNo, 
                        string idProofName, 
                        string certiGendBy, 
                        byte[] Photo, 
                        long committeeId, 
                        int committeeId1, 
                        int reassPeriod, 
                        string reassPeriodType) {
                proc_GetCertificateDetialDICRow rowproc_GetCertificateDetialDICRow = ((proc_GetCertificateDetialDICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        registrationNo,
                        fullName,
                        fatherName,
                        age,
                        gender,
                        address,
                        disabilityType,
                        disabilityDetail,
                        certificateNo,
                        certiGenDate,
                        monthYear,
                        disabilityPer,
                        markOfIdentification,
                        null,
                        disabilityPer1,
                        reassName,
                        conditionName,
                        passportsizephoto,
                        photoIdNo,
                        idProofName,
                        certiGendBy,
                        null,
                        Photo,
                        committeeId,
                        committeeId1,
                        reassPeriod,
                        reassPeriodType};
                rowproc_GetCertificateDetialDICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_GetCertificateDetialDICRow);
                return rowproc_GetCertificateDetialDICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_GetCertificateDetialDICDataTable cln = ((proc_GetCertificateDetialDICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_GetCertificateDetialDICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnfullName = base.Columns["fullName"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columnage = base.Columns["age"];
                this.columngender = base.Columns["gender"];
                this.columnaddress = base.Columns["address"];
                this.columndisabilityType = base.Columns["disabilityType"];
                this.columndisabilityDetail = base.Columns["disabilityDetail"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columncertiGenDate = base.Columns["certiGenDate"];
                this.columnmonthYear = base.Columns["monthYear"];
                this.columndisabilityPer = base.Columns["disabilityPer"];
                this.columnmarkOfIdentification = base.Columns["markOfIdentification"];
                this.columnregisIdDIC = base.Columns["regisIdDIC"];
                this.columndisabilityPer1 = base.Columns["disabilityPer1"];
                this.columnreassName = base.Columns["reassName"];
                this.columnconditionName = base.Columns["conditionName"];
                this.columnpassportsizephoto = base.Columns["passportsizephoto"];
                this.columnphotoIdNo = base.Columns["photoIdNo"];
                this.columnidProofName = base.Columns["idProofName"];
                this.columncertiGendBy = base.Columns["certiGendBy"];
                this.columninprocessDICId = base.Columns["inprocessDICId"];
                this.columnPhoto = base.Columns["Photo"];
                this.columncommitteeId = base.Columns["committeeId"];
                this.columncommitteeId1 = base.Columns["committeeId1"];
                this.columnreassPeriod = base.Columns["reassPeriod"];
                this.columnreassPeriodType = base.Columns["reassPeriodType"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnaddress = new global::System.Data.DataColumn("address", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnaddress);
                this.columndisabilityType = new global::System.Data.DataColumn("disabilityType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisabilityType);
                this.columndisabilityDetail = new global::System.Data.DataColumn("disabilityDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisabilityDetail);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columncertiGenDate = new global::System.Data.DataColumn("certiGenDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertiGenDate);
                this.columnmonthYear = new global::System.Data.DataColumn("monthYear", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmonthYear);
                this.columndisabilityPer = new global::System.Data.DataColumn("disabilityPer", typeof(double), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisabilityPer);
                this.columnmarkOfIdentification = new global::System.Data.DataColumn("markOfIdentification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarkOfIdentification);
                this.columnregisIdDIC = new global::System.Data.DataColumn("regisIdDIC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdDIC);
                this.columndisabilityPer1 = new global::System.Data.DataColumn("disabilityPer1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndisabilityPer1);
                this.columnreassName = new global::System.Data.DataColumn("reassName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreassName);
                this.columnconditionName = new global::System.Data.DataColumn("conditionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnconditionName);
                this.columnpassportsizephoto = new global::System.Data.DataColumn("passportsizephoto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpassportsizephoto);
                this.columnphotoIdNo = new global::System.Data.DataColumn("photoIdNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnphotoIdNo);
                this.columnidProofName = new global::System.Data.DataColumn("idProofName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidProofName);
                this.columncertiGendBy = new global::System.Data.DataColumn("certiGendBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertiGendBy);
                this.columninprocessDICId = new global::System.Data.DataColumn("inprocessDICId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninprocessDICId);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columncommitteeId = new global::System.Data.DataColumn("committeeId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommitteeId);
                this.columncommitteeId1 = new global::System.Data.DataColumn("committeeId1", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommitteeId1);
                this.columnreassPeriod = new global::System.Data.DataColumn("reassPeriod", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreassPeriod);
                this.columnreassPeriodType = new global::System.Data.DataColumn("reassPeriodType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnreassPeriodType);
                this.columnregistrationNo.MaxLength = 20;
                this.columnfullName.MaxLength = 250;
                this.columnfatherName.MaxLength = 250;
                this.columnage.ReadOnly = true;
                this.columngender.MaxLength = 10;
                this.columnaddress.ReadOnly = true;
                this.columnaddress.MaxLength = 2147483647;
                this.columndisabilityType.MaxLength = 500;
                this.columndisabilityDetail.MaxLength = 500;
                this.columncertificateNo.ReadOnly = true;
                this.columncertificateNo.MaxLength = 4;
                this.columncertiGenDate.ReadOnly = true;
                this.columncertiGenDate.MaxLength = 15;
                this.columnmonthYear.ReadOnly = true;
                this.columndisabilityPer.ReadOnly = true;
                this.columnmarkOfIdentification.MaxLength = 50;
                this.columnregisIdDIC.AutoIncrement = true;
                this.columnregisIdDIC.AutoIncrementSeed = -1;
                this.columnregisIdDIC.AutoIncrementStep = -1;
                this.columnregisIdDIC.AllowDBNull = false;
                this.columnregisIdDIC.ReadOnly = true;
                this.columndisabilityPer1.ReadOnly = true;
                this.columndisabilityPer1.Caption = "disabilityPer";
                this.columndisabilityPer1.MaxLength = 5;
                this.columnreassName.ReadOnly = true;
                this.columnreassName.MaxLength = 250;
                this.columnconditionName.ReadOnly = true;
                this.columnconditionName.MaxLength = 250;
                this.columnpassportsizephoto.MaxLength = 250;
                this.columnphotoIdNo.MaxLength = 150;
                this.columnidProofName.ReadOnly = true;
                this.columnidProofName.MaxLength = 100;
                this.columncertiGendBy.MaxLength = 250;
                this.columninprocessDICId.AutoIncrement = true;
                this.columninprocessDICId.AutoIncrementSeed = -1;
                this.columninprocessDICId.AutoIncrementStep = -1;
                this.columninprocessDICId.AllowDBNull = false;
                this.columninprocessDICId.ReadOnly = true;
                this.columncommitteeId1.ReadOnly = true;
                this.columncommitteeId1.Caption = "committeeId";
                this.columnreassPeriod.ReadOnly = true;
                this.columnreassPeriodType.ReadOnly = true;
                this.columnreassPeriodType.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICRow Newproc_GetCertificateDetialDICRow() {
                return ((proc_GetCertificateDetialDICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_GetCertificateDetialDICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_GetCertificateDetialDICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_GetCertificateDetialDICRowChanged != null)) {
                    this.proc_GetCertificateDetialDICRowChanged(this, new proc_GetCertificateDetialDICRowChangeEvent(((proc_GetCertificateDetialDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_GetCertificateDetialDICRowChanging != null)) {
                    this.proc_GetCertificateDetialDICRowChanging(this, new proc_GetCertificateDetialDICRowChangeEvent(((proc_GetCertificateDetialDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_GetCertificateDetialDICRowDeleted != null)) {
                    this.proc_GetCertificateDetialDICRowDeleted(this, new proc_GetCertificateDetialDICRowChangeEvent(((proc_GetCertificateDetialDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_GetCertificateDetialDICRowDeleting != null)) {
                    this.proc_GetCertificateDetialDICRowDeleting(this, new proc_GetCertificateDetialDICRowChangeEvent(((proc_GetCertificateDetialDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_GetCertificateDetialDICRow(proc_GetCertificateDetialDICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_GetCertificateDetialDICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_getNUHChildRptDataTable : global::System.Data.TypedTableBase<proc_getNUHChildRptRow> {
            
            private global::System.Data.DataColumn columnnursingDocumentId;
            
            private global::System.Data.DataColumn columnregisIdNUH;
            
            private global::System.Data.DataColumn columnstaffName;
            
            private global::System.Data.DataColumn columnstaffqualification;
            
            private global::System.Data.DataColumn columnstaffinstitution;
            
            private global::System.Data.DataColumn columnstaffRegistrationNo;
            
            private global::System.Data.DataColumn columnstaffNameOfMCI_SMF;
            
            private global::System.Data.DataColumn columnfilePath;
            
            private global::System.Data.DataColumn columnstafffatherName;
            
            private global::System.Data.DataColumn columnstaffRegistrationType;
            
            private global::System.Data.DataColumn columnpart_fullTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptDataTable() {
                this.TableName = "proc_getNUHChildRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_getNUHChildRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn nursingDocumentIdColumn {
                get {
                    return this.columnnursingDocumentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdNUHColumn {
                get {
                    return this.columnregisIdNUH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffNameColumn {
                get {
                    return this.columnstaffName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffqualificationColumn {
                get {
                    return this.columnstaffqualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffinstitutionColumn {
                get {
                    return this.columnstaffinstitution;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffRegistrationNoColumn {
                get {
                    return this.columnstaffRegistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffNameOfMCI_SMFColumn {
                get {
                    return this.columnstaffNameOfMCI_SMF;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn filePathColumn {
                get {
                    return this.columnfilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn stafffatherNameColumn {
                get {
                    return this.columnstafffatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn staffRegistrationTypeColumn {
                get {
                    return this.columnstaffRegistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn part_fullTimeColumn {
                get {
                    return this.columnpart_fullTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptRow this[int index] {
                get {
                    return ((proc_getNUHChildRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRptRowChangeEventHandler proc_getNUHChildRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRptRowChangeEventHandler proc_getNUHChildRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRptRowChangeEventHandler proc_getNUHChildRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildRptRowChangeEventHandler proc_getNUHChildRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_getNUHChildRptRow(proc_getNUHChildRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptRow Addproc_getNUHChildRptRow(long nursingDocumentId, long regisIdNUH, string staffName, string staffqualification, string staffinstitution, string staffRegistrationNo, string staffNameOfMCI_SMF, string filePath, string stafffatherName, string staffRegistrationType, string part_fullTime) {
                proc_getNUHChildRptRow rowproc_getNUHChildRptRow = ((proc_getNUHChildRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        nursingDocumentId,
                        regisIdNUH,
                        staffName,
                        staffqualification,
                        staffinstitution,
                        staffRegistrationNo,
                        staffNameOfMCI_SMF,
                        filePath,
                        stafffatherName,
                        staffRegistrationType,
                        part_fullTime};
                rowproc_getNUHChildRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_getNUHChildRptRow);
                return rowproc_getNUHChildRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_getNUHChildRptDataTable cln = ((proc_getNUHChildRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_getNUHChildRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnnursingDocumentId = base.Columns["nursingDocumentId"];
                this.columnregisIdNUH = base.Columns["regisIdNUH"];
                this.columnstaffName = base.Columns["staffName"];
                this.columnstaffqualification = base.Columns["staffqualification"];
                this.columnstaffinstitution = base.Columns["staffinstitution"];
                this.columnstaffRegistrationNo = base.Columns["staffRegistrationNo"];
                this.columnstaffNameOfMCI_SMF = base.Columns["staffNameOfMCI_SMF"];
                this.columnfilePath = base.Columns["filePath"];
                this.columnstafffatherName = base.Columns["stafffatherName"];
                this.columnstaffRegistrationType = base.Columns["staffRegistrationType"];
                this.columnpart_fullTime = base.Columns["part_fullTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnnursingDocumentId = new global::System.Data.DataColumn("nursingDocumentId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnnursingDocumentId);
                this.columnregisIdNUH = new global::System.Data.DataColumn("regisIdNUH", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdNUH);
                this.columnstaffName = new global::System.Data.DataColumn("staffName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffName);
                this.columnstaffqualification = new global::System.Data.DataColumn("staffqualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffqualification);
                this.columnstaffinstitution = new global::System.Data.DataColumn("staffinstitution", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffinstitution);
                this.columnstaffRegistrationNo = new global::System.Data.DataColumn("staffRegistrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffRegistrationNo);
                this.columnstaffNameOfMCI_SMF = new global::System.Data.DataColumn("staffNameOfMCI_SMF", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffNameOfMCI_SMF);
                this.columnfilePath = new global::System.Data.DataColumn("filePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfilePath);
                this.columnstafffatherName = new global::System.Data.DataColumn("stafffatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstafffatherName);
                this.columnstaffRegistrationType = new global::System.Data.DataColumn("staffRegistrationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnstaffRegistrationType);
                this.columnpart_fullTime = new global::System.Data.DataColumn("part_fullTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpart_fullTime);
                this.columnnursingDocumentId.ReadOnly = true;
                this.columnregisIdNUH.ReadOnly = true;
                this.columnstaffName.ReadOnly = true;
                this.columnstaffName.MaxLength = 50;
                this.columnstaffqualification.ReadOnly = true;
                this.columnstaffqualification.MaxLength = 100;
                this.columnstaffinstitution.ReadOnly = true;
                this.columnstaffinstitution.MaxLength = 100;
                this.columnstaffRegistrationNo.ReadOnly = true;
                this.columnstaffRegistrationNo.MaxLength = 150;
                this.columnstaffNameOfMCI_SMF.ReadOnly = true;
                this.columnstaffNameOfMCI_SMF.MaxLength = 150;
                this.columnfilePath.ReadOnly = true;
                this.columnfilePath.MaxLength = 250;
                this.columnstafffatherName.ReadOnly = true;
                this.columnstafffatherName.MaxLength = 50;
                this.columnstaffRegistrationType.ReadOnly = true;
                this.columnstaffRegistrationType.MaxLength = 10;
                this.columnpart_fullTime.ReadOnly = true;
                this.columnpart_fullTime.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptRow Newproc_getNUHChildRptRow() {
                return ((proc_getNUHChildRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_getNUHChildRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_getNUHChildRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_getNUHChildRptRowChanged != null)) {
                    this.proc_getNUHChildRptRowChanged(this, new proc_getNUHChildRptRowChangeEvent(((proc_getNUHChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_getNUHChildRptRowChanging != null)) {
                    this.proc_getNUHChildRptRowChanging(this, new proc_getNUHChildRptRowChangeEvent(((proc_getNUHChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_getNUHChildRptRowDeleted != null)) {
                    this.proc_getNUHChildRptRowDeleted(this, new proc_getNUHChildRptRowChangeEvent(((proc_getNUHChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_getNUHChildRptRowDeleting != null)) {
                    this.proc_getNUHChildRptRowDeleting(this, new proc_getNUHChildRptRowChangeEvent(((proc_getNUHChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_getNUHChildRptRow(proc_getNUHChildRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_getNUHChildRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMERdetailChildRptDataTable : global::System.Data.TypedTableBase<GetMERdetailChildRptRow> {
            
            private global::System.Data.DataColumn columnId;
            
            private global::System.Data.DataColumn columnregisByuser;
            
            private global::System.Data.DataColumn columnregisMERId;
            
            private global::System.Data.DataColumn columnbillId;
            
            private global::System.Data.DataColumn columnBillName;
            
            private global::System.Data.DataColumn columnbillNo;
            
            private global::System.Data.DataColumn columnbilldate;
            
            private global::System.Data.DataColumn columnbillAmount;
            
            private global::System.Data.DataColumn columnbillFilePath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptDataTable() {
                this.TableName = "GetMERdetailChildRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMERdetailChildRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetMERdetailChildRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IdColumn {
                get {
                    return this.columnId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisByuserColumn {
                get {
                    return this.columnregisByuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisMERIdColumn {
                get {
                    return this.columnregisMERId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billIdColumn {
                get {
                    return this.columnbillId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BillNameColumn {
                get {
                    return this.columnBillName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billNoColumn {
                get {
                    return this.columnbillNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billdateColumn {
                get {
                    return this.columnbilldate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billAmountColumn {
                get {
                    return this.columnbillAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn billFilePathColumn {
                get {
                    return this.columnbillFilePath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRow this[int index] {
                get {
                    return ((GetMERdetailChildRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailChildRptRowChangeEventHandler GetMERdetailChildRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailChildRptRowChangeEventHandler GetMERdetailChildRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailChildRptRowChangeEventHandler GetMERdetailChildRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailChildRptRowChangeEventHandler GetMERdetailChildRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetMERdetailChildRptRow(GetMERdetailChildRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRow AddGetMERdetailChildRptRow(long regisByuser, long regisMERId, int billId, string BillName, string billNo, string billdate, decimal billAmount, string billFilePath) {
                GetMERdetailChildRptRow rowGetMERdetailChildRptRow = ((GetMERdetailChildRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regisByuser,
                        regisMERId,
                        billId,
                        BillName,
                        billNo,
                        billdate,
                        billAmount,
                        billFilePath};
                rowGetMERdetailChildRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMERdetailChildRptRow);
                return rowGetMERdetailChildRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRow FindById(long Id) {
                return ((GetMERdetailChildRptRow)(this.Rows.Find(new object[] {
                            Id})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetMERdetailChildRptDataTable cln = ((GetMERdetailChildRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMERdetailChildRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnId = base.Columns["Id"];
                this.columnregisByuser = base.Columns["regisByuser"];
                this.columnregisMERId = base.Columns["regisMERId"];
                this.columnbillId = base.Columns["billId"];
                this.columnBillName = base.Columns["BillName"];
                this.columnbillNo = base.Columns["billNo"];
                this.columnbilldate = base.Columns["billdate"];
                this.columnbillAmount = base.Columns["billAmount"];
                this.columnbillFilePath = base.Columns["billFilePath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnId = new global::System.Data.DataColumn("Id", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnId);
                this.columnregisByuser = new global::System.Data.DataColumn("regisByuser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisByuser);
                this.columnregisMERId = new global::System.Data.DataColumn("regisMERId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisMERId);
                this.columnbillId = new global::System.Data.DataColumn("billId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillId);
                this.columnBillName = new global::System.Data.DataColumn("BillName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBillName);
                this.columnbillNo = new global::System.Data.DataColumn("billNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillNo);
                this.columnbilldate = new global::System.Data.DataColumn("billdate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbilldate);
                this.columnbillAmount = new global::System.Data.DataColumn("billAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillAmount);
                this.columnbillFilePath = new global::System.Data.DataColumn("billFilePath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbillFilePath);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnId}, true));
                this.columnId.AutoIncrement = true;
                this.columnId.AutoIncrementSeed = -1;
                this.columnId.AutoIncrementStep = -1;
                this.columnId.AllowDBNull = false;
                this.columnId.ReadOnly = true;
                this.columnId.Unique = true;
                this.columnBillName.MaxLength = 100;
                this.columnbillNo.MaxLength = 50;
                this.columnbilldate.ReadOnly = true;
                this.columnbilldate.MaxLength = 25;
                this.columnbillFilePath.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRow NewGetMERdetailChildRptRow() {
                return ((GetMERdetailChildRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMERdetailChildRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetMERdetailChildRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMERdetailChildRptRowChanged != null)) {
                    this.GetMERdetailChildRptRowChanged(this, new GetMERdetailChildRptRowChangeEvent(((GetMERdetailChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMERdetailChildRptRowChanging != null)) {
                    this.GetMERdetailChildRptRowChanging(this, new GetMERdetailChildRptRowChangeEvent(((GetMERdetailChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMERdetailChildRptRowDeleted != null)) {
                    this.GetMERdetailChildRptRowDeleted(this, new GetMERdetailChildRptRowChangeEvent(((GetMERdetailChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMERdetailChildRptRowDeleting != null)) {
                    this.GetMERdetailChildRptRowDeleting(this, new GetMERdetailChildRptRowChangeEvent(((GetMERdetailChildRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetMERdetailChildRptRow(GetMERdetailChildRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMERdetailChildRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetILCdetailForCertificateRptDataTable : global::System.Data.TypedTableBase<GetILCdetailForCertificateRptRow> {
            
            private global::System.Data.DataColumn columnregByUser;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnregisIdILC;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columncertGenerateByDoc;
            
            private global::System.Data.DataColumn columncertGenerateByDesig;
            
            private global::System.Data.DataColumn columnidentificationMark;
            
            private global::System.Data.DataColumn columninspecttionCompeletionDate;
            
            private global::System.Data.DataColumn columndiseaseName;
            
            private global::System.Data.DataColumn columnbedRest;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnappliedDate;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columntreatmentFrom;
            
            private global::System.Data.DataColumn columntreatmentto;
            
            private global::System.Data.DataColumn columnidTypeName;
            
            private global::System.Data.DataColumn columnidNumber;
            
            private global::System.Data.DataColumn columnfullName1;
            
            private global::System.Data.DataColumn columnillnessDetail;
            
            private global::System.Data.DataColumn columnoldCertificateNumber;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptDataTable() {
                this.TableName = "GetILCdetailForCertificateRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetILCdetailForCertificateRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetILCdetailForCertificateRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByUserColumn {
                get {
                    return this.columnregByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdILCColumn {
                get {
                    return this.columnregisIdILC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certGenerateByDocColumn {
                get {
                    return this.columncertGenerateByDoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certGenerateByDesigColumn {
                get {
                    return this.columncertGenerateByDesig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn identificationMarkColumn {
                get {
                    return this.columnidentificationMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inspecttionCompeletionDateColumn {
                get {
                    return this.columninspecttionCompeletionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn diseaseNameColumn {
                get {
                    return this.columndiseaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn bedRestColumn {
                get {
                    return this.columnbedRest;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appliedDateColumn {
                get {
                    return this.columnappliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentFromColumn {
                get {
                    return this.columntreatmentFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmenttoColumn {
                get {
                    return this.columntreatmentto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idTypeNameColumn {
                get {
                    return this.columnidTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn idNumberColumn {
                get {
                    return this.columnidNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullName1Column {
                get {
                    return this.columnfullName1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn illnessDetailColumn {
                get {
                    return this.columnillnessDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn oldCertificateNumberColumn {
                get {
                    return this.columnoldCertificateNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRow this[int index] {
                get {
                    return ((GetILCdetailForCertificateRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetILCdetailForCertificateRptRowChangeEventHandler GetILCdetailForCertificateRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetILCdetailForCertificateRptRowChangeEventHandler GetILCdetailForCertificateRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetILCdetailForCertificateRptRowChangeEventHandler GetILCdetailForCertificateRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetILCdetailForCertificateRptRowChangeEventHandler GetILCdetailForCertificateRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetILCdetailForCertificateRptRow(GetILCdetailForCertificateRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRow AddGetILCdetailForCertificateRptRow(
                        long regByUser, 
                        string registrationNo, 
                        string fullName, 
                        string fatherName, 
                        string Area, 
                        string certGenerateByDoc, 
                        string certGenerateByDesig, 
                        string identificationMark, 
                        string inspecttionCompeletionDate, 
                        string diseaseName, 
                        int bedRest, 
                        string certificateNo, 
                        string appliedDate, 
                        string DistrictName, 
                        string treatmentFrom, 
                        string treatmentto, 
                        string idTypeName, 
                        string idNumber, 
                        string fullName1, 
                        string illnessDetail, 
                        string oldCertificateNumber) {
                GetILCdetailForCertificateRptRow rowGetILCdetailForCertificateRptRow = ((GetILCdetailForCertificateRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        regByUser,
                        registrationNo,
                        null,
                        fullName,
                        fatherName,
                        Area,
                        certGenerateByDoc,
                        certGenerateByDesig,
                        identificationMark,
                        inspecttionCompeletionDate,
                        diseaseName,
                        bedRest,
                        certificateNo,
                        appliedDate,
                        DistrictName,
                        treatmentFrom,
                        treatmentto,
                        idTypeName,
                        idNumber,
                        fullName1,
                        illnessDetail,
                        oldCertificateNumber};
                rowGetILCdetailForCertificateRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetILCdetailForCertificateRptRow);
                return rowGetILCdetailForCertificateRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRow FindByregisIdILC(long regisIdILC) {
                return ((GetILCdetailForCertificateRptRow)(this.Rows.Find(new object[] {
                            regisIdILC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetILCdetailForCertificateRptDataTable cln = ((GetILCdetailForCertificateRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetILCdetailForCertificateRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregByUser = base.Columns["regByUser"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnregisIdILC = base.Columns["regisIdILC"];
                this.columnfullName = base.Columns["fullName"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columnArea = base.Columns["Area"];
                this.columncertGenerateByDoc = base.Columns["certGenerateByDoc"];
                this.columncertGenerateByDesig = base.Columns["certGenerateByDesig"];
                this.columnidentificationMark = base.Columns["identificationMark"];
                this.columninspecttionCompeletionDate = base.Columns["inspecttionCompeletionDate"];
                this.columndiseaseName = base.Columns["diseaseName"];
                this.columnbedRest = base.Columns["bedRest"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnappliedDate = base.Columns["appliedDate"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columntreatmentFrom = base.Columns["treatmentFrom"];
                this.columntreatmentto = base.Columns["treatmentto"];
                this.columnidTypeName = base.Columns["idTypeName"];
                this.columnidNumber = base.Columns["idNumber"];
                this.columnfullName1 = base.Columns["fullName1"];
                this.columnillnessDetail = base.Columns["illnessDetail"];
                this.columnoldCertificateNumber = base.Columns["oldCertificateNumber"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregByUser = new global::System.Data.DataColumn("regByUser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByUser);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnregisIdILC = new global::System.Data.DataColumn("regisIdILC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdILC);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columncertGenerateByDoc = new global::System.Data.DataColumn("certGenerateByDoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertGenerateByDoc);
                this.columncertGenerateByDesig = new global::System.Data.DataColumn("certGenerateByDesig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertGenerateByDesig);
                this.columnidentificationMark = new global::System.Data.DataColumn("identificationMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidentificationMark);
                this.columninspecttionCompeletionDate = new global::System.Data.DataColumn("inspecttionCompeletionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninspecttionCompeletionDate);
                this.columndiseaseName = new global::System.Data.DataColumn("diseaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndiseaseName);
                this.columnbedRest = new global::System.Data.DataColumn("bedRest", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbedRest);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnappliedDate = new global::System.Data.DataColumn("appliedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliedDate);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columntreatmentFrom = new global::System.Data.DataColumn("treatmentFrom", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentFrom);
                this.columntreatmentto = new global::System.Data.DataColumn("treatmentto", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentto);
                this.columnidTypeName = new global::System.Data.DataColumn("idTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidTypeName);
                this.columnidNumber = new global::System.Data.DataColumn("idNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidNumber);
                this.columnfullName1 = new global::System.Data.DataColumn("fullName1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName1);
                this.columnillnessDetail = new global::System.Data.DataColumn("illnessDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnillnessDetail);
                this.columnoldCertificateNumber = new global::System.Data.DataColumn("oldCertificateNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnoldCertificateNumber);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdILC}, true));
                this.columnregistrationNo.MaxLength = 20;
                this.columnregisIdILC.AutoIncrement = true;
                this.columnregisIdILC.AutoIncrementSeed = -1;
                this.columnregisIdILC.AutoIncrementStep = -1;
                this.columnregisIdILC.AllowDBNull = false;
                this.columnregisIdILC.ReadOnly = true;
                this.columnregisIdILC.Unique = true;
                this.columnfullName.MaxLength = 250;
                this.columnfatherName.MaxLength = 250;
                this.columnArea.MaxLength = 250;
                this.columncertGenerateByDoc.MaxLength = 50;
                this.columncertGenerateByDesig.MaxLength = 50;
                this.columnidentificationMark.MaxLength = 250;
                this.columninspecttionCompeletionDate.ReadOnly = true;
                this.columninspecttionCompeletionDate.MaxLength = 20;
                this.columndiseaseName.MaxLength = 100;
                this.columncertificateNo.MaxLength = 50;
                this.columnappliedDate.ReadOnly = true;
                this.columnappliedDate.MaxLength = 20;
                this.columnDistrictName.MaxLength = 2147483647;
                this.columntreatmentFrom.ReadOnly = true;
                this.columntreatmentFrom.MaxLength = 20;
                this.columntreatmentto.ReadOnly = true;
                this.columntreatmentto.MaxLength = 20;
                this.columnidTypeName.MaxLength = 50;
                this.columnidNumber.MaxLength = 100;
                this.columnfullName1.MaxLength = 250;
                this.columnillnessDetail.MaxLength = 2147483647;
                this.columnoldCertificateNumber.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRow NewGetILCdetailForCertificateRptRow() {
                return ((GetILCdetailForCertificateRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetILCdetailForCertificateRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetILCdetailForCertificateRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetILCdetailForCertificateRptRowChanged != null)) {
                    this.GetILCdetailForCertificateRptRowChanged(this, new GetILCdetailForCertificateRptRowChangeEvent(((GetILCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetILCdetailForCertificateRptRowChanging != null)) {
                    this.GetILCdetailForCertificateRptRowChanging(this, new GetILCdetailForCertificateRptRowChangeEvent(((GetILCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetILCdetailForCertificateRptRowDeleted != null)) {
                    this.GetILCdetailForCertificateRptRowDeleted(this, new GetILCdetailForCertificateRptRowChangeEvent(((GetILCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetILCdetailForCertificateRptRowDeleting != null)) {
                    this.GetILCdetailForCertificateRptRowDeleting(this, new GetILCdetailForCertificateRptRowChangeEvent(((GetILCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetILCdetailForCertificateRptRow(GetILCdetailForCertificateRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetILCdetailForCertificateRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetFICdetailForCertificateRptDataTable : global::System.Data.TypedTableBase<GetFICdetailForCertificateRptRow> {
            
            private global::System.Data.DataColumn columnregisIdFIC;
            
            private global::System.Data.DataColumn columnregByUser;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columnArea;
            
            private global::System.Data.DataColumn columncertGenerateByDoc;
            
            private global::System.Data.DataColumn columncertGenerateByDesig;
            
            private global::System.Data.DataColumn columnidentificationMark;
            
            private global::System.Data.DataColumn columninspecttionCompeletionDate;
            
            private global::System.Data.DataColumn columnappliedDate;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnopdAddress;
            
            private global::System.Data.DataColumn columnillnessDetail;
            
            private global::System.Data.DataColumn columnHUDistrict;
            
            private global::System.Data.DataColumn columnHUAuthorisedPerson;
            
            private global::System.Data.DataColumn columnILCcertificateNo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptDataTable() {
                this.TableName = "GetFICdetailForCertificateRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFICdetailForCertificateRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetFICdetailForCertificateRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdFICColumn {
                get {
                    return this.columnregisIdFIC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByUserColumn {
                get {
                    return this.columnregByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AreaColumn {
                get {
                    return this.columnArea;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certGenerateByDocColumn {
                get {
                    return this.columncertGenerateByDoc;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certGenerateByDesigColumn {
                get {
                    return this.columncertGenerateByDesig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn identificationMarkColumn {
                get {
                    return this.columnidentificationMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inspecttionCompeletionDateColumn {
                get {
                    return this.columninspecttionCompeletionDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appliedDateColumn {
                get {
                    return this.columnappliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn opdAddressColumn {
                get {
                    return this.columnopdAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn illnessDetailColumn {
                get {
                    return this.columnillnessDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUDistrictColumn {
                get {
                    return this.columnHUDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUAuthorisedPersonColumn {
                get {
                    return this.columnHUAuthorisedPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ILCcertificateNoColumn {
                get {
                    return this.columnILCcertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRow this[int index] {
                get {
                    return ((GetFICdetailForCertificateRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFICdetailForCertificateRptRowChangeEventHandler GetFICdetailForCertificateRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFICdetailForCertificateRptRowChangeEventHandler GetFICdetailForCertificateRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFICdetailForCertificateRptRowChangeEventHandler GetFICdetailForCertificateRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFICdetailForCertificateRptRowChangeEventHandler GetFICdetailForCertificateRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetFICdetailForCertificateRptRow(GetFICdetailForCertificateRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRow AddGetFICdetailForCertificateRptRow(
                        long regByUser, 
                        string registrationNo, 
                        string fullName, 
                        string fatherName, 
                        string Area, 
                        string certGenerateByDoc, 
                        string certGenerateByDesig, 
                        string identificationMark, 
                        string inspecttionCompeletionDate, 
                        string appliedDate, 
                        string certificateNo, 
                        string opdAddress, 
                        string illnessDetail, 
                        string HUDistrict, 
                        string HUAuthorisedPerson, 
                        string ILCcertificateNo) {
                GetFICdetailForCertificateRptRow rowGetFICdetailForCertificateRptRow = ((GetFICdetailForCertificateRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regByUser,
                        registrationNo,
                        fullName,
                        fatherName,
                        Area,
                        certGenerateByDoc,
                        certGenerateByDesig,
                        identificationMark,
                        inspecttionCompeletionDate,
                        appliedDate,
                        certificateNo,
                        opdAddress,
                        illnessDetail,
                        HUDistrict,
                        HUAuthorisedPerson,
                        ILCcertificateNo};
                rowGetFICdetailForCertificateRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetFICdetailForCertificateRptRow);
                return rowGetFICdetailForCertificateRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRow FindByregisIdFIC(long regisIdFIC) {
                return ((GetFICdetailForCertificateRptRow)(this.Rows.Find(new object[] {
                            regisIdFIC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetFICdetailForCertificateRptDataTable cln = ((GetFICdetailForCertificateRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetFICdetailForCertificateRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdFIC = base.Columns["regisIdFIC"];
                this.columnregByUser = base.Columns["regByUser"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnfullName = base.Columns["fullName"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columnArea = base.Columns["Area"];
                this.columncertGenerateByDoc = base.Columns["certGenerateByDoc"];
                this.columncertGenerateByDesig = base.Columns["certGenerateByDesig"];
                this.columnidentificationMark = base.Columns["identificationMark"];
                this.columninspecttionCompeletionDate = base.Columns["inspecttionCompeletionDate"];
                this.columnappliedDate = base.Columns["appliedDate"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnopdAddress = base.Columns["opdAddress"];
                this.columnillnessDetail = base.Columns["illnessDetail"];
                this.columnHUDistrict = base.Columns["HUDistrict"];
                this.columnHUAuthorisedPerson = base.Columns["HUAuthorisedPerson"];
                this.columnILCcertificateNo = base.Columns["ILCcertificateNo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdFIC = new global::System.Data.DataColumn("regisIdFIC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdFIC);
                this.columnregByUser = new global::System.Data.DataColumn("regByUser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByUser);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columnArea = new global::System.Data.DataColumn("Area", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnArea);
                this.columncertGenerateByDoc = new global::System.Data.DataColumn("certGenerateByDoc", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertGenerateByDoc);
                this.columncertGenerateByDesig = new global::System.Data.DataColumn("certGenerateByDesig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertGenerateByDesig);
                this.columnidentificationMark = new global::System.Data.DataColumn("identificationMark", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnidentificationMark);
                this.columninspecttionCompeletionDate = new global::System.Data.DataColumn("inspecttionCompeletionDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninspecttionCompeletionDate);
                this.columnappliedDate = new global::System.Data.DataColumn("appliedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliedDate);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnopdAddress = new global::System.Data.DataColumn("opdAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnopdAddress);
                this.columnillnessDetail = new global::System.Data.DataColumn("illnessDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnillnessDetail);
                this.columnHUDistrict = new global::System.Data.DataColumn("HUDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUDistrict);
                this.columnHUAuthorisedPerson = new global::System.Data.DataColumn("HUAuthorisedPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUAuthorisedPerson);
                this.columnILCcertificateNo = new global::System.Data.DataColumn("ILCcertificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnILCcertificateNo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdFIC}, true));
                this.columnregisIdFIC.AutoIncrement = true;
                this.columnregisIdFIC.AutoIncrementSeed = -1;
                this.columnregisIdFIC.AutoIncrementStep = -1;
                this.columnregisIdFIC.AllowDBNull = false;
                this.columnregisIdFIC.ReadOnly = true;
                this.columnregisIdFIC.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columnfullName.MaxLength = 250;
                this.columnfatherName.MaxLength = 250;
                this.columnArea.MaxLength = 250;
                this.columncertGenerateByDoc.MaxLength = 50;
                this.columncertGenerateByDesig.MaxLength = 50;
                this.columnidentificationMark.MaxLength = 250;
                this.columninspecttionCompeletionDate.ReadOnly = true;
                this.columninspecttionCompeletionDate.MaxLength = 20;
                this.columnappliedDate.ReadOnly = true;
                this.columnappliedDate.MaxLength = 30;
                this.columncertificateNo.MaxLength = 50;
                this.columnopdAddress.ReadOnly = true;
                this.columnopdAddress.MaxLength = 2147483647;
                this.columnillnessDetail.ReadOnly = true;
                this.columnillnessDetail.MaxLength = 250;
                this.columnHUDistrict.MaxLength = 2147483647;
                this.columnHUAuthorisedPerson.MaxLength = 250;
                this.columnILCcertificateNo.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRow NewGetFICdetailForCertificateRptRow() {
                return ((GetFICdetailForCertificateRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetFICdetailForCertificateRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetFICdetailForCertificateRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetFICdetailForCertificateRptRowChanged != null)) {
                    this.GetFICdetailForCertificateRptRowChanged(this, new GetFICdetailForCertificateRptRowChangeEvent(((GetFICdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetFICdetailForCertificateRptRowChanging != null)) {
                    this.GetFICdetailForCertificateRptRowChanging(this, new GetFICdetailForCertificateRptRowChangeEvent(((GetFICdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetFICdetailForCertificateRptRowDeleted != null)) {
                    this.GetFICdetailForCertificateRptRowDeleted(this, new GetFICdetailForCertificateRptRowChangeEvent(((GetFICdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetFICdetailForCertificateRptRowDeleting != null)) {
                    this.GetFICdetailForCertificateRptRowDeleting(this, new GetFICdetailForCertificateRptRowChangeEvent(((GetFICdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetFICdetailForCertificateRptRow(GetFICdetailForCertificateRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetFICdetailForCertificateRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_GetImmuChildCertificateDataTable : global::System.Data.TypedTableBase<proc_GetImmuChildCertificateRow> {
            
            private global::System.Data.DataColumn columnregisIdICC;
            
            private global::System.Data.DataColumn columnisExsistImmuName;
            
            private global::System.Data.DataColumn columndateOfImmunization;
            
            private global::System.Data.DataColumn columnimmuName;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columnisGENERATED;
            
            private global::System.Data.DataColumn columncertificateGeneratedDate;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnhospitalName;
            
            private global::System.Data.DataColumn columnHUDistrict;
            
            private global::System.Data.DataColumn columnHUAuthorisedPerson;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateDataTable() {
                this.TableName = "proc_GetImmuChildCertificate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_GetImmuChildCertificateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_GetImmuChildCertificateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdICCColumn {
                get {
                    return this.columnregisIdICC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isExsistImmuNameColumn {
                get {
                    return this.columnisExsistImmuName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dateOfImmunizationColumn {
                get {
                    return this.columndateOfImmunization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn immuNameColumn {
                get {
                    return this.columnimmuName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isGENERATEDColumn {
                get {
                    return this.columnisGENERATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateGeneratedDateColumn {
                get {
                    return this.columncertificateGeneratedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hospitalNameColumn {
                get {
                    return this.columnhospitalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUDistrictColumn {
                get {
                    return this.columnHUDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUAuthorisedPersonColumn {
                get {
                    return this.columnHUAuthorisedPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateRow this[int index] {
                get {
                    return ((proc_GetImmuChildCertificateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetImmuChildCertificateRowChangeEventHandler proc_GetImmuChildCertificateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetImmuChildCertificateRowChangeEventHandler proc_GetImmuChildCertificateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetImmuChildCertificateRowChangeEventHandler proc_GetImmuChildCertificateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_GetImmuChildCertificateRowChangeEventHandler proc_GetImmuChildCertificateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_GetImmuChildCertificateRow(proc_GetImmuChildCertificateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateRow Addproc_GetImmuChildCertificateRow(long regisIdICC, string isExsistImmuName, string dateOfImmunization, string immuName, string registrationNo, string fullName, string fatherName, string isGENERATED, string certificateGeneratedDate, string certificateNo, string hospitalName, string HUDistrict, string HUAuthorisedPerson) {
                proc_GetImmuChildCertificateRow rowproc_GetImmuChildCertificateRow = ((proc_GetImmuChildCertificateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        regisIdICC,
                        isExsistImmuName,
                        dateOfImmunization,
                        immuName,
                        registrationNo,
                        fullName,
                        fatherName,
                        isGENERATED,
                        certificateGeneratedDate,
                        certificateNo,
                        hospitalName,
                        HUDistrict,
                        HUAuthorisedPerson};
                rowproc_GetImmuChildCertificateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_GetImmuChildCertificateRow);
                return rowproc_GetImmuChildCertificateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_GetImmuChildCertificateDataTable cln = ((proc_GetImmuChildCertificateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_GetImmuChildCertificateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdICC = base.Columns["regisIdICC"];
                this.columnisExsistImmuName = base.Columns["isExsistImmuName"];
                this.columndateOfImmunization = base.Columns["dateOfImmunization"];
                this.columnimmuName = base.Columns["immuName"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnfullName = base.Columns["fullName"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columnisGENERATED = base.Columns["isGENERATED"];
                this.columncertificateGeneratedDate = base.Columns["certificateGeneratedDate"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnhospitalName = base.Columns["hospitalName"];
                this.columnHUDistrict = base.Columns["HUDistrict"];
                this.columnHUAuthorisedPerson = base.Columns["HUAuthorisedPerson"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdICC = new global::System.Data.DataColumn("regisIdICC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdICC);
                this.columnisExsistImmuName = new global::System.Data.DataColumn("isExsistImmuName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisExsistImmuName);
                this.columndateOfImmunization = new global::System.Data.DataColumn("dateOfImmunization", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndateOfImmunization);
                this.columnimmuName = new global::System.Data.DataColumn("immuName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnimmuName);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columnisGENERATED = new global::System.Data.DataColumn("isGENERATED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisGENERATED);
                this.columncertificateGeneratedDate = new global::System.Data.DataColumn("certificateGeneratedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateGeneratedDate);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnhospitalName = new global::System.Data.DataColumn("hospitalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhospitalName);
                this.columnHUDistrict = new global::System.Data.DataColumn("HUDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUDistrict);
                this.columnHUAuthorisedPerson = new global::System.Data.DataColumn("HUAuthorisedPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUAuthorisedPerson);
                this.columnisExsistImmuName.ReadOnly = true;
                this.columnisExsistImmuName.MaxLength = 3;
                this.columndateOfImmunization.MaxLength = 100;
                this.columnimmuName.MaxLength = 50;
                this.columnregistrationNo.ReadOnly = true;
                this.columnregistrationNo.MaxLength = 15;
                this.columnfullName.ReadOnly = true;
                this.columnfullName.MaxLength = 15;
                this.columnfatherName.ReadOnly = true;
                this.columnfatherName.MaxLength = 15;
                this.columnhospitalName.ReadOnly = true;
                this.columnhospitalName.MaxLength = 50;
                this.columnHUDistrict.ReadOnly = true;
                this.columnHUDistrict.MaxLength = 50;
                this.columnHUAuthorisedPerson.ReadOnly = true;
                this.columnHUAuthorisedPerson.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateRow Newproc_GetImmuChildCertificateRow() {
                return ((proc_GetImmuChildCertificateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_GetImmuChildCertificateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_GetImmuChildCertificateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_GetImmuChildCertificateRowChanged != null)) {
                    this.proc_GetImmuChildCertificateRowChanged(this, new proc_GetImmuChildCertificateRowChangeEvent(((proc_GetImmuChildCertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_GetImmuChildCertificateRowChanging != null)) {
                    this.proc_GetImmuChildCertificateRowChanging(this, new proc_GetImmuChildCertificateRowChangeEvent(((proc_GetImmuChildCertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_GetImmuChildCertificateRowDeleted != null)) {
                    this.proc_GetImmuChildCertificateRowDeleted(this, new proc_GetImmuChildCertificateRowChangeEvent(((proc_GetImmuChildCertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_GetImmuChildCertificateRowDeleting != null)) {
                    this.proc_GetImmuChildCertificateRowDeleting(this, new proc_GetImmuChildCertificateRowChangeEvent(((proc_GetImmuChildCertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_GetImmuChildCertificateRow(proc_GetImmuChildCertificateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_GetImmuChildCertificateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMERdetailRptDataTable : global::System.Data.TypedTableBase<GetMERdetailRptRow> {
            
            private global::System.Data.DataColumn columnregisIdMER;
            
            private global::System.Data.DataColumn columnregByUser;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columndeptName;
            
            private global::System.Data.DataColumn columndesignation;
            
            private global::System.Data.DataColumn columntreatmentId;
            
            private global::System.Data.DataColumn columnempfullName;
            
            private global::System.Data.DataColumn columngender;
            
            private global::System.Data.DataColumn columnempAge;
            
            private global::System.Data.DataColumn columnfather_HusbandName;
            
            private global::System.Data.DataColumn columnofficeName;
            
            private global::System.Data.DataColumn columnpatientdoctorName;
            
            private global::System.Data.DataColumn columntotalAmt;
            
            private global::System.Data.DataColumn columnxRayAmt;
            
            private global::System.Data.DataColumn columnpatienthospitalName;
            
            private global::System.Data.DataColumn columnpatienttreatmentFromDate;
            
            private global::System.Data.DataColumn columnpatienttreatmentToDate;
            
            private global::System.Data.DataColumn columnpatientdiseaseName;
            
            private global::System.Data.DataColumn columnpostingAddress;
            
            private global::System.Data.DataColumn columnpatientName;
            
            private global::System.Data.DataColumn columnpatientage;
            
            private global::System.Data.DataColumn columnpatientgender;
            
            private global::System.Data.DataColumn columnpatientrelationsWithEmployee;
            
            private global::System.Data.DataColumn columnofficeInchargeName;
            
            private global::System.Data.DataColumn columnhospitalType;
            
            private global::System.Data.DataColumn columnisAdvanceTaken;
            
            private global::System.Data.DataColumn columnadvanceAmount;
            
            private global::System.Data.DataColumn columnadvanceLetterNo;
            
            private global::System.Data.DataColumn columnadvanceDate;
            
            private global::System.Data.DataColumn columnpostingDistrictName;
            
            private global::System.Data.DataColumn columnpostingPinCode;
            
            private global::System.Data.DataColumn columnxRayAmount;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptDataTable() {
                this.TableName = "GetMERdetailRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMERdetailRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetMERdetailRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdMERColumn {
                get {
                    return this.columnregisIdMER;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByUserColumn {
                get {
                    return this.columnregByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deptNameColumn {
                get {
                    return this.columndeptName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn designationColumn {
                get {
                    return this.columndesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentIdColumn {
                get {
                    return this.columntreatmentId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn empfullNameColumn {
                get {
                    return this.columnempfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn genderColumn {
                get {
                    return this.columngender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn empAgeColumn {
                get {
                    return this.columnempAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn father_HusbandNameColumn {
                get {
                    return this.columnfather_HusbandName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn officeNameColumn {
                get {
                    return this.columnofficeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientdoctorNameColumn {
                get {
                    return this.columnpatientdoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn totalAmtColumn {
                get {
                    return this.columntotalAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xRayAmtColumn {
                get {
                    return this.columnxRayAmt;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patienthospitalNameColumn {
                get {
                    return this.columnpatienthospitalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patienttreatmentFromDateColumn {
                get {
                    return this.columnpatienttreatmentFromDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patienttreatmentToDateColumn {
                get {
                    return this.columnpatienttreatmentToDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientdiseaseNameColumn {
                get {
                    return this.columnpatientdiseaseName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn postingAddressColumn {
                get {
                    return this.columnpostingAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientNameColumn {
                get {
                    return this.columnpatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientageColumn {
                get {
                    return this.columnpatientage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientgenderColumn {
                get {
                    return this.columnpatientgender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientrelationsWithEmployeeColumn {
                get {
                    return this.columnpatientrelationsWithEmployee;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn officeInchargeNameColumn {
                get {
                    return this.columnofficeInchargeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn hospitalTypeColumn {
                get {
                    return this.columnhospitalType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isAdvanceTakenColumn {
                get {
                    return this.columnisAdvanceTaken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn advanceAmountColumn {
                get {
                    return this.columnadvanceAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn advanceLetterNoColumn {
                get {
                    return this.columnadvanceLetterNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn advanceDateColumn {
                get {
                    return this.columnadvanceDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn postingDistrictNameColumn {
                get {
                    return this.columnpostingDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn postingPinCodeColumn {
                get {
                    return this.columnpostingPinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xRayAmountColumn {
                get {
                    return this.columnxRayAmount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRow this[int index] {
                get {
                    return ((GetMERdetailRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailRptRowChangeEventHandler GetMERdetailRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailRptRowChangeEventHandler GetMERdetailRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailRptRowChangeEventHandler GetMERdetailRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMERdetailRptRowChangeEventHandler GetMERdetailRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetMERdetailRptRow(GetMERdetailRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRow AddGetMERdetailRptRow(
                        long regByUser, 
                        string registrationNo, 
                        string deptName, 
                        string designation, 
                        int treatmentId, 
                        string empfullName, 
                        string gender, 
                        int empAge, 
                        string father_HusbandName, 
                        string officeName, 
                        string patientdoctorName, 
                        decimal totalAmt, 
                        decimal xRayAmt, 
                        string patienthospitalName, 
                        string patienttreatmentFromDate, 
                        string patienttreatmentToDate, 
                        string patientdiseaseName, 
                        string postingAddress, 
                        string patientName, 
                        int patientage, 
                        string patientgender, 
                        string patientrelationsWithEmployee, 
                        string officeInchargeName, 
                        string hospitalType, 
                        string isAdvanceTaken, 
                        decimal advanceAmount, 
                        string advanceLetterNo, 
                        string advanceDate, 
                        string postingDistrictName, 
                        string postingPinCode, 
                        decimal xRayAmount) {
                GetMERdetailRptRow rowGetMERdetailRptRow = ((GetMERdetailRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regByUser,
                        registrationNo,
                        deptName,
                        designation,
                        treatmentId,
                        empfullName,
                        gender,
                        empAge,
                        father_HusbandName,
                        officeName,
                        patientdoctorName,
                        totalAmt,
                        xRayAmt,
                        patienthospitalName,
                        patienttreatmentFromDate,
                        patienttreatmentToDate,
                        patientdiseaseName,
                        postingAddress,
                        patientName,
                        patientage,
                        patientgender,
                        patientrelationsWithEmployee,
                        officeInchargeName,
                        hospitalType,
                        isAdvanceTaken,
                        advanceAmount,
                        advanceLetterNo,
                        advanceDate,
                        postingDistrictName,
                        postingPinCode,
                        xRayAmount};
                rowGetMERdetailRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMERdetailRptRow);
                return rowGetMERdetailRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRow FindByregisIdMER(long regisIdMER) {
                return ((GetMERdetailRptRow)(this.Rows.Find(new object[] {
                            regisIdMER})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetMERdetailRptDataTable cln = ((GetMERdetailRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMERdetailRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdMER = base.Columns["regisIdMER"];
                this.columnregByUser = base.Columns["regByUser"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columndeptName = base.Columns["deptName"];
                this.columndesignation = base.Columns["designation"];
                this.columntreatmentId = base.Columns["treatmentId"];
                this.columnempfullName = base.Columns["empfullName"];
                this.columngender = base.Columns["gender"];
                this.columnempAge = base.Columns["empAge"];
                this.columnfather_HusbandName = base.Columns["father_HusbandName"];
                this.columnofficeName = base.Columns["officeName"];
                this.columnpatientdoctorName = base.Columns["patientdoctorName"];
                this.columntotalAmt = base.Columns["totalAmt"];
                this.columnxRayAmt = base.Columns["xRayAmt"];
                this.columnpatienthospitalName = base.Columns["patienthospitalName"];
                this.columnpatienttreatmentFromDate = base.Columns["patienttreatmentFromDate"];
                this.columnpatienttreatmentToDate = base.Columns["patienttreatmentToDate"];
                this.columnpatientdiseaseName = base.Columns["patientdiseaseName"];
                this.columnpostingAddress = base.Columns["postingAddress"];
                this.columnpatientName = base.Columns["patientName"];
                this.columnpatientage = base.Columns["patientage"];
                this.columnpatientgender = base.Columns["patientgender"];
                this.columnpatientrelationsWithEmployee = base.Columns["patientrelationsWithEmployee"];
                this.columnofficeInchargeName = base.Columns["officeInchargeName"];
                this.columnhospitalType = base.Columns["hospitalType"];
                this.columnisAdvanceTaken = base.Columns["isAdvanceTaken"];
                this.columnadvanceAmount = base.Columns["advanceAmount"];
                this.columnadvanceLetterNo = base.Columns["advanceLetterNo"];
                this.columnadvanceDate = base.Columns["advanceDate"];
                this.columnpostingDistrictName = base.Columns["postingDistrictName"];
                this.columnpostingPinCode = base.Columns["postingPinCode"];
                this.columnxRayAmount = base.Columns["xRayAmount"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdMER = new global::System.Data.DataColumn("regisIdMER", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdMER);
                this.columnregByUser = new global::System.Data.DataColumn("regByUser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByUser);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columndeptName = new global::System.Data.DataColumn("deptName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeptName);
                this.columndesignation = new global::System.Data.DataColumn("designation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndesignation);
                this.columntreatmentId = new global::System.Data.DataColumn("treatmentId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentId);
                this.columnempfullName = new global::System.Data.DataColumn("empfullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempfullName);
                this.columngender = new global::System.Data.DataColumn("gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columngender);
                this.columnempAge = new global::System.Data.DataColumn("empAge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnempAge);
                this.columnfather_HusbandName = new global::System.Data.DataColumn("father_HusbandName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfather_HusbandName);
                this.columnofficeName = new global::System.Data.DataColumn("officeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofficeName);
                this.columnpatientdoctorName = new global::System.Data.DataColumn("patientdoctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientdoctorName);
                this.columntotalAmt = new global::System.Data.DataColumn("totalAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntotalAmt);
                this.columnxRayAmt = new global::System.Data.DataColumn("xRayAmt", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxRayAmt);
                this.columnpatienthospitalName = new global::System.Data.DataColumn("patienthospitalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatienthospitalName);
                this.columnpatienttreatmentFromDate = new global::System.Data.DataColumn("patienttreatmentFromDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatienttreatmentFromDate);
                this.columnpatienttreatmentToDate = new global::System.Data.DataColumn("patienttreatmentToDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatienttreatmentToDate);
                this.columnpatientdiseaseName = new global::System.Data.DataColumn("patientdiseaseName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientdiseaseName);
                this.columnpostingAddress = new global::System.Data.DataColumn("postingAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostingAddress);
                this.columnpatientName = new global::System.Data.DataColumn("patientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientName);
                this.columnpatientage = new global::System.Data.DataColumn("patientage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientage);
                this.columnpatientgender = new global::System.Data.DataColumn("patientgender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientgender);
                this.columnpatientrelationsWithEmployee = new global::System.Data.DataColumn("patientrelationsWithEmployee", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientrelationsWithEmployee);
                this.columnofficeInchargeName = new global::System.Data.DataColumn("officeInchargeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnofficeInchargeName);
                this.columnhospitalType = new global::System.Data.DataColumn("hospitalType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnhospitalType);
                this.columnisAdvanceTaken = new global::System.Data.DataColumn("isAdvanceTaken", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisAdvanceTaken);
                this.columnadvanceAmount = new global::System.Data.DataColumn("advanceAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadvanceAmount);
                this.columnadvanceLetterNo = new global::System.Data.DataColumn("advanceLetterNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadvanceLetterNo);
                this.columnadvanceDate = new global::System.Data.DataColumn("advanceDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnadvanceDate);
                this.columnpostingDistrictName = new global::System.Data.DataColumn("postingDistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostingDistrictName);
                this.columnpostingPinCode = new global::System.Data.DataColumn("postingPinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpostingPinCode);
                this.columnxRayAmount = new global::System.Data.DataColumn("xRayAmount", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxRayAmount);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdMER}, true));
                this.columnregisIdMER.AutoIncrement = true;
                this.columnregisIdMER.AutoIncrementSeed = -1;
                this.columnregisIdMER.AutoIncrementStep = -1;
                this.columnregisIdMER.AllowDBNull = false;
                this.columnregisIdMER.ReadOnly = true;
                this.columnregisIdMER.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columndeptName.MaxLength = 250;
                this.columndesignation.MaxLength = 250;
                this.columnempfullName.MaxLength = 250;
                this.columngender.MaxLength = 50;
                this.columnempAge.ReadOnly = true;
                this.columnfather_HusbandName.MaxLength = 250;
                this.columnofficeName.MaxLength = 250;
                this.columnpatientdoctorName.MaxLength = 250;
                this.columntotalAmt.ReadOnly = true;
                this.columnxRayAmt.ReadOnly = true;
                this.columnpatienthospitalName.MaxLength = 250;
                this.columnpatienttreatmentFromDate.ReadOnly = true;
                this.columnpatienttreatmentFromDate.MaxLength = 25;
                this.columnpatienttreatmentToDate.ReadOnly = true;
                this.columnpatienttreatmentToDate.MaxLength = 25;
                this.columnpatientdiseaseName.MaxLength = 50;
                this.columnpostingAddress.MaxLength = 250;
                this.columnpatientName.MaxLength = 250;
                this.columnpatientgender.MaxLength = 10;
                this.columnpatientrelationsWithEmployee.MaxLength = 250;
                this.columnofficeInchargeName.MaxLength = 100;
                this.columnhospitalType.MaxLength = 20;
                this.columnisAdvanceTaken.MaxLength = 20;
                this.columnadvanceAmount.ReadOnly = true;
                this.columnadvanceLetterNo.ReadOnly = true;
                this.columnadvanceLetterNo.MaxLength = 50;
                this.columnadvanceDate.ReadOnly = true;
                this.columnadvanceDate.MaxLength = 20;
                this.columnpostingDistrictName.ReadOnly = true;
                this.columnpostingDistrictName.MaxLength = 2147483647;
                this.columnpostingPinCode.MaxLength = 10;
                this.columnxRayAmount.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRow NewGetMERdetailRptRow() {
                return ((GetMERdetailRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMERdetailRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetMERdetailRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMERdetailRptRowChanged != null)) {
                    this.GetMERdetailRptRowChanged(this, new GetMERdetailRptRowChangeEvent(((GetMERdetailRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMERdetailRptRowChanging != null)) {
                    this.GetMERdetailRptRowChanging(this, new GetMERdetailRptRowChangeEvent(((GetMERdetailRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMERdetailRptRowDeleted != null)) {
                    this.GetMERdetailRptRowDeleted(this, new GetMERdetailRptRowChangeEvent(((GetMERdetailRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMERdetailRptRowDeleting != null)) {
                    this.GetMERdetailRptRowDeleting(this, new GetMERdetailRptRowChangeEvent(((GetMERdetailRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetMERdetailRptRow(GetMERdetailRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMERdetailRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMLCdetailForCertificateRptDataTable : global::System.Data.TypedTableBase<GetMLCdetailForCertificateRptRow> {
            
            private global::System.Data.DataColumn columnregisIdMLC;
            
            private global::System.Data.DataColumn columnregByUser;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnpatientName;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnpatientGender;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnbroughtByDesignation;
            
            private global::System.Data.DataColumn columntreatmentFrom;
            
            private global::System.Data.DataColumn columntreatmentto;
            
            private global::System.Data.DataColumn columnrestFor;
            
            private global::System.Data.DataColumn columntreatmentFrom1;
            
            private global::System.Data.DataColumn columntreatmentto1;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columncertificateGeneratedDate;
            
            private global::System.Data.DataColumn columnHUName;
            
            private global::System.Data.DataColumn columnHUDistrict;
            
            private global::System.Data.DataColumn columnHUAuthorisedPerson;
            
            private global::System.Data.DataColumn columnmarkOfIdentification;
            
            private global::System.Data.DataColumn columnpatientBroughtBy;
            
            private global::System.Data.DataColumn columndtl;
            
            private global::System.Data.DataColumn columnrestdays;
            
            private global::System.Data.DataColumn columnpatientFatherName;
            
            private global::System.Data.DataColumn columndoctorName;
            
            private global::System.Data.DataColumn columnseniorityNo;
            
            private global::System.Data.DataColumn columnMLCDate;
            
            private global::System.Data.DataColumn columnMLCtime;
            
            private global::System.Data.DataColumn columnMLCDate1;
            
            private global::System.Data.DataColumn columnOPDNumber;
            
            private global::System.Data.DataColumn columnforwardtypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptDataTable() {
                this.TableName = "GetMLCdetailForCertificateRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMLCdetailForCertificateRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetMLCdetailForCertificateRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdMLCColumn {
                get {
                    return this.columnregisIdMLC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByUserColumn {
                get {
                    return this.columnregByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientNameColumn {
                get {
                    return this.columnpatientName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientGenderColumn {
                get {
                    return this.columnpatientGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn broughtByDesignationColumn {
                get {
                    return this.columnbroughtByDesignation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentFromColumn {
                get {
                    return this.columntreatmentFrom;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmenttoColumn {
                get {
                    return this.columntreatmentto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn restForColumn {
                get {
                    return this.columnrestFor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentFrom1Column {
                get {
                    return this.columntreatmentFrom1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn treatmentto1Column {
                get {
                    return this.columntreatmentto1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateGeneratedDateColumn {
                get {
                    return this.columncertificateGeneratedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUNameColumn {
                get {
                    return this.columnHUName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUDistrictColumn {
                get {
                    return this.columnHUDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUAuthorisedPersonColumn {
                get {
                    return this.columnHUAuthorisedPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn markOfIdentificationColumn {
                get {
                    return this.columnmarkOfIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientBroughtByColumn {
                get {
                    return this.columnpatientBroughtBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dtlColumn {
                get {
                    return this.columndtl;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn restdaysColumn {
                get {
                    return this.columnrestdays;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn patientFatherNameColumn {
                get {
                    return this.columnpatientFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorNameColumn {
                get {
                    return this.columndoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn seniorityNoColumn {
                get {
                    return this.columnseniorityNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MLCDateColumn {
                get {
                    return this.columnMLCDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MLCtimeColumn {
                get {
                    return this.columnMLCtime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MLCDate1Column {
                get {
                    return this.columnMLCDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn OPDNumberColumn {
                get {
                    return this.columnOPDNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn forwardtypeNameColumn {
                get {
                    return this.columnforwardtypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRow this[int index] {
                get {
                    return ((GetMLCdetailForCertificateRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCdetailForCertificateRptRowChangeEventHandler GetMLCdetailForCertificateRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCdetailForCertificateRptRowChangeEventHandler GetMLCdetailForCertificateRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCdetailForCertificateRptRowChangeEventHandler GetMLCdetailForCertificateRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCdetailForCertificateRptRowChangeEventHandler GetMLCdetailForCertificateRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetMLCdetailForCertificateRptRow(GetMLCdetailForCertificateRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRow AddGetMLCdetailForCertificateRptRow(
                        long regByUser, 
                        string registrationNo, 
                        string patientName, 
                        int age, 
                        string patientGender, 
                        string fullName, 
                        string broughtByDesignation, 
                        System.DateTime treatmentFrom, 
                        System.DateTime treatmentto, 
                        int restFor, 
                        string treatmentFrom1, 
                        string treatmentto1, 
                        string certificateNo, 
                        string certificateGeneratedDate, 
                        string HUName, 
                        string HUDistrict, 
                        string HUAuthorisedPerson, 
                        string markOfIdentification, 
                        string patientBroughtBy, 
                        string dtl, 
                        int restdays, 
                        string patientFatherName, 
                        string doctorName, 
                        string seniorityNo, 
                        System.DateTime MLCDate, 
                        string MLCtime, 
                        string MLCDate1, 
                        string OPDNumber, 
                        string forwardtypeName) {
                GetMLCdetailForCertificateRptRow rowGetMLCdetailForCertificateRptRow = ((GetMLCdetailForCertificateRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regByUser,
                        registrationNo,
                        patientName,
                        age,
                        patientGender,
                        fullName,
                        broughtByDesignation,
                        treatmentFrom,
                        treatmentto,
                        restFor,
                        treatmentFrom1,
                        treatmentto1,
                        certificateNo,
                        certificateGeneratedDate,
                        HUName,
                        HUDistrict,
                        HUAuthorisedPerson,
                        markOfIdentification,
                        patientBroughtBy,
                        dtl,
                        restdays,
                        patientFatherName,
                        doctorName,
                        seniorityNo,
                        MLCDate,
                        MLCtime,
                        MLCDate1,
                        OPDNumber,
                        forwardtypeName};
                rowGetMLCdetailForCertificateRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMLCdetailForCertificateRptRow);
                return rowGetMLCdetailForCertificateRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRow FindByregisIdMLC(long regisIdMLC) {
                return ((GetMLCdetailForCertificateRptRow)(this.Rows.Find(new object[] {
                            regisIdMLC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetMLCdetailForCertificateRptDataTable cln = ((GetMLCdetailForCertificateRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMLCdetailForCertificateRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdMLC = base.Columns["regisIdMLC"];
                this.columnregByUser = base.Columns["regByUser"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnpatientName = base.Columns["patientName"];
                this.columnage = base.Columns["age"];
                this.columnpatientGender = base.Columns["patientGender"];
                this.columnfullName = base.Columns["fullName"];
                this.columnbroughtByDesignation = base.Columns["broughtByDesignation"];
                this.columntreatmentFrom = base.Columns["treatmentFrom"];
                this.columntreatmentto = base.Columns["treatmentto"];
                this.columnrestFor = base.Columns["restFor"];
                this.columntreatmentFrom1 = base.Columns["treatmentFrom1"];
                this.columntreatmentto1 = base.Columns["treatmentto1"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columncertificateGeneratedDate = base.Columns["certificateGeneratedDate"];
                this.columnHUName = base.Columns["HUName"];
                this.columnHUDistrict = base.Columns["HUDistrict"];
                this.columnHUAuthorisedPerson = base.Columns["HUAuthorisedPerson"];
                this.columnmarkOfIdentification = base.Columns["markOfIdentification"];
                this.columnpatientBroughtBy = base.Columns["patientBroughtBy"];
                this.columndtl = base.Columns["dtl"];
                this.columnrestdays = base.Columns["restdays"];
                this.columnpatientFatherName = base.Columns["patientFatherName"];
                this.columndoctorName = base.Columns["doctorName"];
                this.columnseniorityNo = base.Columns["seniorityNo"];
                this.columnMLCDate = base.Columns["MLCDate"];
                this.columnMLCtime = base.Columns["MLCtime"];
                this.columnMLCDate1 = base.Columns["MLCDate1"];
                this.columnOPDNumber = base.Columns["OPDNumber"];
                this.columnforwardtypeName = base.Columns["forwardtypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdMLC = new global::System.Data.DataColumn("regisIdMLC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdMLC);
                this.columnregByUser = new global::System.Data.DataColumn("regByUser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByUser);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnpatientName = new global::System.Data.DataColumn("patientName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientName);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnpatientGender = new global::System.Data.DataColumn("patientGender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientGender);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnbroughtByDesignation = new global::System.Data.DataColumn("broughtByDesignation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnbroughtByDesignation);
                this.columntreatmentFrom = new global::System.Data.DataColumn("treatmentFrom", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentFrom);
                this.columntreatmentto = new global::System.Data.DataColumn("treatmentto", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentto);
                this.columnrestFor = new global::System.Data.DataColumn("restFor", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrestFor);
                this.columntreatmentFrom1 = new global::System.Data.DataColumn("treatmentFrom1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentFrom1);
                this.columntreatmentto1 = new global::System.Data.DataColumn("treatmentto1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columntreatmentto1);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columncertificateGeneratedDate = new global::System.Data.DataColumn("certificateGeneratedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateGeneratedDate);
                this.columnHUName = new global::System.Data.DataColumn("HUName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUName);
                this.columnHUDistrict = new global::System.Data.DataColumn("HUDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUDistrict);
                this.columnHUAuthorisedPerson = new global::System.Data.DataColumn("HUAuthorisedPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUAuthorisedPerson);
                this.columnmarkOfIdentification = new global::System.Data.DataColumn("markOfIdentification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarkOfIdentification);
                this.columnpatientBroughtBy = new global::System.Data.DataColumn("patientBroughtBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientBroughtBy);
                this.columndtl = new global::System.Data.DataColumn("dtl", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndtl);
                this.columnrestdays = new global::System.Data.DataColumn("restdays", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrestdays);
                this.columnpatientFatherName = new global::System.Data.DataColumn("patientFatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnpatientFatherName);
                this.columndoctorName = new global::System.Data.DataColumn("doctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorName);
                this.columnseniorityNo = new global::System.Data.DataColumn("seniorityNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnseniorityNo);
                this.columnMLCDate = new global::System.Data.DataColumn("MLCDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLCDate);
                this.columnMLCtime = new global::System.Data.DataColumn("MLCtime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLCtime);
                this.columnMLCDate1 = new global::System.Data.DataColumn("MLCDate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMLCDate1);
                this.columnOPDNumber = new global::System.Data.DataColumn("OPDNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOPDNumber);
                this.columnforwardtypeName = new global::System.Data.DataColumn("forwardtypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnforwardtypeName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdMLC}, true));
                this.columnregisIdMLC.AutoIncrement = true;
                this.columnregisIdMLC.AutoIncrementSeed = -1;
                this.columnregisIdMLC.AutoIncrementStep = -1;
                this.columnregisIdMLC.AllowDBNull = false;
                this.columnregisIdMLC.ReadOnly = true;
                this.columnregisIdMLC.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columnpatientName.ReadOnly = true;
                this.columnpatientName.MaxLength = 250;
                this.columnpatientGender.ReadOnly = true;
                this.columnpatientGender.MaxLength = 10;
                this.columnfullName.ReadOnly = true;
                this.columnfullName.MaxLength = 250;
                this.columnbroughtByDesignation.ReadOnly = true;
                this.columnbroughtByDesignation.MaxLength = 100;
                this.columntreatmentFrom1.ReadOnly = true;
                this.columntreatmentFrom1.Caption = "treatmentFrom";
                this.columntreatmentFrom1.MaxLength = 20;
                this.columntreatmentto1.ReadOnly = true;
                this.columntreatmentto1.Caption = "treatmentto";
                this.columntreatmentto1.MaxLength = 20;
                this.columncertificateNo.MaxLength = 15;
                this.columncertificateGeneratedDate.ReadOnly = true;
                this.columncertificateGeneratedDate.MaxLength = 20;
                this.columnHUName.MaxLength = 250;
                this.columnHUDistrict.MaxLength = 2147483647;
                this.columnHUAuthorisedPerson.MaxLength = 250;
                this.columnmarkOfIdentification.MaxLength = 200;
                this.columnpatientBroughtBy.MaxLength = 50;
                this.columndtl.ReadOnly = true;
                this.columndtl.MaxLength = 569;
                this.columnrestdays.ReadOnly = true;
                this.columnpatientFatherName.ReadOnly = true;
                this.columnpatientFatherName.MaxLength = 250;
                this.columndoctorName.MaxLength = 200;
                this.columnseniorityNo.MaxLength = 150;
                this.columnMLCtime.MaxLength = 50;
                this.columnMLCDate1.ReadOnly = true;
                this.columnMLCDate1.Caption = "MLCDate";
                this.columnMLCDate1.MaxLength = 25;
                this.columnOPDNumber.MaxLength = 50;
                this.columnforwardtypeName.ReadOnly = true;
                this.columnforwardtypeName.MaxLength = 23;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRow NewGetMLCdetailForCertificateRptRow() {
                return ((GetMLCdetailForCertificateRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMLCdetailForCertificateRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetMLCdetailForCertificateRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMLCdetailForCertificateRptRowChanged != null)) {
                    this.GetMLCdetailForCertificateRptRowChanged(this, new GetMLCdetailForCertificateRptRowChangeEvent(((GetMLCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMLCdetailForCertificateRptRowChanging != null)) {
                    this.GetMLCdetailForCertificateRptRowChanging(this, new GetMLCdetailForCertificateRptRowChangeEvent(((GetMLCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMLCdetailForCertificateRptRowDeleted != null)) {
                    this.GetMLCdetailForCertificateRptRowDeleted(this, new GetMLCdetailForCertificateRptRowChangeEvent(((GetMLCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMLCdetailForCertificateRptRowDeleting != null)) {
                    this.GetMLCdetailForCertificateRptRowDeleting(this, new GetMLCdetailForCertificateRptRowChangeEvent(((GetMLCdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetMLCdetailForCertificateRptRow(GetMLCdetailForCertificateRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMLCdetailForCertificateRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetMLCCHILDdetailForCertificateRptDataTable : global::System.Data.TypedTableBase<GetMLCCHILDdetailForCertificateRptRow> {
            
            private global::System.Data.DataColumn columnEnquiryID;
            
            private global::System.Data.DataColumn columnregisId;
            
            private global::System.Data.DataColumn columnregisByuser;
            
            private global::System.Data.DataColumn columnEnquiryDetails;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptDataTable() {
                this.TableName = "GetMLCCHILDdetailForCertificateRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMLCCHILDdetailForCertificateRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetMLCCHILDdetailForCertificateRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnquiryIDColumn {
                get {
                    return this.columnEnquiryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdColumn {
                get {
                    return this.columnregisId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisByuserColumn {
                get {
                    return this.columnregisByuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EnquiryDetailsColumn {
                get {
                    return this.columnEnquiryDetails;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRow this[int index] {
                get {
                    return ((GetMLCCHILDdetailForCertificateRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCCHILDdetailForCertificateRptRowChangeEventHandler GetMLCCHILDdetailForCertificateRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCCHILDdetailForCertificateRptRowChangeEventHandler GetMLCCHILDdetailForCertificateRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCCHILDdetailForCertificateRptRowChangeEventHandler GetMLCCHILDdetailForCertificateRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetMLCCHILDdetailForCertificateRptRowChangeEventHandler GetMLCCHILDdetailForCertificateRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetMLCCHILDdetailForCertificateRptRow(GetMLCCHILDdetailForCertificateRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRow AddGetMLCCHILDdetailForCertificateRptRow(long regisId, long regisByuser, string EnquiryDetails) {
                GetMLCCHILDdetailForCertificateRptRow rowGetMLCCHILDdetailForCertificateRptRow = ((GetMLCCHILDdetailForCertificateRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regisId,
                        regisByuser,
                        EnquiryDetails};
                rowGetMLCCHILDdetailForCertificateRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetMLCCHILDdetailForCertificateRptRow);
                return rowGetMLCCHILDdetailForCertificateRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRow FindByEnquiryID(long EnquiryID) {
                return ((GetMLCCHILDdetailForCertificateRptRow)(this.Rows.Find(new object[] {
                            EnquiryID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetMLCCHILDdetailForCertificateRptDataTable cln = ((GetMLCCHILDdetailForCertificateRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetMLCCHILDdetailForCertificateRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnEnquiryID = base.Columns["EnquiryID"];
                this.columnregisId = base.Columns["regisId"];
                this.columnregisByuser = base.Columns["regisByuser"];
                this.columnEnquiryDetails = base.Columns["EnquiryDetails"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnEnquiryID = new global::System.Data.DataColumn("EnquiryID", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnquiryID);
                this.columnregisId = new global::System.Data.DataColumn("regisId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisId);
                this.columnregisByuser = new global::System.Data.DataColumn("regisByuser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisByuser);
                this.columnEnquiryDetails = new global::System.Data.DataColumn("EnquiryDetails", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEnquiryDetails);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnEnquiryID}, true));
                this.columnEnquiryID.AutoIncrement = true;
                this.columnEnquiryID.AutoIncrementSeed = -1;
                this.columnEnquiryID.AutoIncrementStep = -1;
                this.columnEnquiryID.AllowDBNull = false;
                this.columnEnquiryID.ReadOnly = true;
                this.columnEnquiryID.Unique = true;
                this.columnEnquiryDetails.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRow NewGetMLCCHILDdetailForCertificateRptRow() {
                return ((GetMLCCHILDdetailForCertificateRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetMLCCHILDdetailForCertificateRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetMLCCHILDdetailForCertificateRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetMLCCHILDdetailForCertificateRptRowChanged != null)) {
                    this.GetMLCCHILDdetailForCertificateRptRowChanged(this, new GetMLCCHILDdetailForCertificateRptRowChangeEvent(((GetMLCCHILDdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetMLCCHILDdetailForCertificateRptRowChanging != null)) {
                    this.GetMLCCHILDdetailForCertificateRptRowChanging(this, new GetMLCCHILDdetailForCertificateRptRowChangeEvent(((GetMLCCHILDdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetMLCCHILDdetailForCertificateRptRowDeleted != null)) {
                    this.GetMLCCHILDdetailForCertificateRptRowDeleted(this, new GetMLCCHILDdetailForCertificateRptRowChangeEvent(((GetMLCCHILDdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetMLCCHILDdetailForCertificateRptRowDeleting != null)) {
                    this.GetMLCCHILDdetailForCertificateRptRowDeleting(this, new GetMLCCHILDdetailForCertificateRptRowChangeEvent(((GetMLCCHILDdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetMLCCHILDdetailForCertificateRptRow(GetMLCCHILDdetailForCertificateRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetMLCCHILDdetailForCertificateRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_rptIMC_CertificateDataTable : global::System.Data.TypedTableBase<proc_rptIMC_CertificateRow> {
            
            private global::System.Data.DataColumn columnregisIdIMC;
            
            private global::System.Data.DataColumn columnvaccineId;
            
            private global::System.Data.DataColumn columnvaccineName;
            
            private global::System.Data.DataColumn columnisGENERATED;
            
            private global::System.Data.DataColumn columnImmunizationDate;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columncerificateGeneratedate;
            
            private global::System.Data.DataColumn columnImmunizationDate1;
            
            private global::System.Data.DataColumn columnHUName;
            
            private global::System.Data.DataColumn columnHUDistrict;
            
            private global::System.Data.DataColumn columnHUAuthorisedPerson;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateDataTable() {
                this.TableName = "proc_rptIMC_Certificate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptIMC_CertificateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_rptIMC_CertificateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdIMCColumn {
                get {
                    return this.columnregisIdIMC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vaccineIdColumn {
                get {
                    return this.columnvaccineId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn vaccineNameColumn {
                get {
                    return this.columnvaccineName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn isGENERATEDColumn {
                get {
                    return this.columnisGENERATED;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImmunizationDateColumn {
                get {
                    return this.columnImmunizationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn cerificateGeneratedateColumn {
                get {
                    return this.columncerificateGeneratedate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ImmunizationDate1Column {
                get {
                    return this.columnImmunizationDate1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUNameColumn {
                get {
                    return this.columnHUName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUDistrictColumn {
                get {
                    return this.columnHUDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUAuthorisedPersonColumn {
                get {
                    return this.columnHUAuthorisedPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateRow this[int index] {
                get {
                    return ((proc_rptIMC_CertificateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptIMC_CertificateRowChangeEventHandler proc_rptIMC_CertificateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptIMC_CertificateRowChangeEventHandler proc_rptIMC_CertificateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptIMC_CertificateRowChangeEventHandler proc_rptIMC_CertificateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptIMC_CertificateRowChangeEventHandler proc_rptIMC_CertificateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_rptIMC_CertificateRow(proc_rptIMC_CertificateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateRow Addproc_rptIMC_CertificateRow(long regisIdIMC, int vaccineId, string vaccineName, string isGENERATED, System.DateTime ImmunizationDate, string registrationNo, string fullName, string fatherName, string certificateNo, string cerificateGeneratedate, string ImmunizationDate1, string HUName, string HUDistrict, string HUAuthorisedPerson) {
                proc_rptIMC_CertificateRow rowproc_rptIMC_CertificateRow = ((proc_rptIMC_CertificateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        regisIdIMC,
                        vaccineId,
                        vaccineName,
                        isGENERATED,
                        ImmunizationDate,
                        registrationNo,
                        fullName,
                        fatherName,
                        certificateNo,
                        cerificateGeneratedate,
                        ImmunizationDate1,
                        HUName,
                        HUDistrict,
                        HUAuthorisedPerson};
                rowproc_rptIMC_CertificateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_rptIMC_CertificateRow);
                return rowproc_rptIMC_CertificateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_rptIMC_CertificateDataTable cln = ((proc_rptIMC_CertificateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_rptIMC_CertificateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdIMC = base.Columns["regisIdIMC"];
                this.columnvaccineId = base.Columns["vaccineId"];
                this.columnvaccineName = base.Columns["vaccineName"];
                this.columnisGENERATED = base.Columns["isGENERATED"];
                this.columnImmunizationDate = base.Columns["ImmunizationDate"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columnfullName = base.Columns["fullName"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columncerificateGeneratedate = base.Columns["cerificateGeneratedate"];
                this.columnImmunizationDate1 = base.Columns["ImmunizationDate1"];
                this.columnHUName = base.Columns["HUName"];
                this.columnHUDistrict = base.Columns["HUDistrict"];
                this.columnHUAuthorisedPerson = base.Columns["HUAuthorisedPerson"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdIMC = new global::System.Data.DataColumn("regisIdIMC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdIMC);
                this.columnvaccineId = new global::System.Data.DataColumn("vaccineId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvaccineId);
                this.columnvaccineName = new global::System.Data.DataColumn("vaccineName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnvaccineName);
                this.columnisGENERATED = new global::System.Data.DataColumn("isGENERATED", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnisGENERATED);
                this.columnImmunizationDate = new global::System.Data.DataColumn("ImmunizationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImmunizationDate);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columncerificateGeneratedate = new global::System.Data.DataColumn("cerificateGeneratedate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncerificateGeneratedate);
                this.columnImmunizationDate1 = new global::System.Data.DataColumn("ImmunizationDate1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnImmunizationDate1);
                this.columnHUName = new global::System.Data.DataColumn("HUName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUName);
                this.columnHUDistrict = new global::System.Data.DataColumn("HUDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUDistrict);
                this.columnHUAuthorisedPerson = new global::System.Data.DataColumn("HUAuthorisedPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUAuthorisedPerson);
                this.columnvaccineName.MaxLength = 100;
                this.columnisGENERATED.ReadOnly = true;
                this.columnisGENERATED.MaxLength = 3;
                this.columnregistrationNo.ReadOnly = true;
                this.columnregistrationNo.MaxLength = 15;
                this.columnfullName.ReadOnly = true;
                this.columnfullName.MaxLength = 50;
                this.columnfatherName.ReadOnly = true;
                this.columnfatherName.MaxLength = 50;
                this.columncertificateNo.ReadOnly = true;
                this.columncertificateNo.MaxLength = 50;
                this.columncerificateGeneratedate.ReadOnly = true;
                this.columncerificateGeneratedate.MaxLength = 15;
                this.columnImmunizationDate1.ReadOnly = true;
                this.columnImmunizationDate1.Caption = "ImmunizationDate";
                this.columnImmunizationDate1.MaxLength = 20;
                this.columnHUName.ReadOnly = true;
                this.columnHUName.MaxLength = 50;
                this.columnHUDistrict.ReadOnly = true;
                this.columnHUDistrict.MaxLength = 50;
                this.columnHUAuthorisedPerson.ReadOnly = true;
                this.columnHUAuthorisedPerson.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateRow Newproc_rptIMC_CertificateRow() {
                return ((proc_rptIMC_CertificateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_rptIMC_CertificateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_rptIMC_CertificateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_rptIMC_CertificateRowChanged != null)) {
                    this.proc_rptIMC_CertificateRowChanged(this, new proc_rptIMC_CertificateRowChangeEvent(((proc_rptIMC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_rptIMC_CertificateRowChanging != null)) {
                    this.proc_rptIMC_CertificateRowChanging(this, new proc_rptIMC_CertificateRowChangeEvent(((proc_rptIMC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_rptIMC_CertificateRowDeleted != null)) {
                    this.proc_rptIMC_CertificateRowDeleted(this, new proc_rptIMC_CertificateRowChangeEvent(((proc_rptIMC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_rptIMC_CertificateRowDeleting != null)) {
                    this.proc_rptIMC_CertificateRowDeleting(this, new proc_rptIMC_CertificateRowChangeEvent(((proc_rptIMC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_rptIMC_CertificateRow(proc_rptIMC_CertificateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_rptIMC_CertificateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetDECdetailForCertificateRptDataTable : global::System.Data.TypedTableBase<GetDECdetailForCertificateRptRow> {
            
            private global::System.Data.DataColumn columnregisIdDEC;
            
            private global::System.Data.DataColumn columnregByUser;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columncertificateGeneratedDate;
            
            private global::System.Data.DataColumn columndeathPersonName;
            
            private global::System.Data.DataColumn columnfullName;
            
            private global::System.Data.DataColumn columndod;
            
            private global::System.Data.DataColumn columnregByuser;
            
            private global::System.Data.DataColumn columnHUName;
            
            private global::System.Data.DataColumn columnHUDistrict;
            
            private global::System.Data.DataColumn columnHUAuthorisedPerson;
            
            private global::System.Data.DataColumn columnfatherName;
            
            private global::System.Data.DataColumn columndeathPersonAddress;
            
            private global::System.Data.DataColumn columnrelationName;
            
            private global::System.Data.DataColumn columnfathersName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptDataTable() {
                this.TableName = "GetDECdetailForCertificateRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetDECdetailForCertificateRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetDECdetailForCertificateRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdDECColumn {
                get {
                    return this.columnregisIdDEC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByUserColumn {
                get {
                    return this.columnregByUser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateGeneratedDateColumn {
                get {
                    return this.columncertificateGeneratedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deathPersonNameColumn {
                get {
                    return this.columndeathPersonName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fullNameColumn {
                get {
                    return this.columnfullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dodColumn {
                get {
                    return this.columndod;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regByuserColumn {
                get {
                    return this.columnregByuser;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUNameColumn {
                get {
                    return this.columnHUName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUDistrictColumn {
                get {
                    return this.columnHUDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HUAuthorisedPersonColumn {
                get {
                    return this.columnHUAuthorisedPerson;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fatherNameColumn {
                get {
                    return this.columnfatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn deathPersonAddressColumn {
                get {
                    return this.columndeathPersonAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn relationNameColumn {
                get {
                    return this.columnrelationName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn fathersNameColumn {
                get {
                    return this.columnfathersName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRow this[int index] {
                get {
                    return ((GetDECdetailForCertificateRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetDECdetailForCertificateRptRowChangeEventHandler GetDECdetailForCertificateRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetDECdetailForCertificateRptRowChangeEventHandler GetDECdetailForCertificateRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetDECdetailForCertificateRptRowChangeEventHandler GetDECdetailForCertificateRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetDECdetailForCertificateRptRowChangeEventHandler GetDECdetailForCertificateRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetDECdetailForCertificateRptRow(GetDECdetailForCertificateRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRow AddGetDECdetailForCertificateRptRow(long regByUser, string registrationNo, string certificateNo, string certificateGeneratedDate, string deathPersonName, string fullName, string dod, long regByuser1, string HUName, string HUDistrict, string HUAuthorisedPerson, string fatherName, string deathPersonAddress, string relationName, string fathersName) {
                GetDECdetailForCertificateRptRow rowGetDECdetailForCertificateRptRow = ((GetDECdetailForCertificateRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regByUser,
                        registrationNo,
                        certificateNo,
                        certificateGeneratedDate,
                        deathPersonName,
                        fullName,
                        dod,
                        regByuser1,
                        HUName,
                        HUDistrict,
                        HUAuthorisedPerson,
                        fatherName,
                        deathPersonAddress,
                        relationName,
                        fathersName};
                rowGetDECdetailForCertificateRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetDECdetailForCertificateRptRow);
                return rowGetDECdetailForCertificateRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRow FindByregisIdDEC(long regisIdDEC) {
                return ((GetDECdetailForCertificateRptRow)(this.Rows.Find(new object[] {
                            regisIdDEC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetDECdetailForCertificateRptDataTable cln = ((GetDECdetailForCertificateRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetDECdetailForCertificateRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdDEC = base.Columns["regisIdDEC"];
                this.columnregByUser = base.Columns["regByUser"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columncertificateGeneratedDate = base.Columns["certificateGeneratedDate"];
                this.columndeathPersonName = base.Columns["deathPersonName"];
                this.columnfullName = base.Columns["fullName"];
                this.columndod = base.Columns["dod"];
                this.columnregByuser = base.Columns["regByuser"];
                this.columnHUName = base.Columns["HUName"];
                this.columnHUDistrict = base.Columns["HUDistrict"];
                this.columnHUAuthorisedPerson = base.Columns["HUAuthorisedPerson"];
                this.columnfatherName = base.Columns["fatherName"];
                this.columndeathPersonAddress = base.Columns["deathPersonAddress"];
                this.columnrelationName = base.Columns["relationName"];
                this.columnfathersName = base.Columns["fathersName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdDEC = new global::System.Data.DataColumn("regisIdDEC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdDEC);
                this.columnregByUser = new global::System.Data.DataColumn("regByUser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByUser);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columncertificateGeneratedDate = new global::System.Data.DataColumn("certificateGeneratedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateGeneratedDate);
                this.columndeathPersonName = new global::System.Data.DataColumn("deathPersonName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeathPersonName);
                this.columnfullName = new global::System.Data.DataColumn("fullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfullName);
                this.columndod = new global::System.Data.DataColumn("dod", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndod);
                this.columnregByuser = new global::System.Data.DataColumn("regByuser", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregByuser);
                this.columnHUName = new global::System.Data.DataColumn("HUName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUName);
                this.columnHUDistrict = new global::System.Data.DataColumn("HUDistrict", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUDistrict);
                this.columnHUAuthorisedPerson = new global::System.Data.DataColumn("HUAuthorisedPerson", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHUAuthorisedPerson);
                this.columnfatherName = new global::System.Data.DataColumn("fatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfatherName);
                this.columndeathPersonAddress = new global::System.Data.DataColumn("deathPersonAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndeathPersonAddress);
                this.columnrelationName = new global::System.Data.DataColumn("relationName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnrelationName);
                this.columnfathersName = new global::System.Data.DataColumn("fathersName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnfathersName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdDEC}, true));
                this.columnregisIdDEC.AutoIncrement = true;
                this.columnregisIdDEC.AutoIncrementSeed = -1;
                this.columnregisIdDEC.AutoIncrementStep = -1;
                this.columnregisIdDEC.AllowDBNull = false;
                this.columnregisIdDEC.ReadOnly = true;
                this.columnregisIdDEC.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columncertificateNo.MaxLength = 15;
                this.columncertificateGeneratedDate.ReadOnly = true;
                this.columncertificateGeneratedDate.MaxLength = 20;
                this.columndeathPersonName.MaxLength = 50;
                this.columnfullName.MaxLength = 250;
                this.columndod.ReadOnly = true;
                this.columndod.MaxLength = 20;
                this.columnHUName.MaxLength = 250;
                this.columnHUDistrict.MaxLength = 2147483647;
                this.columnHUAuthorisedPerson.MaxLength = 250;
                this.columnfatherName.MaxLength = 250;
                this.columndeathPersonAddress.MaxLength = 250;
                this.columnrelationName.MaxLength = 30;
                this.columnfathersName.ReadOnly = true;
                this.columnfathersName.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRow NewGetDECdetailForCertificateRptRow() {
                return ((GetDECdetailForCertificateRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetDECdetailForCertificateRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetDECdetailForCertificateRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetDECdetailForCertificateRptRowChanged != null)) {
                    this.GetDECdetailForCertificateRptRowChanged(this, new GetDECdetailForCertificateRptRowChangeEvent(((GetDECdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetDECdetailForCertificateRptRowChanging != null)) {
                    this.GetDECdetailForCertificateRptRowChanging(this, new GetDECdetailForCertificateRptRowChangeEvent(((GetDECdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetDECdetailForCertificateRptRowDeleted != null)) {
                    this.GetDECdetailForCertificateRptRowDeleted(this, new GetDECdetailForCertificateRptRowChangeEvent(((GetDECdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetDECdetailForCertificateRptRowDeleting != null)) {
                    this.GetDECdetailForCertificateRptRowDeleting(this, new GetDECdetailForCertificateRptRowChangeEvent(((GetDECdetailForCertificateRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetDECdetailForCertificateRptRow(GetDECdetailForCertificateRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetDECdetailForCertificateRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_getNUHChildDOCRptDataTable : global::System.Data.TypedTableBase<proc_getNUHChildDOCRptRow> {
            
            private global::System.Data.DataColumn columndoctorId;
            
            private global::System.Data.DataColumn columnregisNUHId;
            
            private global::System.Data.DataColumn columndoctorName;
            
            private global::System.Data.DataColumn columndoctorFathersName;
            
            private global::System.Data.DataColumn columndoctorQualification;
            
            private global::System.Data.DataColumn columnNameofFoundation;
            
            private global::System.Data.DataColumn columndoctorregistrationType;
            
            private global::System.Data.DataColumn columndoctorregistrationNo;
            
            private global::System.Data.DataColumn columndoctorPart_FullTime;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptDataTable() {
                this.TableName = "proc_getNUHChildDOCRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildDOCRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_getNUHChildDOCRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorIdColumn {
                get {
                    return this.columndoctorId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisNUHIdColumn {
                get {
                    return this.columnregisNUHId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorNameColumn {
                get {
                    return this.columndoctorName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorFathersNameColumn {
                get {
                    return this.columndoctorFathersName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorQualificationColumn {
                get {
                    return this.columndoctorQualification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NameofFoundationColumn {
                get {
                    return this.columnNameofFoundation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorregistrationTypeColumn {
                get {
                    return this.columndoctorregistrationType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorregistrationNoColumn {
                get {
                    return this.columndoctorregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn doctorPart_FullTimeColumn {
                get {
                    return this.columndoctorPart_FullTime;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRow this[int index] {
                get {
                    return ((proc_getNUHChildDOCRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildDOCRptRowChangeEventHandler proc_getNUHChildDOCRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildDOCRptRowChangeEventHandler proc_getNUHChildDOCRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildDOCRptRowChangeEventHandler proc_getNUHChildDOCRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildDOCRptRowChangeEventHandler proc_getNUHChildDOCRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_getNUHChildDOCRptRow(proc_getNUHChildDOCRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRow Addproc_getNUHChildDOCRptRow(long regisNUHId, string doctorName, string doctorFathersName, string doctorQualification, string NameofFoundation, string doctorregistrationType, string doctorregistrationNo, string doctorPart_FullTime) {
                proc_getNUHChildDOCRptRow rowproc_getNUHChildDOCRptRow = ((proc_getNUHChildDOCRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        regisNUHId,
                        doctorName,
                        doctorFathersName,
                        doctorQualification,
                        NameofFoundation,
                        doctorregistrationType,
                        doctorregistrationNo,
                        doctorPart_FullTime};
                rowproc_getNUHChildDOCRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_getNUHChildDOCRptRow);
                return rowproc_getNUHChildDOCRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRow FindBydoctorId(long doctorId) {
                return ((proc_getNUHChildDOCRptRow)(this.Rows.Find(new object[] {
                            doctorId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_getNUHChildDOCRptDataTable cln = ((proc_getNUHChildDOCRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_getNUHChildDOCRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columndoctorId = base.Columns["doctorId"];
                this.columnregisNUHId = base.Columns["regisNUHId"];
                this.columndoctorName = base.Columns["doctorName"];
                this.columndoctorFathersName = base.Columns["doctorFathersName"];
                this.columndoctorQualification = base.Columns["doctorQualification"];
                this.columnNameofFoundation = base.Columns["NameofFoundation"];
                this.columndoctorregistrationType = base.Columns["doctorregistrationType"];
                this.columndoctorregistrationNo = base.Columns["doctorregistrationNo"];
                this.columndoctorPart_FullTime = base.Columns["doctorPart_FullTime"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columndoctorId = new global::System.Data.DataColumn("doctorId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorId);
                this.columnregisNUHId = new global::System.Data.DataColumn("regisNUHId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisNUHId);
                this.columndoctorName = new global::System.Data.DataColumn("doctorName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorName);
                this.columndoctorFathersName = new global::System.Data.DataColumn("doctorFathersName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorFathersName);
                this.columndoctorQualification = new global::System.Data.DataColumn("doctorQualification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorQualification);
                this.columnNameofFoundation = new global::System.Data.DataColumn("NameofFoundation", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNameofFoundation);
                this.columndoctorregistrationType = new global::System.Data.DataColumn("doctorregistrationType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorregistrationType);
                this.columndoctorregistrationNo = new global::System.Data.DataColumn("doctorregistrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorregistrationNo);
                this.columndoctorPart_FullTime = new global::System.Data.DataColumn("doctorPart_FullTime", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndoctorPart_FullTime);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columndoctorId}, true));
                this.columndoctorId.AutoIncrement = true;
                this.columndoctorId.AutoIncrementSeed = -1;
                this.columndoctorId.AutoIncrementStep = -1;
                this.columndoctorId.AllowDBNull = false;
                this.columndoctorId.ReadOnly = true;
                this.columndoctorId.Unique = true;
                this.columndoctorName.ReadOnly = true;
                this.columndoctorName.MaxLength = 50;
                this.columndoctorFathersName.ReadOnly = true;
                this.columndoctorFathersName.MaxLength = 50;
                this.columndoctorQualification.ReadOnly = true;
                this.columndoctorQualification.MaxLength = 50;
                this.columnNameofFoundation.ReadOnly = true;
                this.columnNameofFoundation.MaxLength = 100;
                this.columndoctorregistrationType.ReadOnly = true;
                this.columndoctorregistrationType.MaxLength = 10;
                this.columndoctorregistrationNo.ReadOnly = true;
                this.columndoctorregistrationNo.MaxLength = 20;
                this.columndoctorPart_FullTime.ReadOnly = true;
                this.columndoctorPart_FullTime.MaxLength = 50;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRow Newproc_getNUHChildDOCRptRow() {
                return ((proc_getNUHChildDOCRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_getNUHChildDOCRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_getNUHChildDOCRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_getNUHChildDOCRptRowChanged != null)) {
                    this.proc_getNUHChildDOCRptRowChanged(this, new proc_getNUHChildDOCRptRowChangeEvent(((proc_getNUHChildDOCRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_getNUHChildDOCRptRowChanging != null)) {
                    this.proc_getNUHChildDOCRptRowChanging(this, new proc_getNUHChildDOCRptRowChangeEvent(((proc_getNUHChildDOCRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_getNUHChildDOCRptRowDeleted != null)) {
                    this.proc_getNUHChildDOCRptRowDeleted(this, new proc_getNUHChildDOCRptRowChangeEvent(((proc_getNUHChildDOCRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_getNUHChildDOCRptRowDeleting != null)) {
                    this.proc_getNUHChildDOCRptRowDeleting(this, new proc_getNUHChildDOCRptRowChangeEvent(((proc_getNUHChildDOCRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_getNUHChildDOCRptRow(proc_getNUHChildDOCRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_getNUHChildDOCRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_getNUHChildOwnerRptDataTable : global::System.Data.TypedTableBase<proc_getNUHChildOwnerRptRow> {
            
            private global::System.Data.DataColumn columnregisIdNUH;
            
            private global::System.Data.DataColumn columnownerName;
            
            private global::System.Data.DataColumn columnownerAge;
            
            private global::System.Data.DataColumn columnownerFatherName;
            
            private global::System.Data.DataColumn columnownerMobileNo;
            
            private global::System.Data.DataColumn columnownerEmailId;
            
            private global::System.Data.DataColumn columnownerAddress;
            
            private global::System.Data.DataColumn columnownerStateId;
            
            private global::System.Data.DataColumn columnownerStateName;
            
            private global::System.Data.DataColumn columnownerDistrictId;
            
            private global::System.Data.DataColumn columnownerDistrictName;
            
            private global::System.Data.DataColumn columnownerPincode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptDataTable() {
                this.TableName = "proc_getNUHChildOwnerRpt";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildOwnerRptDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_getNUHChildOwnerRptDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdNUHColumn {
                get {
                    return this.columnregisIdNUH;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerNameColumn {
                get {
                    return this.columnownerName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerAgeColumn {
                get {
                    return this.columnownerAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerFatherNameColumn {
                get {
                    return this.columnownerFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerMobileNoColumn {
                get {
                    return this.columnownerMobileNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerEmailIdColumn {
                get {
                    return this.columnownerEmailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerAddressColumn {
                get {
                    return this.columnownerAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerStateIdColumn {
                get {
                    return this.columnownerStateId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerStateNameColumn {
                get {
                    return this.columnownerStateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerDistrictIdColumn {
                get {
                    return this.columnownerDistrictId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerDistrictNameColumn {
                get {
                    return this.columnownerDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ownerPincodeColumn {
                get {
                    return this.columnownerPincode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptRow this[int index] {
                get {
                    return ((proc_getNUHChildOwnerRptRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildOwnerRptRowChangeEventHandler proc_getNUHChildOwnerRptRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildOwnerRptRowChangeEventHandler proc_getNUHChildOwnerRptRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildOwnerRptRowChangeEventHandler proc_getNUHChildOwnerRptRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_getNUHChildOwnerRptRowChangeEventHandler proc_getNUHChildOwnerRptRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_getNUHChildOwnerRptRow(proc_getNUHChildOwnerRptRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptRow Addproc_getNUHChildOwnerRptRow(long regisIdNUH, string ownerName, int ownerAge, string ownerFatherName, string ownerMobileNo, string ownerEmailId, string ownerAddress, int ownerStateId, string ownerStateName, int ownerDistrictId, string ownerDistrictName, string ownerPincode) {
                proc_getNUHChildOwnerRptRow rowproc_getNUHChildOwnerRptRow = ((proc_getNUHChildOwnerRptRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        regisIdNUH,
                        ownerName,
                        ownerAge,
                        ownerFatherName,
                        ownerMobileNo,
                        ownerEmailId,
                        ownerAddress,
                        ownerStateId,
                        ownerStateName,
                        ownerDistrictId,
                        ownerDistrictName,
                        ownerPincode};
                rowproc_getNUHChildOwnerRptRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_getNUHChildOwnerRptRow);
                return rowproc_getNUHChildOwnerRptRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_getNUHChildOwnerRptDataTable cln = ((proc_getNUHChildOwnerRptDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_getNUHChildOwnerRptDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdNUH = base.Columns["regisIdNUH"];
                this.columnownerName = base.Columns["ownerName"];
                this.columnownerAge = base.Columns["ownerAge"];
                this.columnownerFatherName = base.Columns["ownerFatherName"];
                this.columnownerMobileNo = base.Columns["ownerMobileNo"];
                this.columnownerEmailId = base.Columns["ownerEmailId"];
                this.columnownerAddress = base.Columns["ownerAddress"];
                this.columnownerStateId = base.Columns["ownerStateId"];
                this.columnownerStateName = base.Columns["ownerStateName"];
                this.columnownerDistrictId = base.Columns["ownerDistrictId"];
                this.columnownerDistrictName = base.Columns["ownerDistrictName"];
                this.columnownerPincode = base.Columns["ownerPincode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdNUH = new global::System.Data.DataColumn("regisIdNUH", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdNUH);
                this.columnownerName = new global::System.Data.DataColumn("ownerName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerName);
                this.columnownerAge = new global::System.Data.DataColumn("ownerAge", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerAge);
                this.columnownerFatherName = new global::System.Data.DataColumn("ownerFatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerFatherName);
                this.columnownerMobileNo = new global::System.Data.DataColumn("ownerMobileNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerMobileNo);
                this.columnownerEmailId = new global::System.Data.DataColumn("ownerEmailId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerEmailId);
                this.columnownerAddress = new global::System.Data.DataColumn("ownerAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerAddress);
                this.columnownerStateId = new global::System.Data.DataColumn("ownerStateId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerStateId);
                this.columnownerStateName = new global::System.Data.DataColumn("ownerStateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerStateName);
                this.columnownerDistrictId = new global::System.Data.DataColumn("ownerDistrictId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerDistrictId);
                this.columnownerDistrictName = new global::System.Data.DataColumn("ownerDistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerDistrictName);
                this.columnownerPincode = new global::System.Data.DataColumn("ownerPincode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnownerPincode);
                this.columnownerName.ReadOnly = true;
                this.columnownerName.MaxLength = 250;
                this.columnownerFatherName.ReadOnly = true;
                this.columnownerFatherName.MaxLength = 250;
                this.columnownerMobileNo.ReadOnly = true;
                this.columnownerMobileNo.MaxLength = 15;
                this.columnownerEmailId.ReadOnly = true;
                this.columnownerEmailId.MaxLength = 250;
                this.columnownerAddress.ReadOnly = true;
                this.columnownerAddress.MaxLength = 500;
                this.columnownerStateName.MaxLength = 2147483647;
                this.columnownerDistrictName.MaxLength = 2147483647;
                this.columnownerPincode.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptRow Newproc_getNUHChildOwnerRptRow() {
                return ((proc_getNUHChildOwnerRptRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_getNUHChildOwnerRptRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_getNUHChildOwnerRptRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_getNUHChildOwnerRptRowChanged != null)) {
                    this.proc_getNUHChildOwnerRptRowChanged(this, new proc_getNUHChildOwnerRptRowChangeEvent(((proc_getNUHChildOwnerRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_getNUHChildOwnerRptRowChanging != null)) {
                    this.proc_getNUHChildOwnerRptRowChanging(this, new proc_getNUHChildOwnerRptRowChangeEvent(((proc_getNUHChildOwnerRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_getNUHChildOwnerRptRowDeleted != null)) {
                    this.proc_getNUHChildOwnerRptRowDeleted(this, new proc_getNUHChildOwnerRptRowChangeEvent(((proc_getNUHChildOwnerRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_getNUHChildOwnerRptRowDeleting != null)) {
                    this.proc_getNUHChildOwnerRptRowDeleting(this, new proc_getNUHChildOwnerRptRowChangeEvent(((proc_getNUHChildOwnerRptRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_getNUHChildOwnerRptRow(proc_getNUHChildOwnerRptRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_getNUHChildOwnerRptDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Proc_GetCommitteeMemberDataTable : global::System.Data.TypedTableBase<Proc_GetCommitteeMemberRow> {
            
            private global::System.Data.DataColumn columncommMemName;
            
            private global::System.Data.DataColumn columncommMemDesig;
            
            private global::System.Data.DataColumn columncommMemDept;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDataTable() {
                this.TableName = "Proc_GetCommitteeMember";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Proc_GetCommitteeMemberDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Proc_GetCommitteeMemberDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemNameColumn {
                get {
                    return this.columncommMemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemDesigColumn {
                get {
                    return this.columncommMemDesig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemDeptColumn {
                get {
                    return this.columncommMemDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberRow this[int index] {
                get {
                    return ((Proc_GetCommitteeMemberRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberRowChangeEventHandler Proc_GetCommitteeMemberRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberRowChangeEventHandler Proc_GetCommitteeMemberRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberRowChangeEventHandler Proc_GetCommitteeMemberRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberRowChangeEventHandler Proc_GetCommitteeMemberRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProc_GetCommitteeMemberRow(Proc_GetCommitteeMemberRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberRow AddProc_GetCommitteeMemberRow(string commMemName, string commMemDesig, string commMemDept) {
                Proc_GetCommitteeMemberRow rowProc_GetCommitteeMemberRow = ((Proc_GetCommitteeMemberRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        commMemName,
                        commMemDesig,
                        commMemDept};
                rowProc_GetCommitteeMemberRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProc_GetCommitteeMemberRow);
                return rowProc_GetCommitteeMemberRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Proc_GetCommitteeMemberDataTable cln = ((Proc_GetCommitteeMemberDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Proc_GetCommitteeMemberDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncommMemName = base.Columns["commMemName"];
                this.columncommMemDesig = base.Columns["commMemDesig"];
                this.columncommMemDept = base.Columns["commMemDept"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncommMemName = new global::System.Data.DataColumn("commMemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemName);
                this.columncommMemDesig = new global::System.Data.DataColumn("commMemDesig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemDesig);
                this.columncommMemDept = new global::System.Data.DataColumn("commMemDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemDept);
                this.columncommMemName.MaxLength = 150;
                this.columncommMemDesig.MaxLength = 150;
                this.columncommMemDept.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberRow NewProc_GetCommitteeMemberRow() {
                return ((Proc_GetCommitteeMemberRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Proc_GetCommitteeMemberRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Proc_GetCommitteeMemberRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Proc_GetCommitteeMemberRowChanged != null)) {
                    this.Proc_GetCommitteeMemberRowChanged(this, new Proc_GetCommitteeMemberRowChangeEvent(((Proc_GetCommitteeMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Proc_GetCommitteeMemberRowChanging != null)) {
                    this.Proc_GetCommitteeMemberRowChanging(this, new Proc_GetCommitteeMemberRowChangeEvent(((Proc_GetCommitteeMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Proc_GetCommitteeMemberRowDeleted != null)) {
                    this.Proc_GetCommitteeMemberRowDeleted(this, new Proc_GetCommitteeMemberRowChangeEvent(((Proc_GetCommitteeMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Proc_GetCommitteeMemberRowDeleting != null)) {
                    this.Proc_GetCommitteeMemberRowDeleting(this, new Proc_GetCommitteeMemberRowChangeEvent(((Proc_GetCommitteeMemberRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProc_GetCommitteeMemberRow(Proc_GetCommitteeMemberRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Proc_GetCommitteeMemberDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_rptAGC_CertificateDataTable : global::System.Data.TypedTableBase<proc_rptAGC_CertificateRow> {
            
            private global::System.Data.DataColumn columnregisIdAGC;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columncertiGendBy;
            
            private global::System.Data.DataColumn columninprocessAGCId;
            
            private global::System.Data.DataColumn columnsusName;
            
            private global::System.Data.DataColumn columnsusFatherName;
            
            private global::System.Data.DataColumn columnappliedDate;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columnappStatus;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnsusaddress;
            
            private global::System.Data.DataColumn columnsusstateName;
            
            private global::System.Data.DataColumn columnsusdistrictName;
            
            private global::System.Data.DataColumn columnsuspinCode;
            
            private global::System.Data.DataColumn columnorderDetail;
            
            private global::System.Data.DataColumn columnorderNo;
            
            private global::System.Data.DataColumn columnxRayPlateNo;
            
            private global::System.Data.DataColumn columndentalPlateNo;
            
            private global::System.Data.DataColumn columnmarkOfIdentification;
            
            private global::System.Data.DataColumn columnsusphotoFile;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateDataTable() {
                this.TableName = "proc_rptAGC_Certificate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptAGC_CertificateDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_rptAGC_CertificateDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdAGCColumn {
                get {
                    return this.columnregisIdAGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certiGendByColumn {
                get {
                    return this.columncertiGendBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inprocessAGCIdColumn {
                get {
                    return this.columninprocessAGCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susNameColumn {
                get {
                    return this.columnsusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susFatherNameColumn {
                get {
                    return this.columnsusFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appliedDateColumn {
                get {
                    return this.columnappliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appStatusColumn {
                get {
                    return this.columnappStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susaddressColumn {
                get {
                    return this.columnsusaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susstateNameColumn {
                get {
                    return this.columnsusstateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susdistrictNameColumn {
                get {
                    return this.columnsusdistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn suspinCodeColumn {
                get {
                    return this.columnsuspinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderDetailColumn {
                get {
                    return this.columnorderDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderNoColumn {
                get {
                    return this.columnorderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xRayPlateNoColumn {
                get {
                    return this.columnxRayPlateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dentalPlateNoColumn {
                get {
                    return this.columndentalPlateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn markOfIdentificationColumn {
                get {
                    return this.columnmarkOfIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susphotoFileColumn {
                get {
                    return this.columnsusphotoFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRow this[int index] {
                get {
                    return ((proc_rptAGC_CertificateRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateRowChangeEventHandler proc_rptAGC_CertificateRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateRowChangeEventHandler proc_rptAGC_CertificateRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateRowChangeEventHandler proc_rptAGC_CertificateRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateRowChangeEventHandler proc_rptAGC_CertificateRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_rptAGC_CertificateRow(proc_rptAGC_CertificateRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRow Addproc_rptAGC_CertificateRow(
                        string registrationNo, 
                        string certiGendBy, 
                        string susName, 
                        string susFatherName, 
                        string appliedDate, 
                        int age, 
                        string DistrictName, 
                        int appStatus, 
                        string certificateNo, 
                        string susaddress, 
                        string susstateName, 
                        string susdistrictName, 
                        string suspinCode, 
                        string orderDetail, 
                        int orderNo, 
                        string xRayPlateNo, 
                        string dentalPlateNo, 
                        string markOfIdentification, 
                        string susphotoFile) {
                proc_rptAGC_CertificateRow rowproc_rptAGC_CertificateRow = ((proc_rptAGC_CertificateRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        registrationNo,
                        certiGendBy,
                        null,
                        susName,
                        susFatherName,
                        appliedDate,
                        age,
                        DistrictName,
                        appStatus,
                        certificateNo,
                        susaddress,
                        susstateName,
                        susdistrictName,
                        suspinCode,
                        orderDetail,
                        orderNo,
                        xRayPlateNo,
                        dentalPlateNo,
                        markOfIdentification,
                        susphotoFile};
                rowproc_rptAGC_CertificateRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_rptAGC_CertificateRow);
                return rowproc_rptAGC_CertificateRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRow FindByregisIdAGC(long regisIdAGC) {
                return ((proc_rptAGC_CertificateRow)(this.Rows.Find(new object[] {
                            regisIdAGC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_rptAGC_CertificateDataTable cln = ((proc_rptAGC_CertificateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_rptAGC_CertificateDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdAGC = base.Columns["regisIdAGC"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columncertiGendBy = base.Columns["certiGendBy"];
                this.columninprocessAGCId = base.Columns["inprocessAGCId"];
                this.columnsusName = base.Columns["susName"];
                this.columnsusFatherName = base.Columns["susFatherName"];
                this.columnappliedDate = base.Columns["appliedDate"];
                this.columnage = base.Columns["age"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columnappStatus = base.Columns["appStatus"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnsusaddress = base.Columns["susaddress"];
                this.columnsusstateName = base.Columns["susstateName"];
                this.columnsusdistrictName = base.Columns["susdistrictName"];
                this.columnsuspinCode = base.Columns["suspinCode"];
                this.columnorderDetail = base.Columns["orderDetail"];
                this.columnorderNo = base.Columns["orderNo"];
                this.columnxRayPlateNo = base.Columns["xRayPlateNo"];
                this.columndentalPlateNo = base.Columns["dentalPlateNo"];
                this.columnmarkOfIdentification = base.Columns["markOfIdentification"];
                this.columnsusphotoFile = base.Columns["susphotoFile"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdAGC = new global::System.Data.DataColumn("regisIdAGC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdAGC);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columncertiGendBy = new global::System.Data.DataColumn("certiGendBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertiGendBy);
                this.columninprocessAGCId = new global::System.Data.DataColumn("inprocessAGCId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninprocessAGCId);
                this.columnsusName = new global::System.Data.DataColumn("susName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusName);
                this.columnsusFatherName = new global::System.Data.DataColumn("susFatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusFatherName);
                this.columnappliedDate = new global::System.Data.DataColumn("appliedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliedDate);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnappStatus = new global::System.Data.DataColumn("appStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappStatus);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnsusaddress = new global::System.Data.DataColumn("susaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusaddress);
                this.columnsusstateName = new global::System.Data.DataColumn("susstateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusstateName);
                this.columnsusdistrictName = new global::System.Data.DataColumn("susdistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusdistrictName);
                this.columnsuspinCode = new global::System.Data.DataColumn("suspinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuspinCode);
                this.columnorderDetail = new global::System.Data.DataColumn("orderDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderDetail);
                this.columnorderNo = new global::System.Data.DataColumn("orderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderNo);
                this.columnxRayPlateNo = new global::System.Data.DataColumn("xRayPlateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxRayPlateNo);
                this.columndentalPlateNo = new global::System.Data.DataColumn("dentalPlateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndentalPlateNo);
                this.columnmarkOfIdentification = new global::System.Data.DataColumn("markOfIdentification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarkOfIdentification);
                this.columnsusphotoFile = new global::System.Data.DataColumn("susphotoFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusphotoFile);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdAGC}, true));
                this.columnregisIdAGC.AutoIncrement = true;
                this.columnregisIdAGC.AutoIncrementSeed = -1;
                this.columnregisIdAGC.AutoIncrementStep = -1;
                this.columnregisIdAGC.AllowDBNull = false;
                this.columnregisIdAGC.ReadOnly = true;
                this.columnregisIdAGC.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columncertiGendBy.MaxLength = 250;
                this.columninprocessAGCId.AutoIncrement = true;
                this.columninprocessAGCId.AutoIncrementSeed = -1;
                this.columninprocessAGCId.AutoIncrementStep = -1;
                this.columninprocessAGCId.AllowDBNull = false;
                this.columninprocessAGCId.ReadOnly = true;
                this.columnsusName.ReadOnly = true;
                this.columnsusName.MaxLength = 50;
                this.columnsusFatherName.ReadOnly = true;
                this.columnsusFatherName.MaxLength = 50;
                this.columnappliedDate.ReadOnly = true;
                this.columnappliedDate.MaxLength = 30;
                this.columnDistrictName.ReadOnly = true;
                this.columnDistrictName.MaxLength = 2147483647;
                this.columncertificateNo.MaxLength = 15;
                this.columnsusaddress.ReadOnly = true;
                this.columnsusaddress.MaxLength = 50;
                this.columnsusstateName.ReadOnly = true;
                this.columnsusstateName.MaxLength = 2147483647;
                this.columnsusdistrictName.ReadOnly = true;
                this.columnsusdistrictName.MaxLength = 2147483647;
                this.columnsuspinCode.MaxLength = 50;
                this.columnorderDetail.ReadOnly = true;
                this.columnorderDetail.MaxLength = 50;
                this.columnxRayPlateNo.ReadOnly = true;
                this.columnxRayPlateNo.MaxLength = 100;
                this.columndentalPlateNo.ReadOnly = true;
                this.columndentalPlateNo.MaxLength = 100;
                this.columnmarkOfIdentification.ReadOnly = true;
                this.columnmarkOfIdentification.MaxLength = 150;
                this.columnsusphotoFile.MaxLength = 250;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRow Newproc_rptAGC_CertificateRow() {
                return ((proc_rptAGC_CertificateRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_rptAGC_CertificateRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_rptAGC_CertificateRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_rptAGC_CertificateRowChanged != null)) {
                    this.proc_rptAGC_CertificateRowChanged(this, new proc_rptAGC_CertificateRowChangeEvent(((proc_rptAGC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_rptAGC_CertificateRowChanging != null)) {
                    this.proc_rptAGC_CertificateRowChanging(this, new proc_rptAGC_CertificateRowChangeEvent(((proc_rptAGC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_rptAGC_CertificateRowDeleted != null)) {
                    this.proc_rptAGC_CertificateRowDeleted(this, new proc_rptAGC_CertificateRowChangeEvent(((proc_rptAGC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_rptAGC_CertificateRowDeleting != null)) {
                    this.proc_rptAGC_CertificateRowDeleting(this, new proc_rptAGC_CertificateRowChangeEvent(((proc_rptAGC_CertificateRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_rptAGC_CertificateRow(proc_rptAGC_CertificateRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_rptAGC_CertificateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class proc_rptAGC_CertificateReportDataTable : global::System.Data.TypedTableBase<proc_rptAGC_CertificateReportRow> {
            
            private global::System.Data.DataColumn columnregisIdAGC;
            
            private global::System.Data.DataColumn columnregistrationNo;
            
            private global::System.Data.DataColumn columncertiGendBy;
            
            private global::System.Data.DataColumn columninprocessAGCId;
            
            private global::System.Data.DataColumn columnsusName;
            
            private global::System.Data.DataColumn columnsusFatherName;
            
            private global::System.Data.DataColumn columnappliedDate;
            
            private global::System.Data.DataColumn columnage;
            
            private global::System.Data.DataColumn columnDistrictName;
            
            private global::System.Data.DataColumn columnappStatus;
            
            private global::System.Data.DataColumn columncertificateNo;
            
            private global::System.Data.DataColumn columnsusaddress;
            
            private global::System.Data.DataColumn columnsusstateName;
            
            private global::System.Data.DataColumn columnsusdistrictName;
            
            private global::System.Data.DataColumn columnsuspinCode;
            
            private global::System.Data.DataColumn columnorderDetail;
            
            private global::System.Data.DataColumn columnorderNo;
            
            private global::System.Data.DataColumn columnxRayPlateNo;
            
            private global::System.Data.DataColumn columndentalPlateNo;
            
            private global::System.Data.DataColumn columnmarkOfIdentification;
            
            private global::System.Data.DataColumn columnsusphotoFile;
            
            private global::System.Data.DataColumn columnPhoto;
            
            private global::System.Data.DataColumn columnorderDate;
            
            private global::System.Data.DataColumn columnapplicantSubTypeName;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportDataTable() {
                this.TableName = "proc_rptAGC_CertificateReport";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptAGC_CertificateReportDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected proc_rptAGC_CertificateReportDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn regisIdAGCColumn {
                get {
                    return this.columnregisIdAGC;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn registrationNoColumn {
                get {
                    return this.columnregistrationNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certiGendByColumn {
                get {
                    return this.columncertiGendBy;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn inprocessAGCIdColumn {
                get {
                    return this.columninprocessAGCId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susNameColumn {
                get {
                    return this.columnsusName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susFatherNameColumn {
                get {
                    return this.columnsusFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appliedDateColumn {
                get {
                    return this.columnappliedDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ageColumn {
                get {
                    return this.columnage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DistrictNameColumn {
                get {
                    return this.columnDistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn appStatusColumn {
                get {
                    return this.columnappStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn certificateNoColumn {
                get {
                    return this.columncertificateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susaddressColumn {
                get {
                    return this.columnsusaddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susstateNameColumn {
                get {
                    return this.columnsusstateName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susdistrictNameColumn {
                get {
                    return this.columnsusdistrictName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn suspinCodeColumn {
                get {
                    return this.columnsuspinCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderDetailColumn {
                get {
                    return this.columnorderDetail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderNoColumn {
                get {
                    return this.columnorderNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn xRayPlateNoColumn {
                get {
                    return this.columnxRayPlateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn dentalPlateNoColumn {
                get {
                    return this.columndentalPlateNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn markOfIdentificationColumn {
                get {
                    return this.columnmarkOfIdentification;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn susphotoFileColumn {
                get {
                    return this.columnsusphotoFile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoColumn {
                get {
                    return this.columnPhoto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn orderDateColumn {
                get {
                    return this.columnorderDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn applicantSubTypeNameColumn {
                get {
                    return this.columnapplicantSubTypeName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRow this[int index] {
                get {
                    return ((proc_rptAGC_CertificateReportRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateReportRowChangeEventHandler proc_rptAGC_CertificateReportRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateReportRowChangeEventHandler proc_rptAGC_CertificateReportRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateReportRowChangeEventHandler proc_rptAGC_CertificateReportRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event proc_rptAGC_CertificateReportRowChangeEventHandler proc_rptAGC_CertificateReportRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Addproc_rptAGC_CertificateReportRow(proc_rptAGC_CertificateReportRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRow Addproc_rptAGC_CertificateReportRow(
                        string registrationNo, 
                        string certiGendBy, 
                        string susName, 
                        string susFatherName, 
                        string appliedDate, 
                        int age, 
                        string DistrictName, 
                        int appStatus, 
                        string certificateNo, 
                        string susaddress, 
                        string susstateName, 
                        string susdistrictName, 
                        string suspinCode, 
                        string orderDetail, 
                        int orderNo, 
                        string xRayPlateNo, 
                        string dentalPlateNo, 
                        string markOfIdentification, 
                        string susphotoFile, 
                        byte[] Photo, 
                        string orderDate, 
                        string applicantSubTypeName) {
                proc_rptAGC_CertificateReportRow rowproc_rptAGC_CertificateReportRow = ((proc_rptAGC_CertificateReportRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        registrationNo,
                        certiGendBy,
                        null,
                        susName,
                        susFatherName,
                        appliedDate,
                        age,
                        DistrictName,
                        appStatus,
                        certificateNo,
                        susaddress,
                        susstateName,
                        susdistrictName,
                        suspinCode,
                        orderDetail,
                        orderNo,
                        xRayPlateNo,
                        dentalPlateNo,
                        markOfIdentification,
                        susphotoFile,
                        Photo,
                        orderDate,
                        applicantSubTypeName};
                rowproc_rptAGC_CertificateReportRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowproc_rptAGC_CertificateReportRow);
                return rowproc_rptAGC_CertificateReportRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRow FindByregisIdAGC(long regisIdAGC) {
                return ((proc_rptAGC_CertificateReportRow)(this.Rows.Find(new object[] {
                            regisIdAGC})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                proc_rptAGC_CertificateReportDataTable cln = ((proc_rptAGC_CertificateReportDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new proc_rptAGC_CertificateReportDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnregisIdAGC = base.Columns["regisIdAGC"];
                this.columnregistrationNo = base.Columns["registrationNo"];
                this.columncertiGendBy = base.Columns["certiGendBy"];
                this.columninprocessAGCId = base.Columns["inprocessAGCId"];
                this.columnsusName = base.Columns["susName"];
                this.columnsusFatherName = base.Columns["susFatherName"];
                this.columnappliedDate = base.Columns["appliedDate"];
                this.columnage = base.Columns["age"];
                this.columnDistrictName = base.Columns["DistrictName"];
                this.columnappStatus = base.Columns["appStatus"];
                this.columncertificateNo = base.Columns["certificateNo"];
                this.columnsusaddress = base.Columns["susaddress"];
                this.columnsusstateName = base.Columns["susstateName"];
                this.columnsusdistrictName = base.Columns["susdistrictName"];
                this.columnsuspinCode = base.Columns["suspinCode"];
                this.columnorderDetail = base.Columns["orderDetail"];
                this.columnorderNo = base.Columns["orderNo"];
                this.columnxRayPlateNo = base.Columns["xRayPlateNo"];
                this.columndentalPlateNo = base.Columns["dentalPlateNo"];
                this.columnmarkOfIdentification = base.Columns["markOfIdentification"];
                this.columnsusphotoFile = base.Columns["susphotoFile"];
                this.columnPhoto = base.Columns["Photo"];
                this.columnorderDate = base.Columns["orderDate"];
                this.columnapplicantSubTypeName = base.Columns["applicantSubTypeName"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnregisIdAGC = new global::System.Data.DataColumn("regisIdAGC", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregisIdAGC);
                this.columnregistrationNo = new global::System.Data.DataColumn("registrationNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnregistrationNo);
                this.columncertiGendBy = new global::System.Data.DataColumn("certiGendBy", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertiGendBy);
                this.columninprocessAGCId = new global::System.Data.DataColumn("inprocessAGCId", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columninprocessAGCId);
                this.columnsusName = new global::System.Data.DataColumn("susName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusName);
                this.columnsusFatherName = new global::System.Data.DataColumn("susFatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusFatherName);
                this.columnappliedDate = new global::System.Data.DataColumn("appliedDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappliedDate);
                this.columnage = new global::System.Data.DataColumn("age", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnage);
                this.columnDistrictName = new global::System.Data.DataColumn("DistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrictName);
                this.columnappStatus = new global::System.Data.DataColumn("appStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnappStatus);
                this.columncertificateNo = new global::System.Data.DataColumn("certificateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncertificateNo);
                this.columnsusaddress = new global::System.Data.DataColumn("susaddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusaddress);
                this.columnsusstateName = new global::System.Data.DataColumn("susstateName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusstateName);
                this.columnsusdistrictName = new global::System.Data.DataColumn("susdistrictName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusdistrictName);
                this.columnsuspinCode = new global::System.Data.DataColumn("suspinCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsuspinCode);
                this.columnorderDetail = new global::System.Data.DataColumn("orderDetail", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderDetail);
                this.columnorderNo = new global::System.Data.DataColumn("orderNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderNo);
                this.columnxRayPlateNo = new global::System.Data.DataColumn("xRayPlateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnxRayPlateNo);
                this.columndentalPlateNo = new global::System.Data.DataColumn("dentalPlateNo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columndentalPlateNo);
                this.columnmarkOfIdentification = new global::System.Data.DataColumn("markOfIdentification", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnmarkOfIdentification);
                this.columnsusphotoFile = new global::System.Data.DataColumn("susphotoFile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnsusphotoFile);
                this.columnPhoto = new global::System.Data.DataColumn("Photo", typeof(byte[]), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhoto);
                this.columnorderDate = new global::System.Data.DataColumn("orderDate", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnorderDate);
                this.columnapplicantSubTypeName = new global::System.Data.DataColumn("applicantSubTypeName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnapplicantSubTypeName);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnregisIdAGC}, true));
                this.columnregisIdAGC.AutoIncrement = true;
                this.columnregisIdAGC.AutoIncrementSeed = -1;
                this.columnregisIdAGC.AutoIncrementStep = -1;
                this.columnregisIdAGC.AllowDBNull = false;
                this.columnregisIdAGC.ReadOnly = true;
                this.columnregisIdAGC.Unique = true;
                this.columnregistrationNo.MaxLength = 20;
                this.columncertiGendBy.MaxLength = 250;
                this.columninprocessAGCId.AutoIncrement = true;
                this.columninprocessAGCId.AutoIncrementSeed = -1;
                this.columninprocessAGCId.AutoIncrementStep = -1;
                this.columninprocessAGCId.AllowDBNull = false;
                this.columninprocessAGCId.ReadOnly = true;
                this.columnsusName.ReadOnly = true;
                this.columnsusName.MaxLength = 50;
                this.columnsusFatherName.ReadOnly = true;
                this.columnsusFatherName.MaxLength = 50;
                this.columnappliedDate.ReadOnly = true;
                this.columnappliedDate.MaxLength = 30;
                this.columnDistrictName.ReadOnly = true;
                this.columnDistrictName.MaxLength = 2147483647;
                this.columncertificateNo.MaxLength = 15;
                this.columnsusaddress.ReadOnly = true;
                this.columnsusaddress.MaxLength = 50;
                this.columnsusstateName.ReadOnly = true;
                this.columnsusstateName.MaxLength = 2147483647;
                this.columnsusdistrictName.ReadOnly = true;
                this.columnsusdistrictName.MaxLength = 2147483647;
                this.columnsuspinCode.MaxLength = 50;
                this.columnorderDetail.ReadOnly = true;
                this.columnorderDetail.MaxLength = 50;
                this.columnxRayPlateNo.ReadOnly = true;
                this.columnxRayPlateNo.MaxLength = 100;
                this.columndentalPlateNo.ReadOnly = true;
                this.columndentalPlateNo.MaxLength = 100;
                this.columnmarkOfIdentification.ReadOnly = true;
                this.columnmarkOfIdentification.MaxLength = 150;
                this.columnsusphotoFile.MaxLength = 250;
                this.columnorderDate.ReadOnly = true;
                this.columnorderDate.MaxLength = 25;
                this.columnapplicantSubTypeName.ReadOnly = true;
                this.columnapplicantSubTypeName.MaxLength = 500;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRow Newproc_rptAGC_CertificateReportRow() {
                return ((proc_rptAGC_CertificateReportRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new proc_rptAGC_CertificateReportRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(proc_rptAGC_CertificateReportRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.proc_rptAGC_CertificateReportRowChanged != null)) {
                    this.proc_rptAGC_CertificateReportRowChanged(this, new proc_rptAGC_CertificateReportRowChangeEvent(((proc_rptAGC_CertificateReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.proc_rptAGC_CertificateReportRowChanging != null)) {
                    this.proc_rptAGC_CertificateReportRowChanging(this, new proc_rptAGC_CertificateReportRowChangeEvent(((proc_rptAGC_CertificateReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.proc_rptAGC_CertificateReportRowDeleted != null)) {
                    this.proc_rptAGC_CertificateReportRowDeleted(this, new proc_rptAGC_CertificateReportRowChangeEvent(((proc_rptAGC_CertificateReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.proc_rptAGC_CertificateReportRowDeleting != null)) {
                    this.proc_rptAGC_CertificateReportRowDeleting(this, new proc_rptAGC_CertificateReportRowChangeEvent(((proc_rptAGC_CertificateReportRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Removeproc_rptAGC_CertificateReportRow(proc_rptAGC_CertificateReportRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "proc_rptAGC_CertificateReportDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Proc_GetCommitteeMemberDICDataTable : global::System.Data.TypedTableBase<Proc_GetCommitteeMemberDICRow> {
            
            private global::System.Data.DataColumn columncommMemName;
            
            private global::System.Data.DataColumn columncommMemDesig;
            
            private global::System.Data.DataColumn columncommMemDept;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICDataTable() {
                this.TableName = "Proc_GetCommitteeMemberDIC";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Proc_GetCommitteeMemberDICDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected Proc_GetCommitteeMemberDICDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemNameColumn {
                get {
                    return this.columncommMemName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemDesigColumn {
                get {
                    return this.columncommMemDesig;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn commMemDeptColumn {
                get {
                    return this.columncommMemDept;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICRow this[int index] {
                get {
                    return ((Proc_GetCommitteeMemberDICRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberDICRowChangeEventHandler Proc_GetCommitteeMemberDICRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberDICRowChangeEventHandler Proc_GetCommitteeMemberDICRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberDICRowChangeEventHandler Proc_GetCommitteeMemberDICRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event Proc_GetCommitteeMemberDICRowChangeEventHandler Proc_GetCommitteeMemberDICRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddProc_GetCommitteeMemberDICRow(Proc_GetCommitteeMemberDICRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICRow AddProc_GetCommitteeMemberDICRow(string commMemName, string commMemDesig, string commMemDept) {
                Proc_GetCommitteeMemberDICRow rowProc_GetCommitteeMemberDICRow = ((Proc_GetCommitteeMemberDICRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        commMemName,
                        commMemDesig,
                        commMemDept};
                rowProc_GetCommitteeMemberDICRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowProc_GetCommitteeMemberDICRow);
                return rowProc_GetCommitteeMemberDICRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                Proc_GetCommitteeMemberDICDataTable cln = ((Proc_GetCommitteeMemberDICDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Proc_GetCommitteeMemberDICDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columncommMemName = base.Columns["commMemName"];
                this.columncommMemDesig = base.Columns["commMemDesig"];
                this.columncommMemDept = base.Columns["commMemDept"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columncommMemName = new global::System.Data.DataColumn("commMemName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemName);
                this.columncommMemDesig = new global::System.Data.DataColumn("commMemDesig", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemDesig);
                this.columncommMemDept = new global::System.Data.DataColumn("commMemDept", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columncommMemDept);
                this.columncommMemName.MaxLength = 150;
                this.columncommMemDesig.MaxLength = 150;
                this.columncommMemDept.MaxLength = 150;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICRow NewProc_GetCommitteeMemberDICRow() {
                return ((Proc_GetCommitteeMemberDICRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Proc_GetCommitteeMemberDICRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(Proc_GetCommitteeMemberDICRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Proc_GetCommitteeMemberDICRowChanged != null)) {
                    this.Proc_GetCommitteeMemberDICRowChanged(this, new Proc_GetCommitteeMemberDICRowChangeEvent(((Proc_GetCommitteeMemberDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Proc_GetCommitteeMemberDICRowChanging != null)) {
                    this.Proc_GetCommitteeMemberDICRowChanging(this, new Proc_GetCommitteeMemberDICRowChangeEvent(((Proc_GetCommitteeMemberDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Proc_GetCommitteeMemberDICRowDeleted != null)) {
                    this.Proc_GetCommitteeMemberDICRowDeleted(this, new Proc_GetCommitteeMemberDICRowChangeEvent(((Proc_GetCommitteeMemberDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Proc_GetCommitteeMemberDICRowDeleting != null)) {
                    this.Proc_GetCommitteeMemberDICRowDeleting(this, new Proc_GetCommitteeMemberDICRowChangeEvent(((Proc_GetCommitteeMemberDICRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveProc_GetCommitteeMemberDICRow(Proc_GetCommitteeMemberDICRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSetNUH ds = new DataSetNUH();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Proc_GetCommitteeMemberDICDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_getNUHChildRow : global::System.Data.DataRow {
            
            private proc_getNUHChildDataTable tableproc_getNUHChild;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_getNUHChild = ((proc_getNUHChildDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nursingDocumentId {
                get {
                    return ((long)(this[this.tableproc_getNUHChild.nursingDocumentIdColumn]));
                }
                set {
                    this[this.tableproc_getNUHChild.nursingDocumentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdNUH {
                get {
                    try {
                        return ((long)(this[this.tableproc_getNUHChild.regisIdNUHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisIdNUH\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.regisIdNUHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.staffNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffName\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.staffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffqualification {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.staffqualificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffqualification\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.staffqualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffinstitution {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.staffinstitutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffinstitution\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.staffinstitutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffRegistrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.staffRegistrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffRegistrationNo\' in table \'proc_getNUHChild\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.staffRegistrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffNameOfMCI_SMF {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.staffNameOfMCI_SMFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffNameOfMCI_SMF\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.staffNameOfMCI_SMFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string filePath {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChild.filePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'filePath\' in table \'proc_getNUHChild\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChild.filePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdNUHNull() {
                return this.IsNull(this.tableproc_getNUHChild.regisIdNUHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdNUHNull() {
                this[this.tableproc_getNUHChild.regisIdNUHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffNameNull() {
                return this.IsNull(this.tableproc_getNUHChild.staffNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffNameNull() {
                this[this.tableproc_getNUHChild.staffNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffqualificationNull() {
                return this.IsNull(this.tableproc_getNUHChild.staffqualificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffqualificationNull() {
                this[this.tableproc_getNUHChild.staffqualificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffinstitutionNull() {
                return this.IsNull(this.tableproc_getNUHChild.staffinstitutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffinstitutionNull() {
                this[this.tableproc_getNUHChild.staffinstitutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffRegistrationNoNull() {
                return this.IsNull(this.tableproc_getNUHChild.staffRegistrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffRegistrationNoNull() {
                this[this.tableproc_getNUHChild.staffRegistrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffNameOfMCI_SMFNull() {
                return this.IsNull(this.tableproc_getNUHChild.staffNameOfMCI_SMFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffNameOfMCI_SMFNull() {
                this[this.tableproc_getNUHChild.staffNameOfMCI_SMFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfilePathNull() {
                return this.IsNull(this.tableproc_getNUHChild.filePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfilePathNull() {
                this[this.tableproc_getNUHChild.filePathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetNUHrptDetailRow : global::System.Data.DataRow {
            
            private GetNUHrptDetailDataTable tableGetNUHrptDetail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetNUHrptDetailRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetNUHrptDetail = ((GetNUHrptDetailDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdNUH {
                get {
                    return ((long)(this[this.tableGetNUHrptDetail.regisIdNUHColumn]));
                }
                set {
                    this[this.tableGetNUHrptDetail.regisIdNUHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Date {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.DateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Date\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.DateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ToDate {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.ToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ToDate\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.ToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstablishmentName {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.EstablishmentNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstablishmentName\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.EstablishmentNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EstablishmentType {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.EstablishmentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EstablishmentType\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.EstablishmentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ADDRESS {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.ADDRESSColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ADDRESS\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.ADDRESSColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string operatedBy {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.operatedByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'operatedBy\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.operatedByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string services {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.servicesColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'services\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.servicesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Pname {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.PnameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Pname\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.PnameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string personInChrageAddress {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.personInChrageAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'personInChrageAddress\' in table \'GetNUHrptDetail\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.personInChrageAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string qualification {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.qualificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'qualification\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.qualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string institution {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.institutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'institution\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.institutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.registrationNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNumber\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.registrationNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Central_StateCouncilName {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.Central_StateCouncilNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Central_StateCouncilName\' in table \'GetNUHrptDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.Central_StateCouncilNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StateName {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.StateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StateName\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.StateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string pinCode {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.pinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'pinCode\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.pinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateFilePath {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.certificateFilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateFilePath\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.certificateFilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string operatedByName {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.operatedByNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'operatedByName\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.operatedByNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string meeRegisNo {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.meeRegisNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'meeRegisNo\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.meeRegisNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certiGendBy {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.certiGendByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certiGendBy\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.certiGendByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateGeneratedDate {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.certificateGeneratedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateGeneratedDate\' in table \'GetNUHrptDetail\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.certificateGeneratedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string applicantMobileNo {
                get {
                    try {
                        return ((string)(this[this.tableGetNUHrptDetail.applicantMobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applicantMobileNo\' in table \'GetNUHrptDetail\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetNUHrptDetail.applicantMobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetNUHrptDetail.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetNUHrptDetail.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDateNull() {
                return this.IsNull(this.tableGetNUHrptDetail.DateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDateNull() {
                this[this.tableGetNUHrptDetail.DateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsToDateNull() {
                return this.IsNull(this.tableGetNUHrptDetail.ToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetToDateNull() {
                this[this.tableGetNUHrptDetail.ToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstablishmentNameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.EstablishmentNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstablishmentNameNull() {
                this[this.tableGetNUHrptDetail.EstablishmentNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEstablishmentTypeNull() {
                return this.IsNull(this.tableGetNUHrptDetail.EstablishmentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEstablishmentTypeNull() {
                this[this.tableGetNUHrptDetail.EstablishmentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsADDRESSNull() {
                return this.IsNull(this.tableGetNUHrptDetail.ADDRESSColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetADDRESSNull() {
                this[this.tableGetNUHrptDetail.ADDRESSColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoperatedByNull() {
                return this.IsNull(this.tableGetNUHrptDetail.operatedByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoperatedByNull() {
                this[this.tableGetNUHrptDetail.operatedByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsservicesNull() {
                return this.IsNull(this.tableGetNUHrptDetail.servicesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetservicesNull() {
                this[this.tableGetNUHrptDetail.servicesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPnameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.PnameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPnameNull() {
                this[this.tableGetNUHrptDetail.PnameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspersonInChrageAddressNull() {
                return this.IsNull(this.tableGetNUHrptDetail.personInChrageAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpersonInChrageAddressNull() {
                this[this.tableGetNUHrptDetail.personInChrageAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsqualificationNull() {
                return this.IsNull(this.tableGetNUHrptDetail.qualificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetqualificationNull() {
                this[this.tableGetNUHrptDetail.qualificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinstitutionNull() {
                return this.IsNull(this.tableGetNUHrptDetail.institutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinstitutionNull() {
                this[this.tableGetNUHrptDetail.institutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNumberNull() {
                return this.IsNull(this.tableGetNUHrptDetail.registrationNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNumberNull() {
                this[this.tableGetNUHrptDetail.registrationNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCentral_StateCouncilNameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.Central_StateCouncilNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCentral_StateCouncilNameNull() {
                this[this.tableGetNUHrptDetail.Central_StateCouncilNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableGetNUHrptDetail.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableGetNUHrptDetail.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistrictNameNull() {
                this[this.tableGetNUHrptDetail.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStateNameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.StateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStateNameNull() {
                this[this.tableGetNUHrptDetail.StateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspinCodeNull() {
                return this.IsNull(this.tableGetNUHrptDetail.pinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpinCodeNull() {
                this[this.tableGetNUHrptDetail.pinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateFilePathNull() {
                return this.IsNull(this.tableGetNUHrptDetail.certificateFilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateFilePathNull() {
                this[this.tableGetNUHrptDetail.certificateFilePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoperatedByNameNull() {
                return this.IsNull(this.tableGetNUHrptDetail.operatedByNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoperatedByNameNull() {
                this[this.tableGetNUHrptDetail.operatedByNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmeeRegisNoNull() {
                return this.IsNull(this.tableGetNUHrptDetail.meeRegisNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmeeRegisNoNull() {
                this[this.tableGetNUHrptDetail.meeRegisNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertiGendByNull() {
                return this.IsNull(this.tableGetNUHrptDetail.certiGendByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertiGendByNull() {
                this[this.tableGetNUHrptDetail.certiGendByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateGeneratedDateNull() {
                return this.IsNull(this.tableGetNUHrptDetail.certificateGeneratedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateGeneratedDateNull() {
                this[this.tableGetNUHrptDetail.certificateGeneratedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetNUHrptDetail.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetNUHrptDetail.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsapplicantMobileNoNull() {
                return this.IsNull(this.tableGetNUHrptDetail.applicantMobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetapplicantMobileNoNull() {
                this[this.tableGetNUHrptDetail.applicantMobileNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_GetCertificateDetialDICRow : global::System.Data.DataRow {
            
            private proc_GetCertificateDetialDICDataTable tableproc_GetCertificateDetialDIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_GetCertificateDetialDICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_GetCertificateDetialDIC = ((proc_GetCertificateDetialDICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'proc_GetCertificateDetialDIC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'proc_GetCertificateDetialDIC\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'proc_GetCertificateDetialDIC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableproc_GetCertificateDetialDIC.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'proc_GetCertificateDetialDIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'proc_GetCertificateDetialDIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string address {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.addressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'address\' in table \'proc_GetCertificateDetialDIC\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.addressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string disabilityType {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.disabilityTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disabilityType\' in table \'proc_GetCertificateDetialDIC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.disabilityTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string disabilityDetail {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.disabilityDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disabilityDetail\' in table \'proc_GetCertificateDetialDIC\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.disabilityDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'proc_GetCertificateDetialDIC\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certiGenDate {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.certiGenDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certiGenDate\' in table \'proc_GetCertificateDetialDIC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.certiGenDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int monthYear {
                get {
                    try {
                        return ((int)(this[this.tableproc_GetCertificateDetialDIC.monthYearColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'monthYear\' in table \'proc_GetCertificateDetialDIC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.monthYearColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public double disabilityPer {
                get {
                    try {
                        return ((double)(this[this.tableproc_GetCertificateDetialDIC.disabilityPerColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disabilityPer\' in table \'proc_GetCertificateDetialDIC\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.disabilityPerColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string markOfIdentification {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.markOfIdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'markOfIdentification\' in table \'proc_GetCertificateDetialDI" +
                                "C\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.markOfIdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdDIC {
                get {
                    return ((long)(this[this.tableproc_GetCertificateDetialDIC.regisIdDICColumn]));
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.regisIdDICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string disabilityPer1 {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.disabilityPer1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'disabilityPer1\' in table \'proc_GetCertificateDetialDIC\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.disabilityPer1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reassName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.reassNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reassName\' in table \'proc_GetCertificateDetialDIC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.reassNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string conditionName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.conditionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'conditionName\' in table \'proc_GetCertificateDetialDIC\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.conditionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string passportsizephoto {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.passportsizephotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'passportsizephoto\' in table \'proc_GetCertificateDetialDIC\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.passportsizephotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string photoIdNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.photoIdNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'photoIdNo\' in table \'proc_GetCertificateDetialDIC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.photoIdNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idProofName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.idProofNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idProofName\' in table \'proc_GetCertificateDetialDIC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.idProofNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certiGendBy {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.certiGendByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certiGendBy\' in table \'proc_GetCertificateDetialDIC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.certiGendByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long inprocessDICId {
                get {
                    return ((long)(this[this.tableproc_GetCertificateDetialDIC.inprocessDICIdColumn]));
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.inprocessDICIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableproc_GetCertificateDetialDIC.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Photo\' in table \'proc_GetCertificateDetialDIC\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long committeeId {
                get {
                    try {
                        return ((long)(this[this.tableproc_GetCertificateDetialDIC.committeeIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'committeeId\' in table \'proc_GetCertificateDetialDIC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.committeeIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int committeeId1 {
                get {
                    try {
                        return ((int)(this[this.tableproc_GetCertificateDetialDIC.committeeId1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'committeeId1\' in table \'proc_GetCertificateDetialDIC\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.committeeId1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int reassPeriod {
                get {
                    try {
                        return ((int)(this[this.tableproc_GetCertificateDetialDIC.reassPeriodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reassPeriod\' in table \'proc_GetCertificateDetialDIC\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.reassPeriodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string reassPeriodType {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetCertificateDetialDIC.reassPeriodTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'reassPeriodType\' in table \'proc_GetCertificateDetialDIC\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetCertificateDetialDIC.reassPeriodTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableproc_GetCertificateDetialDIC.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableproc_GetCertificateDetialDIC.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableproc_GetCertificateDetialDIC.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsageNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetageNull() {
                this[this.tableproc_GetCertificateDetialDIC.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgenderNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgenderNull() {
                this[this.tableproc_GetCertificateDetialDIC.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsaddressNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.addressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetaddressNull() {
                this[this.tableproc_GetCertificateDetialDIC.addressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdisabilityTypeNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.disabilityTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdisabilityTypeNull() {
                this[this.tableproc_GetCertificateDetialDIC.disabilityTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdisabilityDetailNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.disabilityDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdisabilityDetailNull() {
                this[this.tableproc_GetCertificateDetialDIC.disabilityDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableproc_GetCertificateDetialDIC.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertiGenDateNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.certiGenDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertiGenDateNull() {
                this[this.tableproc_GetCertificateDetialDIC.certiGenDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmonthYearNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.monthYearColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmonthYearNull() {
                this[this.tableproc_GetCertificateDetialDIC.monthYearColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdisabilityPerNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.disabilityPerColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdisabilityPerNull() {
                this[this.tableproc_GetCertificateDetialDIC.disabilityPerColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmarkOfIdentificationNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.markOfIdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmarkOfIdentificationNull() {
                this[this.tableproc_GetCertificateDetialDIC.markOfIdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdisabilityPer1Null() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.disabilityPer1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdisabilityPer1Null() {
                this[this.tableproc_GetCertificateDetialDIC.disabilityPer1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreassNameNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.reassNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreassNameNull() {
                this[this.tableproc_GetCertificateDetialDIC.reassNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsconditionNameNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.conditionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetconditionNameNull() {
                this[this.tableproc_GetCertificateDetialDIC.conditionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspassportsizephotoNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.passportsizephotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpassportsizephotoNull() {
                this[this.tableproc_GetCertificateDetialDIC.passportsizephotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsphotoIdNoNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.photoIdNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetphotoIdNoNull() {
                this[this.tableproc_GetCertificateDetialDIC.photoIdNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidProofNameNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.idProofNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidProofNameNull() {
                this[this.tableproc_GetCertificateDetialDIC.idProofNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertiGendByNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.certiGendByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertiGendByNull() {
                this[this.tableproc_GetCertificateDetialDIC.certiGendByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoNull() {
                this[this.tableproc_GetCertificateDetialDIC.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommitteeIdNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.committeeIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommitteeIdNull() {
                this[this.tableproc_GetCertificateDetialDIC.committeeIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommitteeId1Null() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.committeeId1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommitteeId1Null() {
                this[this.tableproc_GetCertificateDetialDIC.committeeId1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreassPeriodNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.reassPeriodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreassPeriodNull() {
                this[this.tableproc_GetCertificateDetialDIC.reassPeriodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsreassPeriodTypeNull() {
                return this.IsNull(this.tableproc_GetCertificateDetialDIC.reassPeriodTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetreassPeriodTypeNull() {
                this[this.tableproc_GetCertificateDetialDIC.reassPeriodTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_getNUHChildRptRow : global::System.Data.DataRow {
            
            private proc_getNUHChildRptDataTable tableproc_getNUHChildRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_getNUHChildRpt = ((proc_getNUHChildRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long nursingDocumentId {
                get {
                    try {
                        return ((long)(this[this.tableproc_getNUHChildRpt.nursingDocumentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'nursingDocumentId\' in table \'proc_getNUHChildRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.nursingDocumentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdNUH {
                get {
                    try {
                        return ((long)(this[this.tableproc_getNUHChildRpt.regisIdNUHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisIdNUH\' in table \'proc_getNUHChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.regisIdNUHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffName\' in table \'proc_getNUHChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffqualification {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffqualificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffqualification\' in table \'proc_getNUHChildRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffqualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffinstitution {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffinstitutionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffinstitution\' in table \'proc_getNUHChildRpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffinstitutionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffRegistrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffRegistrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffRegistrationNo\' in table \'proc_getNUHChildRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffRegistrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffNameOfMCI_SMF {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffNameOfMCI_SMFColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffNameOfMCI_SMF\' in table \'proc_getNUHChildRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffNameOfMCI_SMFColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string filePath {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.filePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'filePath\' in table \'proc_getNUHChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.filePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string stafffatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.stafffatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'stafffatherName\' in table \'proc_getNUHChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.stafffatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string staffRegistrationType {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.staffRegistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'staffRegistrationType\' in table \'proc_getNUHChildRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.staffRegistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string part_fullTime {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildRpt.part_fullTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'part_fullTime\' in table \'proc_getNUHChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildRpt.part_fullTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsnursingDocumentIdNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.nursingDocumentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetnursingDocumentIdNull() {
                this[this.tableproc_getNUHChildRpt.nursingDocumentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdNUHNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.regisIdNUHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdNUHNull() {
                this[this.tableproc_getNUHChildRpt.regisIdNUHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffNameNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffNameNull() {
                this[this.tableproc_getNUHChildRpt.staffNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffqualificationNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffqualificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffqualificationNull() {
                this[this.tableproc_getNUHChildRpt.staffqualificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffinstitutionNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffinstitutionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffinstitutionNull() {
                this[this.tableproc_getNUHChildRpt.staffinstitutionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffRegistrationNoNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffRegistrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffRegistrationNoNull() {
                this[this.tableproc_getNUHChildRpt.staffRegistrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffNameOfMCI_SMFNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffNameOfMCI_SMFColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffNameOfMCI_SMFNull() {
                this[this.tableproc_getNUHChildRpt.staffNameOfMCI_SMFColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfilePathNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.filePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfilePathNull() {
                this[this.tableproc_getNUHChildRpt.filePathColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstafffatherNameNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.stafffatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstafffatherNameNull() {
                this[this.tableproc_getNUHChildRpt.stafffatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsstaffRegistrationTypeNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.staffRegistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetstaffRegistrationTypeNull() {
                this[this.tableproc_getNUHChildRpt.staffRegistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Ispart_fullTimeNull() {
                return this.IsNull(this.tableproc_getNUHChildRpt.part_fullTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setpart_fullTimeNull() {
                this[this.tableproc_getNUHChildRpt.part_fullTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetMERdetailChildRptRow : global::System.Data.DataRow {
            
            private GetMERdetailChildRptDataTable tableGetMERdetailChildRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMERdetailChildRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMERdetailChildRpt = ((GetMERdetailChildRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long Id {
                get {
                    return ((long)(this[this.tableGetMERdetailChildRpt.IdColumn]));
                }
                set {
                    this[this.tableGetMERdetailChildRpt.IdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisByuser {
                get {
                    try {
                        return ((long)(this[this.tableGetMERdetailChildRpt.regisByuserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisByuser\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.regisByuserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisMERId {
                get {
                    try {
                        return ((long)(this[this.tableGetMERdetailChildRpt.regisMERIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisMERId\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.regisMERIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int billId {
                get {
                    try {
                        return ((int)(this[this.tableGetMERdetailChildRpt.billIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billId\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.billIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BillName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailChildRpt.BillNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BillName\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.BillNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string billNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailChildRpt.billNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billNo\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.billNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string billdate {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailChildRpt.billdateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billdate\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.billdateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal billAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMERdetailChildRpt.billAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billAmount\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.billAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string billFilePath {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailChildRpt.billFilePathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'billFilePath\' in table \'GetMERdetailChildRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailChildRpt.billFilePathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisByuserNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.regisByuserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisByuserNull() {
                this[this.tableGetMERdetailChildRpt.regisByuserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisMERIdNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.regisMERIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisMERIdNull() {
                this[this.tableGetMERdetailChildRpt.regisMERIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillIdNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.billIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillIdNull() {
                this[this.tableGetMERdetailChildRpt.billIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBillNameNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.BillNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBillNameNull() {
                this[this.tableGetMERdetailChildRpt.BillNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillNoNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.billNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillNoNull() {
                this[this.tableGetMERdetailChildRpt.billNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbilldateNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.billdateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbilldateNull() {
                this[this.tableGetMERdetailChildRpt.billdateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillAmountNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.billAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillAmountNull() {
                this[this.tableGetMERdetailChildRpt.billAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbillFilePathNull() {
                return this.IsNull(this.tableGetMERdetailChildRpt.billFilePathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbillFilePathNull() {
                this[this.tableGetMERdetailChildRpt.billFilePathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetILCdetailForCertificateRptRow : global::System.Data.DataRow {
            
            private GetILCdetailForCertificateRptDataTable tableGetILCdetailForCertificateRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetILCdetailForCertificateRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetILCdetailForCertificateRpt = ((GetILCdetailForCertificateRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByUser {
                get {
                    try {
                        return ((long)(this[this.tableGetILCdetailForCertificateRpt.regByUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByUser\' in table \'GetILCdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.regByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetILCdetailForCertificateRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdILC {
                get {
                    return ((long)(this[this.tableGetILCdetailForCertificateRpt.regisIdILCColumn]));
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.regisIdILCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'GetILCdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'GetILCdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'GetILCdetailForCertificateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certGenerateByDoc {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.certGenerateByDocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certGenerateByDoc\' in table \'GetILCdetailForCertificateRpt\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.certGenerateByDocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certGenerateByDesig {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.certGenerateByDesigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certGenerateByDesig\' in table \'GetILCdetailForCertificateRp" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.certGenerateByDesigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string identificationMark {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.identificationMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'identificationMark\' in table \'GetILCdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.identificationMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string inspecttionCompeletionDate {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.inspecttionCompeletionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inspecttionCompeletionDate\' in table \'GetILCdetailForCertif" +
                                "icateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.inspecttionCompeletionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string diseaseName {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.diseaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'diseaseName\' in table \'GetILCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.diseaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int bedRest {
                get {
                    try {
                        return ((int)(this[this.tableGetILCdetailForCertificateRpt.bedRestColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'bedRest\' in table \'GetILCdetailForCertificateRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.bedRestColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'GetILCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appliedDate {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.appliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliedDate\' in table \'GetILCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.appliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'GetILCdetailForCertificateRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treatmentFrom {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.treatmentFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentFrom\' in table \'GetILCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.treatmentFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treatmentto {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.treatmenttoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentto\' in table \'GetILCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.treatmenttoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idTypeName {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.idTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idTypeName\' in table \'GetILCdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.idTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string idNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.idNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'idNumber\' in table \'GetILCdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.idNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName1 {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.fullName1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName1\' in table \'GetILCdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.fullName1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string illnessDetail {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.illnessDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'illnessDetail\' in table \'GetILCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.illnessDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string oldCertificateNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetILCdetailForCertificateRpt.oldCertificateNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'oldCertificateNumber\' in table \'GetILCdetailForCertificateR" +
                                "pt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetILCdetailForCertificateRpt.oldCertificateNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByUserNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.regByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByUserNull() {
                this[this.tableGetILCdetailForCertificateRpt.regByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetILCdetailForCertificateRpt.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableGetILCdetailForCertificateRpt.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableGetILCdetailForCertificateRpt.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaNull() {
                this[this.tableGetILCdetailForCertificateRpt.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertGenerateByDocNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.certGenerateByDocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertGenerateByDocNull() {
                this[this.tableGetILCdetailForCertificateRpt.certGenerateByDocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertGenerateByDesigNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.certGenerateByDesigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertGenerateByDesigNull() {
                this[this.tableGetILCdetailForCertificateRpt.certGenerateByDesigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidentificationMarkNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.identificationMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidentificationMarkNull() {
                this[this.tableGetILCdetailForCertificateRpt.identificationMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinspecttionCompeletionDateNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.inspecttionCompeletionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinspecttionCompeletionDateNull() {
                this[this.tableGetILCdetailForCertificateRpt.inspecttionCompeletionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdiseaseNameNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.diseaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdiseaseNameNull() {
                this[this.tableGetILCdetailForCertificateRpt.diseaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbedRestNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.bedRestColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbedRestNull() {
                this[this.tableGetILCdetailForCertificateRpt.bedRestColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableGetILCdetailForCertificateRpt.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappliedDateNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.appliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappliedDateNull() {
                this[this.tableGetILCdetailForCertificateRpt.appliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistrictNameNull() {
                this[this.tableGetILCdetailForCertificateRpt.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmentFromNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.treatmentFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmentFromNull() {
                this[this.tableGetILCdetailForCertificateRpt.treatmentFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmenttoNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.treatmenttoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmenttoNull() {
                this[this.tableGetILCdetailForCertificateRpt.treatmenttoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidTypeNameNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.idTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidTypeNameNull() {
                this[this.tableGetILCdetailForCertificateRpt.idTypeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidNumberNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.idNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidNumberNull() {
                this[this.tableGetILCdetailForCertificateRpt.idNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullName1Null() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.fullName1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullName1Null() {
                this[this.tableGetILCdetailForCertificateRpt.fullName1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsillnessDetailNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.illnessDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetillnessDetailNull() {
                this[this.tableGetILCdetailForCertificateRpt.illnessDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsoldCertificateNumberNull() {
                return this.IsNull(this.tableGetILCdetailForCertificateRpt.oldCertificateNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetoldCertificateNumberNull() {
                this[this.tableGetILCdetailForCertificateRpt.oldCertificateNumberColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetFICdetailForCertificateRptRow : global::System.Data.DataRow {
            
            private GetFICdetailForCertificateRptDataTable tableGetFICdetailForCertificateRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFICdetailForCertificateRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetFICdetailForCertificateRpt = ((GetFICdetailForCertificateRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdFIC {
                get {
                    return ((long)(this[this.tableGetFICdetailForCertificateRpt.regisIdFICColumn]));
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.regisIdFICColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByUser {
                get {
                    try {
                        return ((long)(this[this.tableGetFICdetailForCertificateRpt.regByUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByUser\' in table \'GetFICdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.regByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetFICdetailForCertificateRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'GetFICdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'GetFICdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Area {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.AreaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Area\' in table \'GetFICdetailForCertificateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.AreaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certGenerateByDoc {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.certGenerateByDocColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certGenerateByDoc\' in table \'GetFICdetailForCertificateRpt\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.certGenerateByDocColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certGenerateByDesig {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.certGenerateByDesigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certGenerateByDesig\' in table \'GetFICdetailForCertificateRp" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.certGenerateByDesigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string identificationMark {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.identificationMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'identificationMark\' in table \'GetFICdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.identificationMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string inspecttionCompeletionDate {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.inspecttionCompeletionDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'inspecttionCompeletionDate\' in table \'GetFICdetailForCertif" +
                                "icateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.inspecttionCompeletionDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appliedDate {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.appliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliedDate\' in table \'GetFICdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.appliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'GetFICdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string opdAddress {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.opdAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'opdAddress\' in table \'GetFICdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.opdAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string illnessDetail {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.illnessDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'illnessDetail\' in table \'GetFICdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.illnessDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUDistrict {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.HUDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDistrict\' in table \'GetFICdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.HUDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUAuthorisedPerson {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.HUAuthorisedPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUAuthorisedPerson\' in table \'GetFICdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.HUAuthorisedPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ILCcertificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetFICdetailForCertificateRpt.ILCcertificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ILCcertificateNo\' in table \'GetFICdetailForCertificateRpt\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFICdetailForCertificateRpt.ILCcertificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByUserNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.regByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByUserNull() {
                this[this.tableGetFICdetailForCertificateRpt.regByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetFICdetailForCertificateRpt.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableGetFICdetailForCertificateRpt.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableGetFICdetailForCertificateRpt.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAreaNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.AreaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAreaNull() {
                this[this.tableGetFICdetailForCertificateRpt.AreaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertGenerateByDocNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.certGenerateByDocColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertGenerateByDocNull() {
                this[this.tableGetFICdetailForCertificateRpt.certGenerateByDocColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertGenerateByDesigNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.certGenerateByDesigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertGenerateByDesigNull() {
                this[this.tableGetFICdetailForCertificateRpt.certGenerateByDesigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsidentificationMarkNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.identificationMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetidentificationMarkNull() {
                this[this.tableGetFICdetailForCertificateRpt.identificationMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsinspecttionCompeletionDateNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.inspecttionCompeletionDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetinspecttionCompeletionDateNull() {
                this[this.tableGetFICdetailForCertificateRpt.inspecttionCompeletionDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappliedDateNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.appliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappliedDateNull() {
                this[this.tableGetFICdetailForCertificateRpt.appliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableGetFICdetailForCertificateRpt.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsopdAddressNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.opdAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetopdAddressNull() {
                this[this.tableGetFICdetailForCertificateRpt.opdAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsillnessDetailNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.illnessDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetillnessDetailNull() {
                this[this.tableGetFICdetailForCertificateRpt.illnessDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUDistrictNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.HUDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUDistrictNull() {
                this[this.tableGetFICdetailForCertificateRpt.HUDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUAuthorisedPersonNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.HUAuthorisedPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUAuthorisedPersonNull() {
                this[this.tableGetFICdetailForCertificateRpt.HUAuthorisedPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsILCcertificateNoNull() {
                return this.IsNull(this.tableGetFICdetailForCertificateRpt.ILCcertificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetILCcertificateNoNull() {
                this[this.tableGetFICdetailForCertificateRpt.ILCcertificateNoColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_GetImmuChildCertificateRow : global::System.Data.DataRow {
            
            private proc_GetImmuChildCertificateDataTable tableproc_GetImmuChildCertificate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_GetImmuChildCertificateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_GetImmuChildCertificate = ((proc_GetImmuChildCertificateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdICC {
                get {
                    try {
                        return ((long)(this[this.tableproc_GetImmuChildCertificate.regisIdICCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisIdICC\' in table \'proc_GetImmuChildCertificate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.regisIdICCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string isExsistImmuName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.isExsistImmuNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isExsistImmuName\' in table \'proc_GetImmuChildCertificate\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.isExsistImmuNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dateOfImmunization {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.dateOfImmunizationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dateOfImmunization\' in table \'proc_GetImmuChildCertificate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.dateOfImmunizationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string immuName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.immuNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'immuName\' in table \'proc_GetImmuChildCertificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.immuNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'proc_GetImmuChildCertificate\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'proc_GetImmuChildCertificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'proc_GetImmuChildCertificate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string isGENERATED {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.isGENERATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isGENERATED\' in table \'proc_GetImmuChildCertificate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.isGENERATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateGeneratedDate {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.certificateGeneratedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateGeneratedDate\' in table \'proc_GetImmuChildCertif" +
                                "icate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.certificateGeneratedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'proc_GetImmuChildCertificate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hospitalName {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.hospitalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hospitalName\' in table \'proc_GetImmuChildCertificate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.hospitalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUDistrict {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.HUDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDistrict\' in table \'proc_GetImmuChildCertificate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.HUDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUAuthorisedPerson {
                get {
                    try {
                        return ((string)(this[this.tableproc_GetImmuChildCertificate.HUAuthorisedPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUAuthorisedPerson\' in table \'proc_GetImmuChildCertificate\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_GetImmuChildCertificate.HUAuthorisedPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdICCNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.regisIdICCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdICCNull() {
                this[this.tableproc_GetImmuChildCertificate.regisIdICCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisExsistImmuNameNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.isExsistImmuNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisExsistImmuNameNull() {
                this[this.tableproc_GetImmuChildCertificate.isExsistImmuNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdateOfImmunizationNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.dateOfImmunizationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdateOfImmunizationNull() {
                this[this.tableproc_GetImmuChildCertificate.dateOfImmunizationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsimmuNameNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.immuNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetimmuNameNull() {
                this[this.tableproc_GetImmuChildCertificate.immuNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableproc_GetImmuChildCertificate.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableproc_GetImmuChildCertificate.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableproc_GetImmuChildCertificate.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisGENERATEDNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.isGENERATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisGENERATEDNull() {
                this[this.tableproc_GetImmuChildCertificate.isGENERATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateGeneratedDateNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.certificateGeneratedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateGeneratedDateNull() {
                this[this.tableproc_GetImmuChildCertificate.certificateGeneratedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableproc_GetImmuChildCertificate.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshospitalNameNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.hospitalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethospitalNameNull() {
                this[this.tableproc_GetImmuChildCertificate.hospitalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUDistrictNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.HUDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUDistrictNull() {
                this[this.tableproc_GetImmuChildCertificate.HUDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUAuthorisedPersonNull() {
                return this.IsNull(this.tableproc_GetImmuChildCertificate.HUAuthorisedPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUAuthorisedPersonNull() {
                this[this.tableproc_GetImmuChildCertificate.HUAuthorisedPersonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetMERdetailRptRow : global::System.Data.DataRow {
            
            private GetMERdetailRptDataTable tableGetMERdetailRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMERdetailRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMERdetailRpt = ((GetMERdetailRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdMER {
                get {
                    return ((long)(this[this.tableGetMERdetailRpt.regisIdMERColumn]));
                }
                set {
                    this[this.tableGetMERdetailRpt.regisIdMERColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByUser {
                get {
                    try {
                        return ((long)(this[this.tableGetMERdetailRpt.regByUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByUser\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.regByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string deptName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.deptNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deptName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.deptNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string designation {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.designationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'designation\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.designationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int treatmentId {
                get {
                    try {
                        return ((int)(this[this.tableGetMERdetailRpt.treatmentIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentId\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.treatmentIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string empfullName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.empfullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empfullName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.empfullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string gender {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.genderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'gender\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.genderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int empAge {
                get {
                    try {
                        return ((int)(this[this.tableGetMERdetailRpt.empAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'empAge\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.empAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string father_HusbandName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.father_HusbandNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'father_HusbandName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.father_HusbandNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string officeName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.officeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'officeName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.officeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientdoctorName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patientdoctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientdoctorName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientdoctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal totalAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMERdetailRpt.totalAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'totalAmt\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.totalAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xRayAmt {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMERdetailRpt.xRayAmtColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xRayAmt\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.xRayAmtColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patienthospitalName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patienthospitalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patienthospitalName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patienthospitalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patienttreatmentFromDate {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patienttreatmentFromDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patienttreatmentFromDate\' in table \'GetMERdetailRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patienttreatmentFromDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patienttreatmentToDate {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patienttreatmentToDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patienttreatmentToDate\' in table \'GetMERdetailRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patienttreatmentToDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientdiseaseName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patientdiseaseNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientdiseaseName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientdiseaseNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string postingAddress {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.postingAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postingAddress\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.postingAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int patientage {
                get {
                    try {
                        return ((int)(this[this.tableGetMERdetailRpt.patientageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientage\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientgender {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patientgenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientgender\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientgenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientrelationsWithEmployee {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.patientrelationsWithEmployeeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientrelationsWithEmployee\' in table \'GetMERdetailRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.patientrelationsWithEmployeeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string officeInchargeName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.officeInchargeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'officeInchargeName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.officeInchargeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string hospitalType {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.hospitalTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'hospitalType\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.hospitalTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string isAdvanceTaken {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.isAdvanceTakenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isAdvanceTaken\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.isAdvanceTakenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal advanceAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMERdetailRpt.advanceAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'advanceAmount\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.advanceAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string advanceLetterNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.advanceLetterNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'advanceLetterNo\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.advanceLetterNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string advanceDate {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.advanceDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'advanceDate\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.advanceDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string postingDistrictName {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.postingDistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postingDistrictName\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.postingDistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string postingPinCode {
                get {
                    try {
                        return ((string)(this[this.tableGetMERdetailRpt.postingPinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'postingPinCode\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.postingPinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal xRayAmount {
                get {
                    try {
                        return ((decimal)(this[this.tableGetMERdetailRpt.xRayAmountColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xRayAmount\' in table \'GetMERdetailRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMERdetailRpt.xRayAmountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByUserNull() {
                return this.IsNull(this.tableGetMERdetailRpt.regByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByUserNull() {
                this[this.tableGetMERdetailRpt.regByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetMERdetailRpt.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetMERdetailRpt.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeptNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.deptNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeptNameNull() {
                this[this.tableGetMERdetailRpt.deptNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdesignationNull() {
                return this.IsNull(this.tableGetMERdetailRpt.designationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdesignationNull() {
                this[this.tableGetMERdetailRpt.designationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmentIdNull() {
                return this.IsNull(this.tableGetMERdetailRpt.treatmentIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmentIdNull() {
                this[this.tableGetMERdetailRpt.treatmentIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsempfullNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.empfullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetempfullNameNull() {
                this[this.tableGetMERdetailRpt.empfullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsgenderNull() {
                return this.IsNull(this.tableGetMERdetailRpt.genderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetgenderNull() {
                this[this.tableGetMERdetailRpt.genderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsempAgeNull() {
                return this.IsNull(this.tableGetMERdetailRpt.empAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetempAgeNull() {
                this[this.tableGetMERdetailRpt.empAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Isfather_HusbandNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.father_HusbandNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Setfather_HusbandNameNull() {
                this[this.tableGetMERdetailRpt.father_HusbandNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsofficeNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.officeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetofficeNameNull() {
                this[this.tableGetMERdetailRpt.officeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientdoctorNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientdoctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientdoctorNameNull() {
                this[this.tableGetMERdetailRpt.patientdoctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstotalAmtNull() {
                return this.IsNull(this.tableGetMERdetailRpt.totalAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettotalAmtNull() {
                this[this.tableGetMERdetailRpt.totalAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxRayAmtNull() {
                return this.IsNull(this.tableGetMERdetailRpt.xRayAmtColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxRayAmtNull() {
                this[this.tableGetMERdetailRpt.xRayAmtColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatienthospitalNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patienthospitalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatienthospitalNameNull() {
                this[this.tableGetMERdetailRpt.patienthospitalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatienttreatmentFromDateNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patienttreatmentFromDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatienttreatmentFromDateNull() {
                this[this.tableGetMERdetailRpt.patienttreatmentFromDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatienttreatmentToDateNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patienttreatmentToDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatienttreatmentToDateNull() {
                this[this.tableGetMERdetailRpt.patienttreatmentToDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientdiseaseNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientdiseaseNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientdiseaseNameNull() {
                this[this.tableGetMERdetailRpt.patientdiseaseNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspostingAddressNull() {
                return this.IsNull(this.tableGetMERdetailRpt.postingAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpostingAddressNull() {
                this[this.tableGetMERdetailRpt.postingAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientNameNull() {
                this[this.tableGetMERdetailRpt.patientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientageNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientageNull() {
                this[this.tableGetMERdetailRpt.patientageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientgenderNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientgenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientgenderNull() {
                this[this.tableGetMERdetailRpt.patientgenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientrelationsWithEmployeeNull() {
                return this.IsNull(this.tableGetMERdetailRpt.patientrelationsWithEmployeeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientrelationsWithEmployeeNull() {
                this[this.tableGetMERdetailRpt.patientrelationsWithEmployeeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsofficeInchargeNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.officeInchargeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetofficeInchargeNameNull() {
                this[this.tableGetMERdetailRpt.officeInchargeNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IshospitalTypeNull() {
                return this.IsNull(this.tableGetMERdetailRpt.hospitalTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SethospitalTypeNull() {
                this[this.tableGetMERdetailRpt.hospitalTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisAdvanceTakenNull() {
                return this.IsNull(this.tableGetMERdetailRpt.isAdvanceTakenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisAdvanceTakenNull() {
                this[this.tableGetMERdetailRpt.isAdvanceTakenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsadvanceAmountNull() {
                return this.IsNull(this.tableGetMERdetailRpt.advanceAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetadvanceAmountNull() {
                this[this.tableGetMERdetailRpt.advanceAmountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsadvanceLetterNoNull() {
                return this.IsNull(this.tableGetMERdetailRpt.advanceLetterNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetadvanceLetterNoNull() {
                this[this.tableGetMERdetailRpt.advanceLetterNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsadvanceDateNull() {
                return this.IsNull(this.tableGetMERdetailRpt.advanceDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetadvanceDateNull() {
                this[this.tableGetMERdetailRpt.advanceDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspostingDistrictNameNull() {
                return this.IsNull(this.tableGetMERdetailRpt.postingDistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpostingDistrictNameNull() {
                this[this.tableGetMERdetailRpt.postingDistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspostingPinCodeNull() {
                return this.IsNull(this.tableGetMERdetailRpt.postingPinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpostingPinCodeNull() {
                this[this.tableGetMERdetailRpt.postingPinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxRayAmountNull() {
                return this.IsNull(this.tableGetMERdetailRpt.xRayAmountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxRayAmountNull() {
                this[this.tableGetMERdetailRpt.xRayAmountColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetMLCdetailForCertificateRptRow : global::System.Data.DataRow {
            
            private GetMLCdetailForCertificateRptDataTable tableGetMLCdetailForCertificateRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMLCdetailForCertificateRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMLCdetailForCertificateRpt = ((GetMLCdetailForCertificateRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdMLC {
                get {
                    return ((long)(this[this.tableGetMLCdetailForCertificateRpt.regisIdMLCColumn]));
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.regisIdMLCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByUser {
                get {
                    try {
                        return ((long)(this[this.tableGetMLCdetailForCertificateRpt.regByUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByUser\' in table \'GetMLCdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.regByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetMLCdetailForCertificateRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.patientNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientName\' in table \'GetMLCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.patientNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableGetMLCdetailForCertificateRpt.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'GetMLCdetailForCertificateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientGender {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.patientGenderColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientGender\' in table \'GetMLCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.patientGenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'GetMLCdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string broughtByDesignation {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.broughtByDesignationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'broughtByDesignation\' in table \'GetMLCdetailForCertificateR" +
                                "pt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.broughtByDesignationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime treatmentFrom {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetMLCdetailForCertificateRpt.treatmentFromColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentFrom\' in table \'GetMLCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.treatmentFromColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime treatmentto {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetMLCdetailForCertificateRpt.treatmenttoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentto\' in table \'GetMLCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.treatmenttoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int restFor {
                get {
                    try {
                        return ((int)(this[this.tableGetMLCdetailForCertificateRpt.restForColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'restFor\' in table \'GetMLCdetailForCertificateRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.restForColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treatmentFrom1 {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.treatmentFrom1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentFrom1\' in table \'GetMLCdetailForCertificateRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.treatmentFrom1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string treatmentto1 {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.treatmentto1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'treatmentto1\' in table \'GetMLCdetailForCertificateRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.treatmentto1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'GetMLCdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateGeneratedDate {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.certificateGeneratedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateGeneratedDate\' in table \'GetMLCdetailForCertific" +
                                "ateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.certificateGeneratedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.HUNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUName\' in table \'GetMLCdetailForCertificateRpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.HUNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUDistrict {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.HUDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDistrict\' in table \'GetMLCdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.HUDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUAuthorisedPerson {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.HUAuthorisedPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUAuthorisedPerson\' in table \'GetMLCdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.HUAuthorisedPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string markOfIdentification {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.markOfIdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'markOfIdentification\' in table \'GetMLCdetailForCertificateR" +
                                "pt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.markOfIdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientBroughtBy {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.patientBroughtByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientBroughtBy\' in table \'GetMLCdetailForCertificateRpt\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.patientBroughtByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dtl {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.dtlColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dtl\' in table \'GetMLCdetailForCertificateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.dtlColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int restdays {
                get {
                    try {
                        return ((int)(this[this.tableGetMLCdetailForCertificateRpt.restdaysColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'restdays\' in table \'GetMLCdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.restdaysColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string patientFatherName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.patientFatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'patientFatherName\' in table \'GetMLCdetailForCertificateRpt\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.patientFatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.doctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorName\' in table \'GetMLCdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.doctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string seniorityNo {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.seniorityNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'seniorityNo\' in table \'GetMLCdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.seniorityNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime MLCDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableGetMLCdetailForCertificateRpt.MLCDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLCDate\' in table \'GetMLCdetailForCertificateRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.MLCDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MLCtime {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.MLCtimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLCtime\' in table \'GetMLCdetailForCertificateRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.MLCtimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MLCDate1 {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.MLCDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MLCDate1\' in table \'GetMLCdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.MLCDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string OPDNumber {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.OPDNumberColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'OPDNumber\' in table \'GetMLCdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.OPDNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string forwardtypeName {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCdetailForCertificateRpt.forwardtypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'forwardtypeName\' in table \'GetMLCdetailForCertificateRpt\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCdetailForCertificateRpt.forwardtypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByUserNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.regByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByUserNull() {
                this[this.tableGetMLCdetailForCertificateRpt.regByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetMLCdetailForCertificateRpt.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.patientNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.patientNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsageNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetageNull() {
                this[this.tableGetMLCdetailForCertificateRpt.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientGenderNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.patientGenderColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientGenderNull() {
                this[this.tableGetMLCdetailForCertificateRpt.patientGenderColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsbroughtByDesignationNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.broughtByDesignationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetbroughtByDesignationNull() {
                this[this.tableGetMLCdetailForCertificateRpt.broughtByDesignationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmentFromNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.treatmentFromColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmentFromNull() {
                this[this.tableGetMLCdetailForCertificateRpt.treatmentFromColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmenttoNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.treatmenttoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmenttoNull() {
                this[this.tableGetMLCdetailForCertificateRpt.treatmenttoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrestForNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.restForColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrestForNull() {
                this[this.tableGetMLCdetailForCertificateRpt.restForColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IstreatmentFrom1Null() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.treatmentFrom1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SettreatmentFrom1Null() {
                this[this.tableGetMLCdetailForCertificateRpt.treatmentFrom1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Istreatmentto1Null() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.treatmentto1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void Settreatmentto1Null() {
                this[this.tableGetMLCdetailForCertificateRpt.treatmentto1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableGetMLCdetailForCertificateRpt.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateGeneratedDateNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.certificateGeneratedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateGeneratedDateNull() {
                this[this.tableGetMLCdetailForCertificateRpt.certificateGeneratedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.HUNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.HUNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUDistrictNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.HUDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUDistrictNull() {
                this[this.tableGetMLCdetailForCertificateRpt.HUDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUAuthorisedPersonNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.HUAuthorisedPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUAuthorisedPersonNull() {
                this[this.tableGetMLCdetailForCertificateRpt.HUAuthorisedPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmarkOfIdentificationNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.markOfIdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmarkOfIdentificationNull() {
                this[this.tableGetMLCdetailForCertificateRpt.markOfIdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientBroughtByNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.patientBroughtByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientBroughtByNull() {
                this[this.tableGetMLCdetailForCertificateRpt.patientBroughtByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdtlNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.dtlColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdtlNull() {
                this[this.tableGetMLCdetailForCertificateRpt.dtlColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrestdaysNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.restdaysColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrestdaysNull() {
                this[this.tableGetMLCdetailForCertificateRpt.restdaysColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IspatientFatherNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.patientFatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetpatientFatherNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.patientFatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.doctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.doctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsseniorityNoNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.seniorityNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetseniorityNoNull() {
                this[this.tableGetMLCdetailForCertificateRpt.seniorityNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMLCDateNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.MLCDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMLCDateNull() {
                this[this.tableGetMLCdetailForCertificateRpt.MLCDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMLCtimeNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.MLCtimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMLCtimeNull() {
                this[this.tableGetMLCdetailForCertificateRpt.MLCtimeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMLCDate1Null() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.MLCDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMLCDate1Null() {
                this[this.tableGetMLCdetailForCertificateRpt.MLCDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsOPDNumberNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.OPDNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetOPDNumberNull() {
                this[this.tableGetMLCdetailForCertificateRpt.OPDNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsforwardtypeNameNull() {
                return this.IsNull(this.tableGetMLCdetailForCertificateRpt.forwardtypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetforwardtypeNameNull() {
                this[this.tableGetMLCdetailForCertificateRpt.forwardtypeNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetMLCCHILDdetailForCertificateRptRow : global::System.Data.DataRow {
            
            private GetMLCCHILDdetailForCertificateRptDataTable tableGetMLCCHILDdetailForCertificateRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetMLCCHILDdetailForCertificateRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetMLCCHILDdetailForCertificateRpt = ((GetMLCCHILDdetailForCertificateRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long EnquiryID {
                get {
                    return ((long)(this[this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryIDColumn]));
                }
                set {
                    this[this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisId {
                get {
                    try {
                        return ((long)(this[this.tableGetMLCCHILDdetailForCertificateRpt.regisIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisId\' in table \'GetMLCCHILDdetailForCertificateRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCCHILDdetailForCertificateRpt.regisIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisByuser {
                get {
                    try {
                        return ((long)(this[this.tableGetMLCCHILDdetailForCertificateRpt.regisByuserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisByuser\' in table \'GetMLCCHILDdetailForCertificateRpt\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCCHILDdetailForCertificateRpt.regisByuserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string EnquiryDetails {
                get {
                    try {
                        return ((string)(this[this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryDetailsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'EnquiryDetails\' in table \'GetMLCCHILDdetailForCertificateRp" +
                                "t\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryDetailsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdNull() {
                return this.IsNull(this.tableGetMLCCHILDdetailForCertificateRpt.regisIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdNull() {
                this[this.tableGetMLCCHILDdetailForCertificateRpt.regisIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisByuserNull() {
                return this.IsNull(this.tableGetMLCCHILDdetailForCertificateRpt.regisByuserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisByuserNull() {
                this[this.tableGetMLCCHILDdetailForCertificateRpt.regisByuserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEnquiryDetailsNull() {
                return this.IsNull(this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryDetailsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEnquiryDetailsNull() {
                this[this.tableGetMLCCHILDdetailForCertificateRpt.EnquiryDetailsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_rptIMC_CertificateRow : global::System.Data.DataRow {
            
            private proc_rptIMC_CertificateDataTable tableproc_rptIMC_Certificate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptIMC_CertificateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_rptIMC_Certificate = ((proc_rptIMC_CertificateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdIMC {
                get {
                    try {
                        return ((long)(this[this.tableproc_rptIMC_Certificate.regisIdIMCColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisIdIMC\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.regisIdIMCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int vaccineId {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptIMC_Certificate.vaccineIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vaccineId\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.vaccineIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string vaccineName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.vaccineNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'vaccineName\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.vaccineNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string isGENERATED {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.isGENERATEDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'isGENERATED\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.isGENERATEDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime ImmunizationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableproc_rptIMC_Certificate.ImmunizationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImmunizationDate\' in table \'proc_rptIMC_Certificate\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.ImmunizationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'proc_rptIMC_Certificate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'proc_rptIMC_Certificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string cerificateGeneratedate {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.cerificateGeneratedateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'cerificateGeneratedate\' in table \'proc_rptIMC_Certificate\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.cerificateGeneratedateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ImmunizationDate1 {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.ImmunizationDate1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ImmunizationDate1\' in table \'proc_rptIMC_Certificate\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.ImmunizationDate1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.HUNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUName\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.HUNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUDistrict {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.HUDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDistrict\' in table \'proc_rptIMC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.HUDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUAuthorisedPerson {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptIMC_Certificate.HUAuthorisedPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUAuthorisedPerson\' in table \'proc_rptIMC_Certificate\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptIMC_Certificate.HUAuthorisedPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdIMCNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.regisIdIMCColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdIMCNull() {
                this[this.tableproc_rptIMC_Certificate.regisIdIMCColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvaccineIdNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.vaccineIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvaccineIdNull() {
                this[this.tableproc_rptIMC_Certificate.vaccineIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsvaccineNameNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.vaccineNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetvaccineNameNull() {
                this[this.tableproc_rptIMC_Certificate.vaccineNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsisGENERATEDNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.isGENERATEDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetisGENERATEDNull() {
                this[this.tableproc_rptIMC_Certificate.isGENERATEDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImmunizationDateNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.ImmunizationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImmunizationDateNull() {
                this[this.tableproc_rptIMC_Certificate.ImmunizationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableproc_rptIMC_Certificate.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableproc_rptIMC_Certificate.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableproc_rptIMC_Certificate.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableproc_rptIMC_Certificate.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscerificateGeneratedateNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.cerificateGeneratedateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcerificateGeneratedateNull() {
                this[this.tableproc_rptIMC_Certificate.cerificateGeneratedateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsImmunizationDate1Null() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.ImmunizationDate1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetImmunizationDate1Null() {
                this[this.tableproc_rptIMC_Certificate.ImmunizationDate1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUNameNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.HUNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUNameNull() {
                this[this.tableproc_rptIMC_Certificate.HUNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUDistrictNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.HUDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUDistrictNull() {
                this[this.tableproc_rptIMC_Certificate.HUDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUAuthorisedPersonNull() {
                return this.IsNull(this.tableproc_rptIMC_Certificate.HUAuthorisedPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUAuthorisedPersonNull() {
                this[this.tableproc_rptIMC_Certificate.HUAuthorisedPersonColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetDECdetailForCertificateRptRow : global::System.Data.DataRow {
            
            private GetDECdetailForCertificateRptDataTable tableGetDECdetailForCertificateRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetDECdetailForCertificateRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetDECdetailForCertificateRpt = ((GetDECdetailForCertificateRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdDEC {
                get {
                    return ((long)(this[this.tableGetDECdetailForCertificateRpt.regisIdDECColumn]));
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.regisIdDECColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByUser {
                get {
                    try {
                        return ((long)(this[this.tableGetDECdetailForCertificateRpt.regByUserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByUser\' in table \'GetDECdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.regByUserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'GetDECdetailForCertificateRpt\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'GetDECdetailForCertificateRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateGeneratedDate {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.certificateGeneratedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateGeneratedDate\' in table \'GetDECdetailForCertific" +
                                "ateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.certificateGeneratedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string deathPersonName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.deathPersonNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deathPersonName\' in table \'GetDECdetailForCertificateRpt\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.deathPersonNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fullName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.fullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fullName\' in table \'GetDECdetailForCertificateRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.fullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dod {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.dodColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dod\' in table \'GetDECdetailForCertificateRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.dodColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regByuser {
                get {
                    try {
                        return ((long)(this[this.tableGetDECdetailForCertificateRpt.regByuserColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regByuser\' in table \'GetDECdetailForCertificateRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.regByuserColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.HUNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUName\' in table \'GetDECdetailForCertificateRpt\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.HUNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUDistrict {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.HUDistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUDistrict\' in table \'GetDECdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.HUDistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HUAuthorisedPerson {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.HUAuthorisedPersonColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HUAuthorisedPerson\' in table \'GetDECdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.HUAuthorisedPersonColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fatherName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.fatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fatherName\' in table \'GetDECdetailForCertificateRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.fatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string deathPersonAddress {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.deathPersonAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'deathPersonAddress\' in table \'GetDECdetailForCertificateRpt" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.deathPersonAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string relationName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.relationNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'relationName\' in table \'GetDECdetailForCertificateRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.relationNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string fathersName {
                get {
                    try {
                        return ((string)(this[this.tableGetDECdetailForCertificateRpt.fathersNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'fathersName\' in table \'GetDECdetailForCertificateRpt\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetDECdetailForCertificateRpt.fathersNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByUserNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.regByUserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByUserNull() {
                this[this.tableGetDECdetailForCertificateRpt.regByUserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableGetDECdetailForCertificateRpt.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableGetDECdetailForCertificateRpt.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateGeneratedDateNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.certificateGeneratedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateGeneratedDateNull() {
                this[this.tableGetDECdetailForCertificateRpt.certificateGeneratedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeathPersonNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.deathPersonNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeathPersonNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.deathPersonNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfullNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.fullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfullNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.fullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdodNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.dodColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdodNull() {
                this[this.tableGetDECdetailForCertificateRpt.dodColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregByuserNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.regByuserColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregByuserNull() {
                this[this.tableGetDECdetailForCertificateRpt.regByuserColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.HUNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.HUNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUDistrictNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.HUDistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUDistrictNull() {
                this[this.tableGetDECdetailForCertificateRpt.HUDistrictColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHUAuthorisedPersonNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.HUAuthorisedPersonColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHUAuthorisedPersonNull() {
                this[this.tableGetDECdetailForCertificateRpt.HUAuthorisedPersonColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfatherNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.fatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfatherNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.fatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdeathPersonAddressNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.deathPersonAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdeathPersonAddressNull() {
                this[this.tableGetDECdetailForCertificateRpt.deathPersonAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsrelationNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.relationNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetrelationNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.relationNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsfathersNameNull() {
                return this.IsNull(this.tableGetDECdetailForCertificateRpt.fathersNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetfathersNameNull() {
                this[this.tableGetDECdetailForCertificateRpt.fathersNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_getNUHChildDOCRptRow : global::System.Data.DataRow {
            
            private proc_getNUHChildDOCRptDataTable tableproc_getNUHChildDOCRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildDOCRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_getNUHChildDOCRpt = ((proc_getNUHChildDOCRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long doctorId {
                get {
                    return ((long)(this[this.tableproc_getNUHChildDOCRpt.doctorIdColumn]));
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisNUHId {
                get {
                    try {
                        return ((long)(this[this.tableproc_getNUHChildDOCRpt.regisNUHIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisNUHId\' in table \'proc_getNUHChildDOCRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.regisNUHIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorName\' in table \'proc_getNUHChildDOCRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorFathersName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorFathersNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorFathersName\' in table \'proc_getNUHChildDOCRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorFathersNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorQualification {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorQualificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorQualification\' in table \'proc_getNUHChildDOCRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorQualificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string NameofFoundation {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.NameofFoundationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'NameofFoundation\' in table \'proc_getNUHChildDOCRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.NameofFoundationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorregistrationType {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorregistrationTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorregistrationType\' in table \'proc_getNUHChildDOCRpt\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorregistrationTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorregistrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorregistrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorregistrationNo\' in table \'proc_getNUHChildDOCRpt\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorregistrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string doctorPart_FullTime {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildDOCRpt.doctorPart_FullTimeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'doctorPart_FullTime\' in table \'proc_getNUHChildDOCRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildDOCRpt.doctorPart_FullTimeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisNUHIdNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.regisNUHIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisNUHIdNull() {
                this[this.tableproc_getNUHChildDOCRpt.regisNUHIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorNameNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorNameNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorFathersNameNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorFathersNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorFathersNameNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorFathersNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorQualificationNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorQualificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorQualificationNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorQualificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNameofFoundationNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.NameofFoundationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNameofFoundationNull() {
                this[this.tableproc_getNUHChildDOCRpt.NameofFoundationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorregistrationTypeNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorregistrationTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorregistrationTypeNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorregistrationTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorregistrationNoNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorregistrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorregistrationNoNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorregistrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdoctorPart_FullTimeNull() {
                return this.IsNull(this.tableproc_getNUHChildDOCRpt.doctorPart_FullTimeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdoctorPart_FullTimeNull() {
                this[this.tableproc_getNUHChildDOCRpt.doctorPart_FullTimeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_getNUHChildOwnerRptRow : global::System.Data.DataRow {
            
            private proc_getNUHChildOwnerRptDataTable tableproc_getNUHChildOwnerRpt;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_getNUHChildOwnerRptRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_getNUHChildOwnerRpt = ((proc_getNUHChildOwnerRptDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdNUH {
                get {
                    try {
                        return ((long)(this[this.tableproc_getNUHChildOwnerRpt.regisIdNUHColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'regisIdNUH\' in table \'proc_getNUHChildOwnerRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.regisIdNUHColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerName\' in table \'proc_getNUHChildOwnerRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ownerAge {
                get {
                    try {
                        return ((int)(this[this.tableproc_getNUHChildOwnerRpt.ownerAgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerAge\' in table \'proc_getNUHChildOwnerRpt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerAgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerFatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerFatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerFatherName\' in table \'proc_getNUHChildOwnerRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerFatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerMobileNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerMobileNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerMobileNo\' in table \'proc_getNUHChildOwnerRpt\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerMobileNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerEmailId {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerEmailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerEmailId\' in table \'proc_getNUHChildOwnerRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerEmailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerAddress {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerAddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerAddress\' in table \'proc_getNUHChildOwnerRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ownerStateId {
                get {
                    try {
                        return ((int)(this[this.tableproc_getNUHChildOwnerRpt.ownerStateIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerStateId\' in table \'proc_getNUHChildOwnerRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerStateIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerStateName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerStateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerStateName\' in table \'proc_getNUHChildOwnerRpt\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerStateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ownerDistrictId {
                get {
                    try {
                        return ((int)(this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerDistrictId\' in table \'proc_getNUHChildOwnerRpt\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerDistrictName {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerDistrictName\' in table \'proc_getNUHChildOwnerRpt\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ownerPincode {
                get {
                    try {
                        return ((string)(this[this.tableproc_getNUHChildOwnerRpt.ownerPincodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ownerPincode\' in table \'proc_getNUHChildOwnerRpt\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_getNUHChildOwnerRpt.ownerPincodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregisIdNUHNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.regisIdNUHColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregisIdNUHNull() {
                this[this.tableproc_getNUHChildOwnerRpt.regisIdNUHColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerNameNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerNameNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerAgeNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerAgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerAgeNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerAgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerFatherNameNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerFatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerFatherNameNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerFatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerMobileNoNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerMobileNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerMobileNoNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerMobileNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerEmailIdNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerEmailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerEmailIdNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerEmailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerAddressNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerAddressNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerStateIdNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerStateIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerStateIdNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerStateIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerStateNameNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerStateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerStateNameNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerStateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerDistrictIdNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerDistrictIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerDistrictIdNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerDistrictNameNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerDistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerDistrictNameNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerDistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsownerPincodeNull() {
                return this.IsNull(this.tableproc_getNUHChildOwnerRpt.ownerPincodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetownerPincodeNull() {
                this[this.tableproc_getNUHChildOwnerRpt.ownerPincodeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Proc_GetCommitteeMemberRow : global::System.Data.DataRow {
            
            private Proc_GetCommitteeMemberDataTable tableProc_GetCommitteeMember;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Proc_GetCommitteeMemberRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProc_GetCommitteeMember = ((Proc_GetCommitteeMemberDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemName {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMember.commMemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemName\' in table \'Proc_GetCommitteeMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMember.commMemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemDesig {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMember.commMemDesigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemDesig\' in table \'Proc_GetCommitteeMember\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMember.commMemDesigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemDept {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMember.commMemDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemDept\' in table \'Proc_GetCommitteeMember\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMember.commMemDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemNameNull() {
                return this.IsNull(this.tableProc_GetCommitteeMember.commMemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemNameNull() {
                this[this.tableProc_GetCommitteeMember.commMemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemDesigNull() {
                return this.IsNull(this.tableProc_GetCommitteeMember.commMemDesigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemDesigNull() {
                this[this.tableProc_GetCommitteeMember.commMemDesigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemDeptNull() {
                return this.IsNull(this.tableProc_GetCommitteeMember.commMemDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemDeptNull() {
                this[this.tableProc_GetCommitteeMember.commMemDeptColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_rptAGC_CertificateRow : global::System.Data.DataRow {
            
            private proc_rptAGC_CertificateDataTable tableproc_rptAGC_Certificate;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptAGC_CertificateRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_rptAGC_Certificate = ((proc_rptAGC_CertificateDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdAGC {
                get {
                    return ((long)(this[this.tableproc_rptAGC_Certificate.regisIdAGCColumn]));
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.regisIdAGCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'proc_rptAGC_Certificate\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certiGendBy {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.certiGendByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certiGendBy\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.certiGendByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long inprocessAGCId {
                get {
                    return ((long)(this[this.tableproc_rptAGC_Certificate.inprocessAGCIdColumn]));
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.inprocessAGCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susName\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susFatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susFatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susFatherName\' in table \'proc_rptAGC_Certificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susFatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appliedDate {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.appliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliedDate\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.appliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_Certificate.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'proc_rptAGC_Certificate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appStatus {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_Certificate.appStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appStatus\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.appStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'proc_rptAGC_Certificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susaddress {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susaddress\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susstateName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susstateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susstateName\' in table \'proc_rptAGC_Certificate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susstateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susdistrictName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susdistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susdistrictName\' in table \'proc_rptAGC_Certificate\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susdistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string suspinCode {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.suspinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suspinCode\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.suspinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string orderDetail {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.orderDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderDetail\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.orderDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int orderNo {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_Certificate.orderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderNo\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.orderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xRayPlateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.xRayPlateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xRayPlateNo\' in table \'proc_rptAGC_Certificate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.xRayPlateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dentalPlateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.dentalPlateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dentalPlateNo\' in table \'proc_rptAGC_Certificate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.dentalPlateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string markOfIdentification {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.markOfIdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'markOfIdentification\' in table \'proc_rptAGC_Certificate\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.markOfIdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susphotoFile {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_Certificate.susphotoFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susphotoFile\' in table \'proc_rptAGC_Certificate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_Certificate.susphotoFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableproc_rptAGC_Certificate.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertiGendByNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.certiGendByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertiGendByNull() {
                this[this.tableproc_rptAGC_Certificate.certiGendByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusNameNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusNameNull() {
                this[this.tableproc_rptAGC_Certificate.susNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusFatherNameNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susFatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusFatherNameNull() {
                this[this.tableproc_rptAGC_Certificate.susFatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappliedDateNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.appliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappliedDateNull() {
                this[this.tableproc_rptAGC_Certificate.appliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsageNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetageNull() {
                this[this.tableproc_rptAGC_Certificate.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistrictNameNull() {
                this[this.tableproc_rptAGC_Certificate.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappStatusNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.appStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappStatusNull() {
                this[this.tableproc_rptAGC_Certificate.appStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableproc_rptAGC_Certificate.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusaddressNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusaddressNull() {
                this[this.tableproc_rptAGC_Certificate.susaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusstateNameNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susstateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusstateNameNull() {
                this[this.tableproc_rptAGC_Certificate.susstateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusdistrictNameNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susdistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusdistrictNameNull() {
                this[this.tableproc_rptAGC_Certificate.susdistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssuspinCodeNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.suspinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsuspinCodeNull() {
                this[this.tableproc_rptAGC_Certificate.suspinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorderDetailNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.orderDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorderDetailNull() {
                this[this.tableproc_rptAGC_Certificate.orderDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorderNoNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.orderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorderNoNull() {
                this[this.tableproc_rptAGC_Certificate.orderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxRayPlateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.xRayPlateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxRayPlateNoNull() {
                this[this.tableproc_rptAGC_Certificate.xRayPlateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdentalPlateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.dentalPlateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdentalPlateNoNull() {
                this[this.tableproc_rptAGC_Certificate.dentalPlateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmarkOfIdentificationNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.markOfIdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmarkOfIdentificationNull() {
                this[this.tableproc_rptAGC_Certificate.markOfIdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusphotoFileNull() {
                return this.IsNull(this.tableproc_rptAGC_Certificate.susphotoFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusphotoFileNull() {
                this[this.tableproc_rptAGC_Certificate.susphotoFileColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class proc_rptAGC_CertificateReportRow : global::System.Data.DataRow {
            
            private proc_rptAGC_CertificateReportDataTable tableproc_rptAGC_CertificateReport;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal proc_rptAGC_CertificateReportRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableproc_rptAGC_CertificateReport = ((proc_rptAGC_CertificateReportDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long regisIdAGC {
                get {
                    return ((long)(this[this.tableproc_rptAGC_CertificateReport.regisIdAGCColumn]));
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.regisIdAGCColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string registrationNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.registrationNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'registrationNo\' in table \'proc_rptAGC_CertificateReport\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.registrationNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certiGendBy {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.certiGendByColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certiGendBy\' in table \'proc_rptAGC_CertificateReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.certiGendByColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long inprocessAGCId {
                get {
                    return ((long)(this[this.tableproc_rptAGC_CertificateReport.inprocessAGCIdColumn]));
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.inprocessAGCIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susName\' in table \'proc_rptAGC_CertificateReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susFatherName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susFatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susFatherName\' in table \'proc_rptAGC_CertificateReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susFatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string appliedDate {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.appliedDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appliedDate\' in table \'proc_rptAGC_CertificateReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.appliedDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int age {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_CertificateReport.ageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'age\' in table \'proc_rptAGC_CertificateReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.ageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DistrictName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.DistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DistrictName\' in table \'proc_rptAGC_CertificateReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.DistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int appStatus {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_CertificateReport.appStatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'appStatus\' in table \'proc_rptAGC_CertificateReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.appStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string certificateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.certificateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'certificateNo\' in table \'proc_rptAGC_CertificateReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.certificateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susaddress {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susaddressColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susaddress\' in table \'proc_rptAGC_CertificateReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susaddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susstateName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susstateNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susstateName\' in table \'proc_rptAGC_CertificateReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susstateNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susdistrictName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susdistrictNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susdistrictName\' in table \'proc_rptAGC_CertificateReport\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susdistrictNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string suspinCode {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.suspinCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'suspinCode\' in table \'proc_rptAGC_CertificateReport\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.suspinCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string orderDetail {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.orderDetailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderDetail\' in table \'proc_rptAGC_CertificateReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.orderDetailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int orderNo {
                get {
                    try {
                        return ((int)(this[this.tableproc_rptAGC_CertificateReport.orderNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderNo\' in table \'proc_rptAGC_CertificateReport\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.orderNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string xRayPlateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.xRayPlateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'xRayPlateNo\' in table \'proc_rptAGC_CertificateReport\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.xRayPlateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string dentalPlateNo {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.dentalPlateNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'dentalPlateNo\' in table \'proc_rptAGC_CertificateReport\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.dentalPlateNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string markOfIdentification {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.markOfIdentificationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'markOfIdentification\' in table \'proc_rptAGC_CertificateRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.markOfIdentificationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string susphotoFile {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.susphotoFileColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'susphotoFile\' in table \'proc_rptAGC_CertificateReport\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.susphotoFileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public byte[] Photo {
                get {
                    try {
                        return ((byte[])(this[this.tableproc_rptAGC_CertificateReport.PhotoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Photo\' in table \'proc_rptAGC_CertificateReport\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.PhotoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string orderDate {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.orderDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'orderDate\' in table \'proc_rptAGC_CertificateReport\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.orderDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string applicantSubTypeName {
                get {
                    try {
                        return ((string)(this[this.tableproc_rptAGC_CertificateReport.applicantSubTypeNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'applicantSubTypeName\' in table \'proc_rptAGC_CertificateRepo" +
                                "rt\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableproc_rptAGC_CertificateReport.applicantSubTypeNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsregistrationNoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.registrationNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetregistrationNoNull() {
                this[this.tableproc_rptAGC_CertificateReport.registrationNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertiGendByNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.certiGendByColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertiGendByNull() {
                this[this.tableproc_rptAGC_CertificateReport.certiGendByColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.susNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusFatherNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susFatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusFatherNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.susFatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappliedDateNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.appliedDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappliedDateNull() {
                this[this.tableproc_rptAGC_CertificateReport.appliedDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsageNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.ageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetageNull() {
                this[this.tableproc_rptAGC_CertificateReport.ageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDistrictNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.DistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDistrictNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.DistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsappStatusNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.appStatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetappStatusNull() {
                this[this.tableproc_rptAGC_CertificateReport.appStatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscertificateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.certificateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcertificateNoNull() {
                this[this.tableproc_rptAGC_CertificateReport.certificateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusaddressNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susaddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusaddressNull() {
                this[this.tableproc_rptAGC_CertificateReport.susaddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusstateNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susstateNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusstateNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.susstateNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusdistrictNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susdistrictNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusdistrictNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.susdistrictNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssuspinCodeNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.suspinCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsuspinCodeNull() {
                this[this.tableproc_rptAGC_CertificateReport.suspinCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorderDetailNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.orderDetailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorderDetailNull() {
                this[this.tableproc_rptAGC_CertificateReport.orderDetailColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorderNoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.orderNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorderNoNull() {
                this[this.tableproc_rptAGC_CertificateReport.orderNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsxRayPlateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.xRayPlateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetxRayPlateNoNull() {
                this[this.tableproc_rptAGC_CertificateReport.xRayPlateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsdentalPlateNoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.dentalPlateNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetdentalPlateNoNull() {
                this[this.tableproc_rptAGC_CertificateReport.dentalPlateNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsmarkOfIdentificationNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.markOfIdentificationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetmarkOfIdentificationNull() {
                this[this.tableproc_rptAGC_CertificateReport.markOfIdentificationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IssusphotoFileNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.susphotoFileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetsusphotoFileNull() {
                this[this.tableproc_rptAGC_CertificateReport.susphotoFileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.PhotoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoNull() {
                this[this.tableproc_rptAGC_CertificateReport.PhotoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsorderDateNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.orderDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetorderDateNull() {
                this[this.tableproc_rptAGC_CertificateReport.orderDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsapplicantSubTypeNameNull() {
                return this.IsNull(this.tableproc_rptAGC_CertificateReport.applicantSubTypeNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetapplicantSubTypeNameNull() {
                this[this.tableproc_rptAGC_CertificateReport.applicantSubTypeNameColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class Proc_GetCommitteeMemberDICRow : global::System.Data.DataRow {
            
            private Proc_GetCommitteeMemberDICDataTable tableProc_GetCommitteeMemberDIC;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal Proc_GetCommitteeMemberDICRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProc_GetCommitteeMemberDIC = ((Proc_GetCommitteeMemberDICDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemName {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMemberDIC.commMemNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemName\' in table \'Proc_GetCommitteeMemberDIC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMemberDIC.commMemNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemDesig {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMemberDIC.commMemDesigColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemDesig\' in table \'Proc_GetCommitteeMemberDIC\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMemberDIC.commMemDesigColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string commMemDept {
                get {
                    try {
                        return ((string)(this[this.tableProc_GetCommitteeMemberDIC.commMemDeptColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'commMemDept\' in table \'Proc_GetCommitteeMemberDIC\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableProc_GetCommitteeMemberDIC.commMemDeptColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemNameNull() {
                return this.IsNull(this.tableProc_GetCommitteeMemberDIC.commMemNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemNameNull() {
                this[this.tableProc_GetCommitteeMemberDIC.commMemNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemDesigNull() {
                return this.IsNull(this.tableProc_GetCommitteeMemberDIC.commMemDesigColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemDesigNull() {
                this[this.tableProc_GetCommitteeMemberDIC.commMemDesigColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IscommMemDeptNull() {
                return this.IsNull(this.tableProc_GetCommitteeMemberDIC.commMemDeptColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetcommMemDeptNull() {
                this[this.tableProc_GetCommitteeMemberDIC.commMemDeptColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_getNUHChildRowChangeEvent : global::System.EventArgs {
            
            private proc_getNUHChildRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRowChangeEvent(proc_getNUHChildRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetNUHrptDetailRowChangeEvent : global::System.EventArgs {
            
            private GetNUHrptDetailRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRowChangeEvent(GetNUHrptDetailRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetNUHrptDetailRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_GetCertificateDetialDICRowChangeEvent : global::System.EventArgs {
            
            private proc_GetCertificateDetialDICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICRowChangeEvent(proc_GetCertificateDetialDICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetCertificateDetialDICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_getNUHChildRptRowChangeEvent : global::System.EventArgs {
            
            private proc_getNUHChildRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptRowChangeEvent(proc_getNUHChildRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetMERdetailChildRptRowChangeEvent : global::System.EventArgs {
            
            private GetMERdetailChildRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRowChangeEvent(GetMERdetailChildRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailChildRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetILCdetailForCertificateRptRowChangeEvent : global::System.EventArgs {
            
            private GetILCdetailForCertificateRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRowChangeEvent(GetILCdetailForCertificateRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetILCdetailForCertificateRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetFICdetailForCertificateRptRowChangeEvent : global::System.EventArgs {
            
            private GetFICdetailForCertificateRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRowChangeEvent(GetFICdetailForCertificateRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFICdetailForCertificateRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_GetImmuChildCertificateRowChangeEvent : global::System.EventArgs {
            
            private proc_GetImmuChildCertificateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateRowChangeEvent(proc_GetImmuChildCertificateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_GetImmuChildCertificateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetMERdetailRptRowChangeEvent : global::System.EventArgs {
            
            private GetMERdetailRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRowChangeEvent(GetMERdetailRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMERdetailRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetMLCdetailForCertificateRptRowChangeEvent : global::System.EventArgs {
            
            private GetMLCdetailForCertificateRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRowChangeEvent(GetMLCdetailForCertificateRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCdetailForCertificateRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetMLCCHILDdetailForCertificateRptRowChangeEvent : global::System.EventArgs {
            
            private GetMLCCHILDdetailForCertificateRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRowChangeEvent(GetMLCCHILDdetailForCertificateRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetMLCCHILDdetailForCertificateRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_rptIMC_CertificateRowChangeEvent : global::System.EventArgs {
            
            private proc_rptIMC_CertificateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateRowChangeEvent(proc_rptIMC_CertificateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptIMC_CertificateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetDECdetailForCertificateRptRowChangeEvent : global::System.EventArgs {
            
            private GetDECdetailForCertificateRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRowChangeEvent(GetDECdetailForCertificateRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetDECdetailForCertificateRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_getNUHChildDOCRptRowChangeEvent : global::System.EventArgs {
            
            private proc_getNUHChildDOCRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRowChangeEvent(proc_getNUHChildDOCRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildDOCRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_getNUHChildOwnerRptRowChangeEvent : global::System.EventArgs {
            
            private proc_getNUHChildOwnerRptRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptRowChangeEvent(proc_getNUHChildOwnerRptRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_getNUHChildOwnerRptRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Proc_GetCommitteeMemberRowChangeEvent : global::System.EventArgs {
            
            private Proc_GetCommitteeMemberRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberRowChangeEvent(Proc_GetCommitteeMemberRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_rptAGC_CertificateRowChangeEvent : global::System.EventArgs {
            
            private proc_rptAGC_CertificateRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRowChangeEvent(proc_rptAGC_CertificateRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class proc_rptAGC_CertificateReportRowChangeEvent : global::System.EventArgs {
            
            private proc_rptAGC_CertificateReportRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRowChangeEvent(proc_rptAGC_CertificateReportRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public proc_rptAGC_CertificateReportRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class Proc_GetCommitteeMemberDICRowChangeEvent : global::System.EventArgs {
            
            private Proc_GetCommitteeMemberDICRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICRowChangeEvent(Proc_GetCommitteeMemberDICRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public Proc_GetCommitteeMemberDICRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace CCSHealthFamilyWelfareDept.DataSet.DataSetNUHTableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_getNUHChildTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_getNUHChildTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_getNUHChild";
            tableMapping.ColumnMappings.Add("nursingDocumentId", "nursingDocumentId");
            tableMapping.ColumnMappings.Add("regisIdNUH", "regisIdNUH");
            tableMapping.ColumnMappings.Add("staffName", "staffName");
            tableMapping.ColumnMappings.Add("staffqualification", "staffqualification");
            tableMapping.ColumnMappings.Add("staffinstitution", "staffinstitution");
            tableMapping.ColumnMappings.Add("staffRegistrationNo", "staffRegistrationNo");
            tableMapping.ColumnMappings.Add("staffNameOfMCI_SMF", "staffNameOfMCI_SMF");
            tableMapping.ColumnMappings.Add("filePath", "filePath");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_getNUHChild";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.proc_getNUHChildDataTable dataTable, global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_getNUHChildDataTable GetData(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_getNUHChildDataTable dataTable = new DataSetNUH.proc_getNUHChildDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetNUHrptDetailTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetNUHrptDetailTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetNUHrptDetail";
            tableMapping.ColumnMappings.Add("regisIdNUH", "regisIdNUH");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("Date", "Date");
            tableMapping.ColumnMappings.Add("ToDate", "ToDate");
            tableMapping.ColumnMappings.Add("EstablishmentName", "EstablishmentName");
            tableMapping.ColumnMappings.Add("EstablishmentType", "EstablishmentType");
            tableMapping.ColumnMappings.Add("ADDRESS", "ADDRESS");
            tableMapping.ColumnMappings.Add("operatedBy", "operatedBy");
            tableMapping.ColumnMappings.Add("services", "services");
            tableMapping.ColumnMappings.Add("Pname", "Pname");
            tableMapping.ColumnMappings.Add("personInChrageAddress", "personInChrageAddress");
            tableMapping.ColumnMappings.Add("qualification", "qualification");
            tableMapping.ColumnMappings.Add("institution", "institution");
            tableMapping.ColumnMappings.Add("registrationNumber", "registrationNumber");
            tableMapping.ColumnMappings.Add("Central_StateCouncilName", "Central_StateCouncilName");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("DistrictName", "DistrictName");
            tableMapping.ColumnMappings.Add("StateName", "StateName");
            tableMapping.ColumnMappings.Add("pinCode", "pinCode");
            tableMapping.ColumnMappings.Add("certificateFilePath", "certificateFilePath");
            tableMapping.ColumnMappings.Add("operatedByName", "operatedByName");
            tableMapping.ColumnMappings.Add("meeRegisNo", "meeRegisNo");
            tableMapping.ColumnMappings.Add("certiGendBy", "certiGendBy");
            tableMapping.ColumnMappings.Add("certificateGeneratedDate", "certificateGeneratedDate");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("applicantMobileNo", "applicantMobileNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetNUHrptDetail";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.GetNUHrptDetailDataTable dataTable, global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetNUHrptDetailDataTable NUHcerRpt(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetNUHrptDetailDataTable dataTable = new DataSetNUH.GetNUHrptDetailDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_GetCertificateDetialDICTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_GetCertificateDetialDICTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_GetCertificateDetialDIC";
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("address", "address");
            tableMapping.ColumnMappings.Add("disabilityType", "disabilityType");
            tableMapping.ColumnMappings.Add("disabilityDetail", "disabilityDetail");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("certiGenDate", "certiGenDate");
            tableMapping.ColumnMappings.Add("monthYear", "monthYear");
            tableMapping.ColumnMappings.Add("markOfIdentification", "markOfIdentification");
            tableMapping.ColumnMappings.Add("regisIdDIC", "regisIdDIC");
            tableMapping.ColumnMappings.Add("disabilityPer", "disabilityPer1");
            tableMapping.ColumnMappings.Add("reassName", "reassName");
            tableMapping.ColumnMappings.Add("conditionName", "conditionName");
            tableMapping.ColumnMappings.Add("passportsizephoto", "passportsizephoto");
            tableMapping.ColumnMappings.Add("photoIdNo", "photoIdNo");
            tableMapping.ColumnMappings.Add("idProofName", "idProofName");
            tableMapping.ColumnMappings.Add("certiGendBy", "certiGendBy");
            tableMapping.ColumnMappings.Add("inprocessDICId", "inprocessDICId");
            tableMapping.ColumnMappings.Add("committeeId", "committeeId1");
            tableMapping.ColumnMappings.Add("reassPeriod", "reassPeriod");
            tableMapping.ColumnMappings.Add("reassPeriodType", "reassPeriodType");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_GetCertificateDetialDIC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdDIC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.proc_GetCertificateDetialDICDataTable dataTable, global::System.Nullable<long> regisIdDIC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdDIC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdDIC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_GetCertificateDetialDICDataTable GetData(global::System.Nullable<long> regisIdDIC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdDIC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdDIC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_GetCertificateDetialDICDataTable dataTable = new DataSetNUH.proc_GetCertificateDetialDICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_getNUHChildRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_getNUHChildRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_getNUHChildRpt";
            tableMapping.ColumnMappings.Add("nursingDocumentId", "nursingDocumentId");
            tableMapping.ColumnMappings.Add("regisIdNUH", "regisIdNUH");
            tableMapping.ColumnMappings.Add("staffName", "staffName");
            tableMapping.ColumnMappings.Add("staffqualification", "staffqualification");
            tableMapping.ColumnMappings.Add("staffinstitution", "staffinstitution");
            tableMapping.ColumnMappings.Add("staffRegistrationNo", "staffRegistrationNo");
            tableMapping.ColumnMappings.Add("staffNameOfMCI_SMF", "staffNameOfMCI_SMF");
            tableMapping.ColumnMappings.Add("filePath", "filePath");
            tableMapping.ColumnMappings.Add("stafffatherName", "stafffatherName");
            tableMapping.ColumnMappings.Add("staffRegistrationType", "staffRegistrationType");
            tableMapping.ColumnMappings.Add("part_fullTime", "part_fullTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_getNUHChildRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.proc_getNUHChildRptDataTable dataTable, global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_getNUHChildRptDataTable NUHchildRpt(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_getNUHChildRptDataTable dataTable = new DataSetNUH.proc_getNUHChildRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetMERdetailChildRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetMERdetailChildRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetMERdetailChildRpt";
            tableMapping.ColumnMappings.Add("Id", "Id");
            tableMapping.ColumnMappings.Add("regisByuser", "regisByuser");
            tableMapping.ColumnMappings.Add("regisMERId", "regisMERId");
            tableMapping.ColumnMappings.Add("billId", "billId");
            tableMapping.ColumnMappings.Add("BillName", "BillName");
            tableMapping.ColumnMappings.Add("billNo", "billNo");
            tableMapping.ColumnMappings.Add("billdate", "billdate");
            tableMapping.ColumnMappings.Add("billAmount", "billAmount");
            tableMapping.ColumnMappings.Add("billFilePath", "billFilePath");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetMERdetailChildRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdMER", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.GetMERdetailChildRptDataTable dataTable, global::System.Nullable<long> regisIdMER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdMER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdMER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetMERdetailChildRptDataTable GetMERchildRpt(global::System.Nullable<long> regisIdMER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdMER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdMER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetMERdetailChildRptDataTable dataTable = new DataSetNUH.GetMERdetailChildRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetILCdetailForCertificateRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetILCdetailForCertificateRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetILCdetailForCertificateRpt";
            tableMapping.ColumnMappings.Add("regByUser", "regByUser");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("regisIdILC", "regisIdILC");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("certGenerateByDoc", "certGenerateByDoc");
            tableMapping.ColumnMappings.Add("certGenerateByDesig", "certGenerateByDesig");
            tableMapping.ColumnMappings.Add("identificationMark", "identificationMark");
            tableMapping.ColumnMappings.Add("inspecttionCompeletionDate", "inspecttionCompeletionDate");
            tableMapping.ColumnMappings.Add("diseaseName", "diseaseName");
            tableMapping.ColumnMappings.Add("bedRest", "bedRest");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("appliedDate", "appliedDate");
            tableMapping.ColumnMappings.Add("DistrictName", "DistrictName");
            tableMapping.ColumnMappings.Add("treatmentFrom", "treatmentFrom");
            tableMapping.ColumnMappings.Add("treatmentto", "treatmentto");
            tableMapping.ColumnMappings.Add("idTypeName", "idTypeName");
            tableMapping.ColumnMappings.Add("idNumber", "idNumber");
            tableMapping.ColumnMappings.Add("fullName1", "fullName1");
            tableMapping.ColumnMappings.Add("illnessDetail", "illnessDetail");
            tableMapping.ColumnMappings.Add("oldCertificateNumber", "oldCertificateNumber");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetILCdetailForCertificateRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdILC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetILCdetailForCertificateRptDataTable ILCcertificate_rpt(global::System.Nullable<long> regisIdILC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdILC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdILC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetILCdetailForCertificateRptDataTable dataTable = new DataSetNUH.GetILCdetailForCertificateRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetFICdetailForCertificateRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetFICdetailForCertificateRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetFICdetailForCertificateRpt";
            tableMapping.ColumnMappings.Add("regisIdFIC", "regisIdFIC");
            tableMapping.ColumnMappings.Add("regByUser", "regByUser");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("Area", "Area");
            tableMapping.ColumnMappings.Add("certGenerateByDoc", "certGenerateByDoc");
            tableMapping.ColumnMappings.Add("certGenerateByDesig", "certGenerateByDesig");
            tableMapping.ColumnMappings.Add("identificationMark", "identificationMark");
            tableMapping.ColumnMappings.Add("inspecttionCompeletionDate", "inspecttionCompeletionDate");
            tableMapping.ColumnMappings.Add("appliedDate", "appliedDate");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("opdAddress", "opdAddress");
            tableMapping.ColumnMappings.Add("illnessDetail", "illnessDetail");
            tableMapping.ColumnMappings.Add("HUDistrict", "HUDistrict");
            tableMapping.ColumnMappings.Add("HUAuthorisedPerson", "HUAuthorisedPerson");
            tableMapping.ColumnMappings.Add("ILCcertificateNo", "ILCcertificateNo");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetFICdetailForCertificateRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdFIC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetFICdetailForCertificateRptDataTable GetFICdetailForCertificateRpt(global::System.Nullable<long> regisIdFIC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdFIC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdFIC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetFICdetailForCertificateRptDataTable dataTable = new DataSetNUH.GetFICdetailForCertificateRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_GetImmuChildCertificateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_GetImmuChildCertificateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_GetImmuChildCertificate";
            tableMapping.ColumnMappings.Add("regisIdICC", "regisIdICC");
            tableMapping.ColumnMappings.Add("isExsistImmuName", "isExsistImmuName");
            tableMapping.ColumnMappings.Add("dateOfImmunization", "dateOfImmunization");
            tableMapping.ColumnMappings.Add("immuName", "immuName");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("isGENERATED", "isGENERATED");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("certificateGeneratedDate", "certificateGeneratedDate");
            tableMapping.ColumnMappings.Add("hospitalName", "hospitalName");
            tableMapping.ColumnMappings.Add("HUDistrict", "HUDistrict");
            tableMapping.ColumnMappings.Add("HUAuthorisedPerson", "HUAuthorisedPerson");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_GetImmuChildCertificate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regidicc", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_GetImmuChildCertificateDataTable getICC_rpt(global::System.Nullable<int> regidicc) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regidicc.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(regidicc.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_GetImmuChildCertificateDataTable dataTable = new DataSetNUH.proc_GetImmuChildCertificateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetMERdetailRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetMERdetailRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetMERdetailRpt";
            tableMapping.ColumnMappings.Add("regisIdMER", "regisIdMER");
            tableMapping.ColumnMappings.Add("regByUser", "regByUser");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("deptName", "deptName");
            tableMapping.ColumnMappings.Add("designation", "designation");
            tableMapping.ColumnMappings.Add("treatmentId", "treatmentId");
            tableMapping.ColumnMappings.Add("empfullName", "empfullName");
            tableMapping.ColumnMappings.Add("gender", "gender");
            tableMapping.ColumnMappings.Add("empAge", "empAge");
            tableMapping.ColumnMappings.Add("father_HusbandName", "father_HusbandName");
            tableMapping.ColumnMappings.Add("officeName", "officeName");
            tableMapping.ColumnMappings.Add("patientdoctorName", "patientdoctorName");
            tableMapping.ColumnMappings.Add("totalAmt", "totalAmt");
            tableMapping.ColumnMappings.Add("xRayAmt", "xRayAmt");
            tableMapping.ColumnMappings.Add("patienthospitalName", "patienthospitalName");
            tableMapping.ColumnMappings.Add("patienttreatmentFromDate", "patienttreatmentFromDate");
            tableMapping.ColumnMappings.Add("patienttreatmentToDate", "patienttreatmentToDate");
            tableMapping.ColumnMappings.Add("patientdiseaseName", "patientdiseaseName");
            tableMapping.ColumnMappings.Add("postingAddress", "postingAddress");
            tableMapping.ColumnMappings.Add("patientName", "patientName");
            tableMapping.ColumnMappings.Add("patientage", "patientage");
            tableMapping.ColumnMappings.Add("patientgender", "patientgender");
            tableMapping.ColumnMappings.Add("patientrelationsWithEmployee", "patientrelationsWithEmployee");
            tableMapping.ColumnMappings.Add("officeInchargeName", "officeInchargeName");
            tableMapping.ColumnMappings.Add("hospitalType", "hospitalType");
            tableMapping.ColumnMappings.Add("isAdvanceTaken", "isAdvanceTaken");
            tableMapping.ColumnMappings.Add("advanceAmount", "advanceAmount");
            tableMapping.ColumnMappings.Add("advanceLetterNo", "advanceLetterNo");
            tableMapping.ColumnMappings.Add("advanceDate", "advanceDate");
            tableMapping.ColumnMappings.Add("postingDistrictName", "postingDistrictName");
            tableMapping.ColumnMappings.Add("postingPinCode", "postingPinCode");
            tableMapping.ColumnMappings.Add("xRayAmount", "xRayAmount");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetMERdetailRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdMER", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetMERdetailRptDataTable GetMERdetailRpt(global::System.Nullable<long> regisIdMER) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdMER.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdMER.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetMERdetailRptDataTable dataTable = new DataSetNUH.GetMERdetailRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetMLCdetailForCertificateRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetMLCdetailForCertificateRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetMLCdetailForCertificateRpt";
            tableMapping.ColumnMappings.Add("regisIdMLC", "regisIdMLC");
            tableMapping.ColumnMappings.Add("regByUser", "regByUser");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("patientName", "patientName");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("patientGender", "patientGender");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("broughtByDesignation", "broughtByDesignation");
            tableMapping.ColumnMappings.Add("restFor", "restFor");
            tableMapping.ColumnMappings.Add("treatmentFrom", "treatmentFrom1");
            tableMapping.ColumnMappings.Add("treatmentto", "treatmentto1");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("certificateGeneratedDate", "certificateGeneratedDate");
            tableMapping.ColumnMappings.Add("HUName", "HUName");
            tableMapping.ColumnMappings.Add("HUDistrict", "HUDistrict");
            tableMapping.ColumnMappings.Add("HUAuthorisedPerson", "HUAuthorisedPerson");
            tableMapping.ColumnMappings.Add("markOfIdentification", "markOfIdentification");
            tableMapping.ColumnMappings.Add("patientBroughtBy", "patientBroughtBy");
            tableMapping.ColumnMappings.Add("dtl", "dtl");
            tableMapping.ColumnMappings.Add("restdays", "restdays");
            tableMapping.ColumnMappings.Add("patientFatherName", "patientFatherName");
            tableMapping.ColumnMappings.Add("doctorName", "doctorName");
            tableMapping.ColumnMappings.Add("seniorityNo", "seniorityNo");
            tableMapping.ColumnMappings.Add("MLCtime", "MLCtime");
            tableMapping.ColumnMappings.Add("MLCDate", "MLCDate1");
            tableMapping.ColumnMappings.Add("OPDNumber", "OPDNumber");
            tableMapping.ColumnMappings.Add("forwardtypeName", "forwardtypeName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetMLCdetailForCertificateRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdMLC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetMLCdetailForCertificateRptDataTable GetMLCdetailForCertificateRpt(global::System.Nullable<long> regisIdMLC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdMLC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdMLC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetMLCdetailForCertificateRptDataTable dataTable = new DataSetNUH.GetMLCdetailForCertificateRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetMLCCHILDdetailForCertificateRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetMLCCHILDdetailForCertificateRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetMLCCHILDdetailForCertificateRpt";
            tableMapping.ColumnMappings.Add("EnquiryID", "EnquiryID");
            tableMapping.ColumnMappings.Add("regisId", "regisId");
            tableMapping.ColumnMappings.Add("regisByuser", "regisByuser");
            tableMapping.ColumnMappings.Add("EnquiryDetails", "EnquiryDetails");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetMLCCHILDdetailForCertificateRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdMLC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetMLCCHILDdetailForCertificateRptDataTable GetMLCCHILDdetailForCertificateRpt(global::System.Nullable<long> regisIdMLC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdMLC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdMLC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetMLCCHILDdetailForCertificateRptDataTable dataTable = new DataSetNUH.GetMLCCHILDdetailForCertificateRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_rptIMC_CertificateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_rptIMC_CertificateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_rptIMC_Certificate";
            tableMapping.ColumnMappings.Add("regisIdIMC", "regisIdIMC");
            tableMapping.ColumnMappings.Add("vaccineId", "vaccineId");
            tableMapping.ColumnMappings.Add("vaccineName", "vaccineName");
            tableMapping.ColumnMappings.Add("isGENERATED", "isGENERATED");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("cerificateGeneratedate", "cerificateGeneratedate");
            tableMapping.ColumnMappings.Add("ImmunizationDate", "ImmunizationDate1");
            tableMapping.ColumnMappings.Add("HUName", "HUName");
            tableMapping.ColumnMappings.Add("HUDistrict", "HUDistrict");
            tableMapping.ColumnMappings.Add("HUAuthorisedPerson", "HUAuthorisedPerson");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_rptIMC_Certificate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdIMC", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_rptIMC_CertificateDataTable proc_rptIMC_Certificate(global::System.Nullable<int> regisIdIMC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdIMC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(regisIdIMC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_rptIMC_CertificateDataTable dataTable = new DataSetNUH.proc_rptIMC_CertificateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetDECdetailForCertificateRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetDECdetailForCertificateRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetDECdetailForCertificateRpt";
            tableMapping.ColumnMappings.Add("regisIdDEC", "regisIdDEC");
            tableMapping.ColumnMappings.Add("regByUser", "regByUser");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("certificateGeneratedDate", "certificateGeneratedDate");
            tableMapping.ColumnMappings.Add("deathPersonName", "deathPersonName");
            tableMapping.ColumnMappings.Add("fullName", "fullName");
            tableMapping.ColumnMappings.Add("dod", "dod");
            tableMapping.ColumnMappings.Add("regByuser", "regByuser");
            tableMapping.ColumnMappings.Add("HUName", "HUName");
            tableMapping.ColumnMappings.Add("HUDistrict", "HUDistrict");
            tableMapping.ColumnMappings.Add("HUAuthorisedPerson", "HUAuthorisedPerson");
            tableMapping.ColumnMappings.Add("fatherName", "fatherName");
            tableMapping.ColumnMappings.Add("deathPersonAddress", "deathPersonAddress");
            tableMapping.ColumnMappings.Add("relationName", "relationName");
            tableMapping.ColumnMappings.Add("fathersName", "fathersName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetDECdetailForCertificateRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisIdDEC", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.GetDECdetailForCertificateRptDataTable GETdecRPT(global::System.Nullable<long> regisIdDEC) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisIdDEC.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisIdDEC.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.GetDECdetailForCertificateRptDataTable dataTable = new DataSetNUH.GetDECdetailForCertificateRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_getNUHChildDOCRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_getNUHChildDOCRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_getNUHChildDOCRpt";
            tableMapping.ColumnMappings.Add("doctorId", "doctorId");
            tableMapping.ColumnMappings.Add("regisNUHId", "regisNUHId");
            tableMapping.ColumnMappings.Add("doctorName", "doctorName");
            tableMapping.ColumnMappings.Add("doctorFathersName", "doctorFathersName");
            tableMapping.ColumnMappings.Add("doctorQualification", "doctorQualification");
            tableMapping.ColumnMappings.Add("NameofFoundation", "NameofFoundation");
            tableMapping.ColumnMappings.Add("doctorregistrationType", "doctorregistrationType");
            tableMapping.ColumnMappings.Add("doctorregistrationNo", "doctorregistrationNo");
            tableMapping.ColumnMappings.Add("doctorPart_FullTime", "doctorPart_FullTime");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_getNUHChildDOCRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_getNUHChildDOCRptDataTable getNUHChildDOCRpt(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_getNUHChildDOCRptDataTable dataTable = new DataSetNUH.proc_getNUHChildDOCRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_getNUHChildOwnerRptTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_getNUHChildOwnerRptTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_getNUHChildOwnerRpt";
            tableMapping.ColumnMappings.Add("regisIdNUH", "regisIdNUH");
            tableMapping.ColumnMappings.Add("ownerName", "ownerName");
            tableMapping.ColumnMappings.Add("ownerAge", "ownerAge");
            tableMapping.ColumnMappings.Add("ownerFatherName", "ownerFatherName");
            tableMapping.ColumnMappings.Add("ownerMobileNo", "ownerMobileNo");
            tableMapping.ColumnMappings.Add("ownerEmailId", "ownerEmailId");
            tableMapping.ColumnMappings.Add("ownerAddress", "ownerAddress");
            tableMapping.ColumnMappings.Add("ownerStateId", "ownerStateId");
            tableMapping.ColumnMappings.Add("ownerStateName", "ownerStateName");
            tableMapping.ColumnMappings.Add("ownerDistrictId", "ownerDistrictId");
            tableMapping.ColumnMappings.Add("ownerDistrictName", "ownerDistrictName");
            tableMapping.ColumnMappings.Add("ownerPincode", "ownerPincode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_getNUHChildOwnerRpt";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_getNUHChildOwnerRptDataTable proc_getNUHChildOwnerRpt(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_getNUHChildOwnerRptDataTable dataTable = new DataSetNUH.proc_getNUHChildOwnerRptDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Proc_GetCommitteeMemberTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Proc_GetCommitteeMemberTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Proc_GetCommitteeMember";
            tableMapping.ColumnMappings.Add("commMemName", "commMemName");
            tableMapping.ColumnMappings.Add("commMemDesig", "commMemDesig");
            tableMapping.ColumnMappings.Add("commMemDept", "commMemDept");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Proc_GetCommitteeMember";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inprocessAGCId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.Proc_GetCommitteeMemberDataTable Proc_GetCommitteeMember(global::System.Nullable<long> inprocessAGCId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inprocessAGCId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inprocessAGCId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.Proc_GetCommitteeMemberDataTable dataTable = new DataSetNUH.Proc_GetCommitteeMemberDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_rptAGC_CertificateTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_rptAGC_CertificateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_rptAGC_Certificate";
            tableMapping.ColumnMappings.Add("regisIdAGC", "regisIdAGC");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("certiGendBy", "certiGendBy");
            tableMapping.ColumnMappings.Add("inprocessAGCId", "inprocessAGCId");
            tableMapping.ColumnMappings.Add("susName", "susName");
            tableMapping.ColumnMappings.Add("susFatherName", "susFatherName");
            tableMapping.ColumnMappings.Add("appliedDate", "appliedDate");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("DistrictName", "DistrictName");
            tableMapping.ColumnMappings.Add("appStatus", "appStatus");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("susaddress", "susaddress");
            tableMapping.ColumnMappings.Add("susstateName", "susstateName");
            tableMapping.ColumnMappings.Add("susdistrictName", "susdistrictName");
            tableMapping.ColumnMappings.Add("suspinCode", "suspinCode");
            tableMapping.ColumnMappings.Add("orderDetail", "orderDetail");
            tableMapping.ColumnMappings.Add("orderNo", "orderNo");
            tableMapping.ColumnMappings.Add("xRayPlateNo", "xRayPlateNo");
            tableMapping.ColumnMappings.Add("dentalPlateNo", "dentalPlateNo");
            tableMapping.ColumnMappings.Add("markOfIdentification", "markOfIdentification");
            tableMapping.ColumnMappings.Add("susphotoFile", "susphotoFile");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_rptAGC_Certificate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.proc_rptAGC_CertificateDataTable dataTable, global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_rptAGC_CertificateDataTable GetData(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_rptAGC_CertificateDataTable dataTable = new DataSetNUH.proc_rptAGC_CertificateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class proc_rptAGC_CertificateReportTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public proc_rptAGC_CertificateReportTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "proc_rptAGC_CertificateReport";
            tableMapping.ColumnMappings.Add("regisIdAGC", "regisIdAGC");
            tableMapping.ColumnMappings.Add("registrationNo", "registrationNo");
            tableMapping.ColumnMappings.Add("certiGendBy", "certiGendBy");
            tableMapping.ColumnMappings.Add("inprocessAGCId", "inprocessAGCId");
            tableMapping.ColumnMappings.Add("susName", "susName");
            tableMapping.ColumnMappings.Add("susFatherName", "susFatherName");
            tableMapping.ColumnMappings.Add("appliedDate", "appliedDate");
            tableMapping.ColumnMappings.Add("age", "age");
            tableMapping.ColumnMappings.Add("DistrictName", "DistrictName");
            tableMapping.ColumnMappings.Add("appStatus", "appStatus");
            tableMapping.ColumnMappings.Add("certificateNo", "certificateNo");
            tableMapping.ColumnMappings.Add("susaddress", "susaddress");
            tableMapping.ColumnMappings.Add("susstateName", "susstateName");
            tableMapping.ColumnMappings.Add("susdistrictName", "susdistrictName");
            tableMapping.ColumnMappings.Add("suspinCode", "suspinCode");
            tableMapping.ColumnMappings.Add("orderDetail", "orderDetail");
            tableMapping.ColumnMappings.Add("orderNo", "orderNo");
            tableMapping.ColumnMappings.Add("xRayPlateNo", "xRayPlateNo");
            tableMapping.ColumnMappings.Add("dentalPlateNo", "dentalPlateNo");
            tableMapping.ColumnMappings.Add("markOfIdentification", "markOfIdentification");
            tableMapping.ColumnMappings.Add("susphotoFile", "susphotoFile");
            tableMapping.ColumnMappings.Add("orderDate", "orderDate");
            tableMapping.ColumnMappings.Add("applicantSubTypeName", "applicantSubTypeName");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.proc_rptAGC_Certificate";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@regisId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.proc_rptAGC_CertificateReportDataTable dataTable, global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.proc_rptAGC_CertificateReportDataTable GetData(global::System.Nullable<long> regisId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((regisId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(regisId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.proc_rptAGC_CertificateReportDataTable dataTable = new DataSetNUH.proc_rptAGC_CertificateReportDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Proc_GetCommitteeMemberDICTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public Proc_GetCommitteeMemberDICTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Proc_GetCommitteeMemberDIC";
            tableMapping.ColumnMappings.Add("commMemName", "commMemName");
            tableMapping.ColumnMappings.Add("commMemDesig", "commMemDesig");
            tableMapping.ColumnMappings.Add("commMemDept", "commMemDept");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["CMSModule"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.Proc_GetCommitteeMemberDIC";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@inprocessDICId", global::System.Data.SqlDbType.BigInt, 8, global::System.Data.ParameterDirection.Input, 19, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSetNUH.Proc_GetCommitteeMemberDICDataTable dataTable, global::System.Nullable<long> inprocessDICId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inprocessDICId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inprocessDICId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSetNUH.Proc_GetCommitteeMemberDICDataTable Proc_GetCommitteeMemberDIC(global::System.Nullable<long> inprocessDICId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((inprocessDICId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((long)(inprocessDICId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSetNUH.Proc_GetCommitteeMemberDICDataTable dataTable = new DataSetNUH.Proc_GetCommitteeMemberDICDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSetNUH dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSetNUH dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSetNUH dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSetNUH dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591